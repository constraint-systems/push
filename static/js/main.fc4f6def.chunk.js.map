{"version":3,"sources":["Pointer.tsx","Actions.tsx","SelectBox.tsx","SelectionBox.js","PointerOne.tsx","PointerThree.tsx","PointerTwo.tsx","PointerMiddle.tsx","PointerComponent.tsx","PointerHover.tsx","Box.tsx","OutlineBox.tsx","FullscreenQuad.tsx","View.tsx","State.tsx","Keyboard.tsx","Bars.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Pointer","state","active","subPointers","initial","current","diff","logEl","markEl","this","THREE","set","el","updateMark","style","display","left","x","top","y","checkRayIntersect","pointer","visBuffer","group","geometry","attributes","visible","array","raycaster","setFromCamera","clip2","camera","intersected","intersectObject","index","instanceId","getStackGridIndexFromInstanceIndex","allCols","Math","floor","depth","row","cols","col","clearSelected","selectedGrid","fill","renderSelected","selectedBuffer","outlineBoxes","selected","i","length","val","needsUpdate","selectAndRenderCells","selectGridIndex","toggleSelectAndRenderCells","gridIndex","controlIndexCache","panCameraStart","initialCameraPosition","copy","position","panCamera","zoomPixel","tan","fov","PI","z","window","innerHeight","discretePanCamera","rotateStart","initialRotation","rotation","rotate","rotateY","min","max","worldPixel","rotateX","boundZoom","near","far","discreteZoom","change","percent","print","m","printMultiplier","pw","innerWidth","ph","printTarget","setSize","setClearColor","backgroundColor","backgroundAlpha","render","scene","c","document","createElement","width","view","height","getContext","drawImage","domElement","link","toBlob","blob","setAttribute","round","Date","getTime","URL","createObjectURL","dispatchEvent","MouseEvent","bubbles","cancelable","domLoadImage","callback","input","querySelector","handleChange","a","files","item","type","indexOf","src","removeEventListener","addEventListener","SelectBox","mouse1","mouse2","div","Three","color","highlightColor","rgb","getStyle","rgba","slice","highlightAlpha","background","border","body","appendChild","sub","remove","_frustum","_center","_tmpPoint","_vecNear","_vecTopLeft","_vecTopRight","_vecDownRight","_vecDownLeft","_vecFarTopLeft","_vecFarTopRight","_vecFarDownRight","_vecFarDownLeft","_vectemp1","_vectemp2","_vectemp3","_matrix","_quaternion","_scale","SelectionBox","deep","Number","MAX_VALUE","startPoint","endPoint","collection","instances","updateFrustum","searchChildInFrustum","EPSILON","updateProjectionMatrix","updateMatrixWorld","isPerspectiveCamera","setFromMatrixPosition","matrixWorld","unproject","normalize","multiplyScalar","add","planes","setFromCoplanarPoints","normal","isOrthographicCamera","right","down","console","error","frustum","object","isMesh","isLine","isPoints","isInstancedMesh","uuid","count","getMatrixAt","decompose","applyMatrix4","containsPoint","push","boundingSphere","computeBoundingSphere","center","children","PointerOne","clip","tempClip","ray","areaSelecting","pushPulling","selectIndexCache","startTime","selectBox","selectionBox","distance","p1","now","pressed","includes","update","setRay","intersectIndex","gridCache","isSelected","stackIndex","checkSelected","heightGridCache","heightGrid","visibleBuffer","d","updateDepth","pushPullSelected","abs","deSelectGridIndex","destroy","select","indexes","maxDepth","possibilities","possibility","areaSelectEnd","PointerThree","p2","p3","divideScalar","PointerTwo","initialBetween","between","initialRadius","sqrt","radius","continuousZoom","PointerMiddle","e","clientX","clientY","SubPointer","id","pointerId","pointers","start","cancel","end","move","getPointerIndexById","splice","PointerComponent","useEffect","canvas","handlePointerMove","lastPointerButtonPressed","getPointerById","PointerHover","handlePointerDown","button","setPointerCapture","handlePointerUp","releasePointerCapture","handleMousewheel","preventDefault","deltaY","passive","map","spacePointer","Box","cellSize","rows","texture","uv","getAttribute","setXY","texScale","offsets","r","Float32Array","uniforms","texture1","value","material","vertexShader","fragmentShader","matrix","setPosition","setMatrixAt","OutlineBox","Array","highlightScene","FullscreenQuad","renderTarget","transparent","opacity","cube","View","holder","topLeft","botRight","kind","activeHandle","mouseOrigin","mouseDiff","minOrigin","maxOrigin","dragging","viewColor","pointerEvents","stopPropagation","bottom","overflow","positions","percents","toString","transform","padding","inner","zIndex","from","childNodes","borderColor","showHandles","hideHandles","State","renderer","boxes","keyInterupts","hoverKeyInterrupts","currentImageDims","pressedOne","viewScene","printCanvas","fullscreenQuad","mode","isTouch","logarithmicDepthBuffer","antialias","autoClear","setPixelRatio","devicePixelRatio","alpha","matchMedia","matches","visibleHeight","loadImage","animate","loader","setCrossOrigin","load","limit","img","image","aspect","ray1","ray2","changeMode","log","target","clear","setRenderTarget","requestAnimationFrame","bind","newMode","Keyboard","downHandler","press","key","toLowerCase","interruptPointerKeyDown","upHandler","interruptPointerKeyUp","Button","clickHandler","shade","textColor","role","className","minWidth","onClick","HandleShortcut","action","shortcut","ctrlKey","Dialog","title","setDisplay","clearModals","useState","offsetX","setOffSetX","offsetY","setOffSetY","pointerDown","useRef","pointerOrigin","offsetOrigin","maxHeight","maxWidth","onPointerDown","onPointerMove","onPointerUp","Bars","setMode","isFocus","setIsFocus","setTextColor","showAbout","setShowAbout","showColors","setShowColors","setColor","isTransparent","setIsTransparent","is2x","setIs2x","setHighlightColor","setHighlightAlpha","showView","setShowView","showControls","setShowControls","setViewColor","colorRef","viewKind","setViewKind","parseInt","replace","threeColor","g","b","updateColor","getHex","href","rel","checked","onChange","step","parseFloat","toFixed","App","canvasRef","setState","newState","handleResize","xChange","yChange","minToCenterX","maxToCenterX","minToCenterY","maxToCenterY","onPaste","clipboardData","items","file","getAsFile","onDrop","dataTransfer","onDrag","dropEffect","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fc4f6def.chunk.js","sourcesContent":["import * as THREE from \"three\";\nimport { SubPointer } from \"./PointerComponent\";\nimport State from \"./State\";\n\nclass Pointer {\n  active: boolean;\n  subPointers: null | Array<SubPointer>;\n  initial: THREE.Vector2;\n  current: THREE.Vector2;\n  diff: THREE.Vector2;\n  logEl: null | HTMLElement;\n  markEl: null | HTMLElement;\n  state: State;\n\n  constructor(state: State) {\n    this.active = false;\n    this.subPointers = null;\n    this.initial = new THREE.Vector2();\n    this.current = new THREE.Vector2();\n    this.diff = new THREE.Vector2();\n    this.logEl = null;\n    this.markEl = null;\n    this.state = state;\n  }\n\n  start(subPointers: Array<SubPointer>) {\n    this.active = true;\n  }\n\n  end() {\n    this.active = false;\n    this.current.set(0, 0);\n    this.diff.set(0, 0);\n  }\n\n  setMarkEl(el: HTMLElement) {\n    this.markEl = el;\n    this.updateMark();\n  }\n\n  updateMark() {\n    if (this.markEl !== null) {\n      if (this.active) {\n        this.markEl.style.display = \"block\";\n      } else {\n        this.markEl.style.display = \"none\";\n      }\n      this.markEl.style.left = this.current.x + \"px\";\n      this.markEl.style.top = this.current.y + \"px\";\n    }\n  }\n}\n\nexport default Pointer;\n","// import * as THREE from \"three\";\nimport PointerOne from \"./PointerOne\";\nimport Pointer from \"./Pointer\";\nimport State from \"./State\";\nimport PointerTwo from \"./PointerTwo\";\nimport { SelectionBox } from \"./SelectionBox\";\n\nexport const checkRayIntersect = (pointer: PointerOne) => {\n  // @ts-ignore\n  const visBuffer = pointer.state.group.geometry.attributes.visible.array;\n  pointer.raycaster.setFromCamera(pointer.clip2, pointer.state.camera);\n  const intersected = pointer.raycaster.intersectObject(pointer.state.group);\n  for (const intersect of intersected) {\n    const index = intersect.instanceId!;\n    if (visBuffer[index]) {\n      return index;\n    }\n  }\n  return null;\n};\n\nexport const getStackGridIndexFromInstanceIndex = (\n  state: State,\n  index: number\n) => {\n  const allCols = Math.floor(index / state.depth);\n  const row = Math.floor(allCols / state.cols);\n  const col = allCols % state.cols;\n  return row * state.cols + col;\n};\n\nexport const selectGridIndex = (state: State, index: number) => {\n  state.selectedGrid[index] = 1;\n};\n\nexport const deSelectGridIndex = (state: State, index: number) => {\n  state.selectedGrid[index] = 0;\n};\n\nexport const clearSelected = (state: State) => {\n  state.selectedGrid.fill(0);\n};\n\nexport const renderSelected = (state: State) => {\n  // @ts-ignore\n  const selectedBuffer = state.outlineBoxes.geometry.attributes.selected.array;\n\n  for (let i = 0; i < state.selectedGrid.length; i++) {\n    const val = state.selectedGrid[i];\n    selectedBuffer[i] = val;\n  }\n  // @ts-ignore\n  state.outlineBoxes.geometry.attributes.selected.needsUpdate = true;\n};\n\nexport const selectAndRenderCells = (state: State, index: number) => {\n  const gridIndex = getStackGridIndexFromInstanceIndex(state, index);\n  selectGridIndex(state, gridIndex);\n  renderSelected(state);\n};\n\nexport const deSelectAndRenderCells = (state: State, index: number) => {\n  const gridIndex = getStackGridIndexFromInstanceIndex(state, index);\n  deSelectGridIndex(state, gridIndex);\n  renderSelected(state);\n};\n\nexport const toggleSelectAndRenderCells = (\n  state: State,\n  pointer: PointerOne,\n  index: number\n) => {\n  const gridIndex = getStackGridIndexFromInstanceIndex(state, index);\n  if (pointer.controlIndexCache !== gridIndex) {\n    state.selectedGrid[gridIndex] = state.selectedGrid[gridIndex] === 0 ? 1 : 0;\n    renderSelected(state);\n    pointer.controlIndexCache = gridIndex;\n  }\n};\n\nexport const panCameraStart = (state: State) => {\n  state.initialCameraPosition.copy(state.camera.position);\n};\n\nexport const panCamera = (state: State, pointer: Pointer) => {\n  const visibleHeight =\n    2 * Math.tan((state.camera.fov * Math.PI) / 360) * state.camera.position.z;\n  const zoomPixel = visibleHeight / window.innerHeight;\n  state.camera.position.x =\n    state.initialCameraPosition.x - pointer.diff.x * zoomPixel;\n  state.camera.position.y =\n    state.initialCameraPosition.y + pointer.diff.y * zoomPixel;\n};\n\nexport const discretePanCamera = (state: State, diff: Array<number>) => {\n  const visibleHeight =\n    2 * Math.tan((state.camera.fov * Math.PI) / 360) * state.camera.position.z;\n  const zoomPixel = visibleHeight / window.innerHeight;\n  state.camera.position.x -= 16 * diff[0] * zoomPixel;\n  state.camera.position.y += 16 * diff[1] * zoomPixel;\n};\n\nexport const interruptPointerKeyDown = (state: State, press: string) => {\n  // pointerOne interrupts\n  if (state.keyInterupts.includes(press)) {\n    if (state.PointerOne.active) {\n      state.PointerOne.end();\n      state.PointerOne.start(state.PointerOne.subPointers!);\n    }\n  }\n  if (state.hoverKeyInterrupts.includes(press)) {\n    if (state.PointerHover.active) {\n      state.PointerHover.start(\n        state.PointerHover.current.x,\n        state.PointerHover.current.y\n      );\n    }\n  }\n};\n\nexport const interruptPointerKeyUp = (state: State, press: string) => {\n  if (state.keyInterupts.includes(press)) {\n    if (state.PointerOne.active) {\n      const index = state.pressed.indexOf(press);\n      if (index !== -1) {\n        state.pressed.splice(index, 1);\n      }\n      state.PointerOne.end();\n      state.PointerOne.start(state.PointerOne.subPointers!);\n    }\n  }\n  if (state.hoverKeyInterrupts.includes(press)) {\n    if (state.PointerHover.active) {\n      state.PointerHover.start(\n        state.PointerHover.current.x,\n        state.PointerHover.current.y\n      );\n    }\n  }\n};\n\nexport const rotateStart = (state: State) => {\n  state.initialRotation.copy(state.group.rotation);\n};\n\nexport const rotate = (state: State, pointer: Pointer) => {\n  const rotateY = Math.min(\n    Math.PI / 2,\n    Math.max(\n      -Math.PI / 2,\n      state.initialRotation.y + pointer.diff.x * state.worldPixel\n    )\n  );\n  const rotateX = Math.min(\n    Math.PI / 2,\n    Math.max(\n      -Math.PI / 2,\n      state.initialRotation.x + pointer.diff.y * state.worldPixel\n    )\n  );\n  state.group.rotation.x = rotateX;\n  state.outlineBoxes.rotation.x = rotateX;\n  state.group.rotation.y = rotateY;\n  state.outlineBoxes.rotation.y = rotateY;\n};\n\nexport const boundZoom = (state: State, val: number) => {\n  const min = state.camera.near + 0.1;\n  const max = state.camera.far - 0.1;\n  return Math.min(max, Math.max(min, val));\n};\n\nexport const continuousZoomStart = (state: State) => {\n  state.initialCameraPosition.copy(state.camera.position);\n};\n\nexport const continuousZoom = (state: State, pointer: PointerTwo) => {\n  const initialRadius = Math.sqrt(\n    pointer.initialBetween.x * pointer.initialBetween.x +\n      pointer.initialBetween.y * pointer.initialBetween.y\n  );\n  const radius = Math.sqrt(\n    pointer.between.x * pointer.between.x +\n      pointer.between.y * pointer.between.y\n  );\n  const percent =\n    (window.innerHeight + (radius - initialRadius) * 2) / window.innerHeight;\n  state.camera.position.z = boundZoom(\n    state,\n    state.initialCameraPosition.z / percent\n  );\n};\n\nexport const discreteZoom = (state: State, change: number) => {\n  const percent = (window.innerHeight - change) / window.innerHeight;\n  state.camera.position.z = boundZoom(state, state.camera.position.z / percent);\n};\n\nexport const checkSelected = (state: State, index: number) => {\n  const stackIndex = getStackGridIndexFromInstanceIndex(state, index);\n  return state.selectedGrid[stackIndex];\n};\n\nexport const areaSelectEnd = (\n  state: State,\n  pointer: PointerOne,\n  selectionBox: SelectionBox\n) => {\n  selectionBox.endPoint.copy(pointer.clip);\n  selectionBox.select();\n  // @ts-ignore\n  const visBuffer = pointer.state.group.geometry.attributes.visible.array;\n  // @ts-ignore\n  const indexes = selectionBox.instances[state.group.uuid];\n\n  let maxDepth = 0;\n  let possibilities = [];\n  for (const index of indexes) {\n    // @ts-ignore\n    if (visBuffer[index]) {\n      // @ts-ignore\n      const allCols = Math.floor(index / state.depth);\n      const row = Math.floor(allCols / state.cols);\n      const col = allCols % state.cols;\n      let depth;\n      if (index < state.depth) {\n        depth = index;\n      } else {\n        depth = index % (row * state.cols * state.depth + col * state.depth);\n      }\n      if (depth === state.heightGrid[row * state.cols + col] - 1) {\n        maxDepth = Math.max(maxDepth, depth);\n        // depth, grid index\n        possibilities.push([depth, row * state.cols + col]);\n      }\n    }\n  }\n  for (const possibility of possibilities) {\n    if (possibility[0] === maxDepth) {\n      state.selectedGrid[possibility[1]] = 1;\n    }\n  }\n  renderSelected(state);\n};\n\nexport const pushPullSelected = (state: State, pointer: Pointer) => {\n  const visibleBuffer =\n    // @ts-ignore\n    state.group.geometry.attributes.visible.array;\n  for (let i = 0; i < state.selectedGrid.length; i++) {\n    const isSelected = state.selectedGrid[i];\n    if (isSelected) {\n      state.heightGrid[i] = Math.max(\n        1,\n        Math.min(\n          state.depth,\n          state.heightGridCache[i] + Math.round(pointer.diff.y / 8)\n        )\n      );\n      const height = state.heightGrid[i];\n      const row = Math.floor(i / state.cols);\n      const col = i % state.cols;\n      for (let d = 0; d < state.depth; d++) {\n        visibleBuffer[row * state.cols * state.depth + col * state.depth + d] =\n          d < height ? 1 : 0;\n      }\n    }\n  }\n  // @ts-ignore\n  state.group.geometry.attributes.visible.needsUpdate = true;\n  // @ts-ignore\n  state.outlineBoxes.updateDepth();\n};\n\nexport const print = (state: State) => {\n  const m = state.printMultiplier;\n  // const pw = window.innerWidth / ratio;\n  const pw = window.innerWidth;\n  // const ph = window.innerHeight / ratio;\n  const ph = window.innerHeight;\n  state.printTarget.setSize(pw * m, ph * m);\n  state.printTarget.setClearColor(state.backgroundColor, state.backgroundAlpha);\n  state.printTarget.render(state.scene, state.camera);\n\n  const c = document.createElement(\"canvas\");\n  c.width = state.view.diff.x * m;\n  c.height = state.view.diff.y * m;\n  const ctx = c.getContext(\"2d\")!;\n  ctx.drawImage(\n    state.printTarget.domElement,\n    state.view.min.x * m,\n    state.view.min.y * m,\n    state.view.diff.x * m,\n    state.view.diff.y * m,\n    0,\n    0,\n    state.view.diff.x * m,\n    state.view.diff.y * m\n  );\n\n  let link = document.createElement(\"a\");\n  c.toBlob(function (blob) {\n    link.setAttribute(\n      \"download\",\n      \"push-\" + Math.round(new Date().getTime() / 1000) + \".png\"\n    );\n    link.setAttribute(\"href\", URL.createObjectURL(blob));\n    link.dispatchEvent(\n      new MouseEvent(`click`, {\n        bubbles: true,\n        cancelable: true,\n        view: window,\n      })\n    );\n  });\n};\n\nexport function domLoadImage(callback: any) {\n  let input = document.querySelector(\"#fileInput\");\n  async function handleChange(this: any) {\n    for (let item of this.files) {\n      if (item.type.indexOf(\"image\") < 0) {\n        continue;\n      }\n      let src = URL.createObjectURL(item);\n      callback(src);\n      this.removeEventListener(\"change\", handleChange);\n    }\n  }\n  input!.addEventListener(\"change\", handleChange);\n\n  input!.dispatchEvent(\n    new MouseEvent(\"click\", {\n      bubbles: true,\n      cancelable: true,\n      view: window,\n    })\n  );\n  return input;\n}\n","import * as Three from \"three\";\nimport State from \"./State\";\n\nexport class SelectBox {\n  mouse1: Three.Vector2;\n  mouse2: Three.Vector2;\n  min: Three.Vector2;\n  max: Three.Vector2;\n  diff: Three.Vector2;\n  div: HTMLElement;\n\n  constructor(state: State, initial: Three.Vector2, current: Three.Vector2) {\n    this.mouse1 = new Three.Vector2();\n    this.mouse2 = new Three.Vector2();\n    this.min = new Three.Vector2();\n    this.max = new Three.Vector2();\n    this.diff = new Three.Vector2();\n    this.mouse1.copy(initial);\n    this.mouse2.copy(current);\n\n    const color = new Three.Color(state.highlightColor);\n    const div = document.createElement(\"div\");\n    this.div = div;\n    const rgb = color.getStyle();\n    const rgba =\n      rgb.slice(0, rgb.length - 1) + \",\" + state.highlightAlpha + \")\";\n    div.style.background = rgba;\n    div.style.border = \"solid 1px \" + rgb;\n    div.style.position = \"fixed\";\n    div.style.top = \"0\";\n    div.style.left = \"0\";\n    document.body.appendChild(div);\n  }\n\n  update(current: Three.Vector2) {\n    this.mouse2.copy(current);\n    this.min.copy(this.mouse2).min(this.mouse1);\n    this.max.copy(this.mouse2).max(this.mouse1);\n    this.diff.copy(this.max).sub(this.min);\n    this.render();\n  }\n\n  render() {\n    this.div.style.left = this.min.x + \"px\";\n    this.div.style.top = this.min.y + \"px\";\n    this.div.style.width = this.diff.x + \"px\";\n    this.div.style.height = this.diff.y + \"px\";\n  }\n\n  destroy() {\n    this.div.remove();\n  }\n}\n","import * as THREE from \"three\";\n\nconst _frustum = new THREE.Frustum();\n\nconst _center = new THREE.Vector3();\n\nconst _tmpPoint = new THREE.Vector3();\n\nconst _vecNear = new THREE.Vector3();\n\nconst _vecTopLeft = new THREE.Vector3();\n\nconst _vecTopRight = new THREE.Vector3();\n\nconst _vecDownRight = new THREE.Vector3();\n\nconst _vecDownLeft = new THREE.Vector3();\n\nconst _vecFarTopLeft = new THREE.Vector3();\n\nconst _vecFarTopRight = new THREE.Vector3();\n\nconst _vecFarDownRight = new THREE.Vector3();\n\nconst _vecFarDownLeft = new THREE.Vector3();\n\nconst _vectemp1 = new THREE.Vector3();\n\nconst _vectemp2 = new THREE.Vector3();\n\nconst _vectemp3 = new THREE.Vector3();\n\nconst _matrix = new THREE.Matrix4();\n\nconst _quaternion = new THREE.Quaternion();\n\nconst _scale = new THREE.Vector3();\n\nexport class SelectionBox {\n  constructor(camera, scene, deep = Number.MAX_VALUE) {\n    this.camera = camera;\n    this.scene = scene;\n    this.startPoint = new THREE.Vector3();\n    this.endPoint = new THREE.Vector3();\n    this.collection = [];\n    this.instances = {};\n    this.deep = deep;\n  }\n\n  select(startPoint, endPoint) {\n    this.startPoint = startPoint || this.startPoint;\n    this.endPoint = endPoint || this.endPoint;\n    this.collection = [];\n    this.updateFrustum(this.startPoint, this.endPoint);\n    this.searchChildInFrustum(_frustum, this.scene);\n    return this.collection;\n  }\n\n  updateFrustum(startPoint, endPoint) {\n    startPoint = startPoint || this.startPoint;\n    endPoint = endPoint || this.endPoint; // Avoid invalid frustum\n\n    if (startPoint.x === endPoint.x) {\n      endPoint.x += Number.EPSILON;\n    }\n\n    if (startPoint.y === endPoint.y) {\n      endPoint.y += Number.EPSILON;\n    }\n\n    this.camera.updateProjectionMatrix();\n    this.camera.updateMatrixWorld();\n\n    if (this.camera.isPerspectiveCamera) {\n      _tmpPoint.copy(startPoint);\n\n      _tmpPoint.x = Math.min(startPoint.x, endPoint.x);\n      _tmpPoint.y = Math.max(startPoint.y, endPoint.y);\n      endPoint.x = Math.max(startPoint.x, endPoint.x);\n      endPoint.y = Math.min(startPoint.y, endPoint.y);\n\n      _vecNear.setFromMatrixPosition(this.camera.matrixWorld);\n\n      _vecTopLeft.copy(_tmpPoint);\n\n      _vecTopRight.set(endPoint.x, _tmpPoint.y, 0);\n\n      _vecDownRight.copy(endPoint);\n\n      _vecDownLeft.set(_tmpPoint.x, endPoint.y, 0);\n\n      _vecTopLeft.unproject(this.camera);\n\n      _vecTopRight.unproject(this.camera);\n\n      _vecDownRight.unproject(this.camera);\n\n      _vecDownLeft.unproject(this.camera);\n\n      _vectemp1.copy(_vecTopLeft).sub(_vecNear);\n\n      _vectemp2.copy(_vecTopRight).sub(_vecNear);\n\n      _vectemp3.copy(_vecDownRight).sub(_vecNear);\n\n      _vectemp1.normalize();\n\n      _vectemp2.normalize();\n\n      _vectemp3.normalize();\n\n      _vectemp1.multiplyScalar(this.deep);\n\n      _vectemp2.multiplyScalar(this.deep);\n\n      _vectemp3.multiplyScalar(this.deep);\n\n      _vectemp1.add(_vecNear);\n\n      _vectemp2.add(_vecNear);\n\n      _vectemp3.add(_vecNear);\n\n      const planes = _frustum.planes;\n      planes[0].setFromCoplanarPoints(_vecNear, _vecTopLeft, _vecTopRight);\n      planes[1].setFromCoplanarPoints(_vecNear, _vecTopRight, _vecDownRight);\n      planes[2].setFromCoplanarPoints(_vecDownRight, _vecDownLeft, _vecNear);\n      planes[3].setFromCoplanarPoints(_vecDownLeft, _vecTopLeft, _vecNear);\n      planes[4].setFromCoplanarPoints(\n        _vecTopRight,\n        _vecDownRight,\n        _vecDownLeft\n      );\n      planes[5].setFromCoplanarPoints(_vectemp3, _vectemp2, _vectemp1);\n      planes[5].normal.multiplyScalar(-1);\n    } else if (this.camera.isOrthographicCamera) {\n      const left = Math.min(startPoint.x, endPoint.x);\n      const top = Math.max(startPoint.y, endPoint.y);\n      const right = Math.max(startPoint.x, endPoint.x);\n      const down = Math.min(startPoint.y, endPoint.y);\n\n      _vecTopLeft.set(left, top, -1);\n\n      _vecTopRight.set(right, top, -1);\n\n      _vecDownRight.set(right, down, -1);\n\n      _vecDownLeft.set(left, down, -1);\n\n      _vecFarTopLeft.set(left, top, 1);\n\n      _vecFarTopRight.set(right, top, 1);\n\n      _vecFarDownRight.set(right, down, 1);\n\n      _vecFarDownLeft.set(left, down, 1);\n\n      _vecTopLeft.unproject(this.camera);\n\n      _vecTopRight.unproject(this.camera);\n\n      _vecDownRight.unproject(this.camera);\n\n      _vecDownLeft.unproject(this.camera);\n\n      _vecFarTopLeft.unproject(this.camera);\n\n      _vecFarTopRight.unproject(this.camera);\n\n      _vecFarDownRight.unproject(this.camera);\n\n      _vecFarDownLeft.unproject(this.camera);\n\n      const planes = _frustum.planes;\n      planes[0].setFromCoplanarPoints(\n        _vecTopLeft,\n        _vecFarTopLeft,\n        _vecFarTopRight\n      );\n      planes[1].setFromCoplanarPoints(\n        _vecTopRight,\n        _vecFarTopRight,\n        _vecFarDownRight\n      );\n      planes[2].setFromCoplanarPoints(\n        _vecFarDownRight,\n        _vecFarDownLeft,\n        _vecDownLeft\n      );\n      planes[3].setFromCoplanarPoints(\n        _vecFarDownLeft,\n        _vecFarTopLeft,\n        _vecTopLeft\n      );\n      planes[4].setFromCoplanarPoints(\n        _vecTopRight,\n        _vecDownRight,\n        _vecDownLeft\n      );\n      planes[5].setFromCoplanarPoints(\n        _vecFarDownRight,\n        _vecFarTopRight,\n        _vecFarTopLeft\n      );\n      planes[5].normal.multiplyScalar(-1);\n    } else {\n      console.error(\"THREE.SelectionBox: Unsupported camera type.\");\n    }\n  }\n\n  searchChildInFrustum(frustum, object) {\n    if (object.isMesh || object.isLine || object.isPoints) {\n      if (object.isInstancedMesh) {\n        this.instances[object.uuid] = [];\n\n        for (let instanceId = 0; instanceId < object.count; instanceId++) {\n          object.getMatrixAt(instanceId, _matrix);\n\n          _matrix.decompose(_center, _quaternion, _scale);\n          // apply parent transforms to instance\n          _center.applyMatrix4(object.matrixWorld);\n\n          if (frustum.containsPoint(_center)) {\n            this.instances[object.uuid].push(instanceId);\n          }\n        }\n      } else {\n        if (object.geometry.boundingSphere === null)\n          object.geometry.computeBoundingSphere();\n\n        _center.copy(object.geometry.boundingSphere.center);\n\n        _center.applyMatrix4(object.matrixWorld);\n\n        if (frustum.containsPoint(_center)) {\n          this.collection.push(object);\n        }\n      }\n    }\n\n    if (object.children.length > 0) {\n      for (let x = 0; x < object.children.length; x++) {\n        this.searchChildInFrustum(frustum, object.children[x]);\n      }\n    }\n  }\n}\n","import { SubPointer } from \"./PointerComponent\";\nimport Pointer from \"./Pointer\";\nimport {\n  areaSelectEnd,\n  checkRayIntersect,\n  checkSelected,\n  clearSelected,\n  deSelectAndRenderCells,\n  panCamera,\n  panCameraStart,\n  pushPullSelected,\n  renderSelected,\n  rotate,\n  rotateStart,\n  selectAndRenderCells,\n  toggleSelectAndRenderCells,\n} from \"./Actions\";\nimport { SelectBox } from \"./SelectBox\";\nimport { SelectionBox } from \"./SelectionBox\";\nimport State from \"./State\";\nimport * as THREE from \"three\";\n\nconst areaSelectThreshold = 4;\n\nclass PointerOne extends Pointer {\n  raycaster: THREE.Raycaster;\n  clip: THREE.Vector3;\n  clip2: THREE.Vector2;\n  tempClip: THREE.Vector3;\n  ray: THREE.Vector3;\n  areaSelecting: boolean;\n  pushPulling: boolean;\n  selectIndexCache: null | number;\n  startTime: number;\n  selectBox: null | SelectBox;\n  selectionBox: any;\n  controlIndexCache: null | number;\n\n  constructor(state: State) {\n    super(state);\n    this.clip = new THREE.Vector3();\n    this.clip2 = new THREE.Vector2();\n    this.tempClip = new THREE.Vector3();\n    this.ray = new THREE.Vector3();\n    this.raycaster = new THREE.Raycaster();\n    this.areaSelecting = false;\n    this.pushPulling = false;\n    this.selectBox = null;\n    this.selectIndexCache = null;\n    this.startTime = 0;\n    this.selectionBox = new SelectionBox(this.state.camera, this.state.scene);\n    this.controlIndexCache = null;\n  }\n\n  setRay() {\n    this.clip.set(\n      (this.current.x / window.innerWidth) * 2 - 1,\n      -(this.current.y / window.innerHeight) * 2 + 1,\n      0.5\n    );\n    this.clip2.set(this.clip.x, this.clip.y);\n    this.tempClip.copy(this.clip);\n    this.tempClip.unproject(this.state.camera);\n    this.tempClip.sub(this.state.camera.position).normalize();\n    const distance = (0 - this.state.camera.position.z) / this.tempClip.z;\n    this.ray.copy(this.state.camera.position);\n    this.ray.add(this.tempClip.multiplyScalar(distance));\n  }\n\n  start(subPointers: Array<SubPointer>) {\n    super.start(subPointers);\n    this.subPointers = subPointers;\n    const [p1] = this.subPointers;\n    this.initial.copy(p1.current);\n    this.current.copy(p1.current);\n    this.diff.set(0, 0);\n    this.areaSelecting = false;\n    this.pushPulling = false;\n    this.startTime = Date.now();\n    this.controlIndexCache = null;\n\n    const pressed = this.state.pressed;\n    if (pressed.includes(\"d\")) {\n      panCameraStart(this.state);\n    } else if (pressed.includes(\"v\")) {\n      this.state.view.mouse1.copy(this.current);\n      this.state.view.mouse2.copy(this.current);\n      this.state.view.update();\n    } else if (pressed.includes(\"r\")) {\n      rotateStart(this.state);\n    } else if (pressed.includes(\"control\")) {\n      this.setRay();\n      const intersectIndex = checkRayIntersect(this);\n      if (intersectIndex !== null) {\n        toggleSelectAndRenderCells(this.state, this, intersectIndex);\n      }\n    } else {\n      // default\n      this.state.gridCache = this.state.selectedGrid.slice();\n      this.setRay();\n      const intersectIndex = checkRayIntersect(this);\n      if (intersectIndex !== null) {\n        const isSelected = checkSelected(this.state, intersectIndex);\n        if (isSelected && !pressed.includes(\"shift\")) {\n          this.state.heightGridCache = this.state.heightGrid.slice();\n          this.pushPulling = true;\n        } else {\n          if (!pressed.includes(\"shift\")) clearSelected(this.state);\n          if (isSelected) {\n            // selected and shift pass through\n          } else {\n            this.selectIndexCache = intersectIndex;\n            selectAndRenderCells(this.state, intersectIndex);\n          }\n        }\n      } else {\n        if (!pressed.includes(\"shift\")) clearSelected(this.state);\n        renderSelected(this.state);\n      }\n    }\n  }\n\n  move() {\n    if (this.active && this.subPointers) {\n      const [p1] = this.subPointers;\n      this.current.copy(p1.current);\n      this.diff.copy(this.current).sub(this.initial);\n\n      const pressed = this.state.pressed;\n      if (pressed.includes(\"d\")) {\n        panCamera(this.state, this);\n      } else if (pressed.includes(\"r\")) {\n        rotate(this.state, this);\n      } else if (pressed.includes(\"v\")) {\n        this.state.view.mouse2.copy(this.current);\n        this.state.view.update();\n      } else if (pressed.includes(\"control\") || pressed.includes(\"alt\")) {\n        this.setRay();\n        const intersectIndex = checkRayIntersect(this);\n        if (intersectIndex !== null) {\n          toggleSelectAndRenderCells(this.state, this, intersectIndex);\n        }\n      } else if (this.pushPulling) {\n        pushPullSelected(this.state, this);\n      } else {\n        // default\n        if (\n          Math.abs(this.diff.x) > areaSelectThreshold ||\n          Math.abs(this.diff.y) > areaSelectThreshold\n        ) {\n          if (!this.areaSelecting) {\n            // start area select\n            this.setRay();\n            this.areaSelecting = true;\n            this.selectBox = new SelectBox(\n              this.state,\n              this.initial,\n              this.current\n            );\n            this.selectionBox.startPoint.copy(this.clip);\n            deSelectAndRenderCells(this.state, this.selectIndexCache!);\n          } else {\n            // continue area select\n            this.selectBox!.update(this.current);\n            this.selectionBox.endPoint.copy(this.clip);\n          }\n        } else {\n          if (this.areaSelecting) {\n            this.areaSelecting = false;\n            this.selectBox!.destroy();\n            this.selectBox = null;\n            selectAndRenderCells(this.state, this.selectIndexCache!);\n          }\n        }\n      }\n    }\n  }\n\n  cancel() {\n    this.pushPulling = false;\n    if (this.areaSelecting) {\n      this.areaSelecting = false;\n      this.selectBox!.destroy();\n    }\n    this.active = false;\n  }\n\n  end() {\n    this.pushPulling = false;\n    if (this.areaSelecting) {\n      this.areaSelecting = false;\n      this.selectBox!.destroy();\n      this.setRay();\n      areaSelectEnd(this.state, this, this.selectionBox);\n    }\n    super.end();\n  }\n}\n\nexport default PointerOne;\n","import { SubPointer } from \"./PointerComponent\";\nimport Pointer from \"./Pointer\";\nimport { panCamera, panCameraStart } from \"./Actions\";\n\n// no between because it gets complicated\nclass PointerThree extends Pointer {\n  start(subPointers: Array<SubPointer>) {\n    this.active = true;\n    this.subPointers = subPointers;\n    const [p1, p2, p3] = subPointers;\n\n    this.current\n      .copy(p1.current)\n      .add(p2.current)\n      .add(p3.current)\n      .divideScalar(3);\n    this.initial.copy(this.current);\n\n    this.diff.set(0, 0);\n\n    panCameraStart(this.state);\n  }\n\n  move() {\n    if (this.subPointers) {\n      const [p1, p2, p3] = this.subPointers;\n      this.current\n        .copy(p1.current)\n        .add(p2.current)\n        .add(p3.current)\n        .divideScalar(3);\n\n      this.diff.copy(this.current).sub(this.initial);\n\n      panCamera(this.state, this);\n    }\n  }\n\n  end() {\n    super.end();\n  }\n}\n\nexport default PointerThree;\n","import { SubPointer } from \"./PointerComponent\";\nimport * as THREE from \"three\";\nimport Pointer from \"./Pointer\";\nimport State from \"./State\";\nimport {\n  rotate,\n  rotateStart,\n  continuousZoomStart,\n  continuousZoom,\n} from \"./Actions\";\n\nclass PointerTwo extends Pointer {\n  initialBetween: THREE.Vector2;\n  between: THREE.Vector2;\n\n  constructor(state: State) {\n    super(state);\n    this.between = new THREE.Vector2();\n    this.initialBetween = new THREE.Vector2();\n  }\n\n  start(subPointers: Array<SubPointer>) {\n    super.start(subPointers);\n    this.subPointers = subPointers;\n    const [p1, p2] = subPointers;\n\n    this.current.copy(p1.current).add(p2.current).divideScalar(2);\n    this.initial.copy(this.current);\n\n    this.between.copy(p1.current).sub(p2.current);\n    this.initialBetween.copy(this.between);\n\n    this.diff.set(0, 0);\n\n    rotateStart(this.state);\n    continuousZoomStart(this.state);\n  }\n\n  move() {\n    if (this.subPointers) {\n      const [p1, p2] = this.subPointers;\n      this.current.copy(p1.current).add(p2.current).divideScalar(2);\n\n      this.between.copy(p1.current).sub(p2.current);\n\n      this.diff.copy(this.current).sub(this.initial);\n\n      rotate(this.state, this);\n      continuousZoom(this.state, this);\n    }\n  }\n\n  end() {\n    super.end();\n  }\n}\n\nexport default PointerTwo;\n","import * as THREE from \"three\";\nimport { rotate, rotateStart } from \"./Actions\";\nimport State from \"./State\";\n\nclass PointerMiddle {\n  active: boolean;\n  initial: THREE.Vector2;\n  current: THREE.Vector2;\n  diff: THREE.Vector2;\n  state: State;\n\n  constructor(state: State) {\n    this.active = false;\n    this.initial = new THREE.Vector2();\n    this.current = new THREE.Vector2();\n    this.diff = new THREE.Vector2();\n    this.state = state;\n  }\n\n  start(e: PointerEvent) {\n    this.active = true;\n    this.current.set(e.clientX, e.clientY);\n    this.initial.copy(this.current);\n    this.diff.set(0, 0);\n\n    rotateStart(this.state);\n  }\n\n  move(e: PointerEvent) {\n    this.current.set(e.clientX, e.clientY);\n    this.diff.copy(this.current).sub(this.initial);\n\n    // @ts-ignore\n    rotate(this.state, this);\n  }\n\n  end() {\n    this.active = false;\n    this.current.set(0, 0);\n    this.diff.set(0, 0);\n  }\n}\n\nexport default PointerMiddle;\n","import { useEffect } from \"react\";\nimport State from \"./State\";\nimport * as THREE from \"three\";\nimport { discreteZoom, renderSelected } from \"./Actions\";\n\nexport class SubPointer {\n  state: State;\n  id: number;\n  current: THREE.Vector2;\n\n  constructor(state: State, e: PointerEvent) {\n    this.state = state;\n    this.id = e.pointerId;\n    this.current = new THREE.Vector2(e.clientX, e.clientY);\n\n    // left button\n    this.state.pointers.push(this);\n    switch (this.state.pointers.length) {\n      case 1:\n        // start 1\n        this.state.PointerOne.start(this.state.pointers.slice(0, 1));\n        break;\n      case 2:\n        // start 2\n        if (Date.now() - state.PointerOne.startTime) {\n          // revert selection\n          state.selectedGrid = state.gridCache;\n          renderSelected(state);\n        }\n        this.state.PointerOne.cancel();\n        this.state.PointerTwo.start(this.state.pointers.slice(0, 2));\n        break;\n      default:\n        // three or greater start three\n        this.state.PointerTwo.end();\n        this.state.PointerThree.start(this.state.pointers.slice(0, 3));\n    }\n  }\n\n  move(e: PointerEvent) {\n    this.current.set(e.clientX, e.clientY);\n    switch (this.state.pointers.length) {\n      case 1:\n        this.state.PointerOne.move();\n        break;\n      case 2:\n        this.state.PointerTwo.move();\n        break;\n      default:\n        this.state.PointerThree.move();\n        break;\n    }\n  }\n\n  remove() {\n    const index = getPointerIndexById(this.state, this.id);\n    if (index !== -1) {\n      this.state.pointers.splice(index, 1);\n    }\n    switch (this.state.pointers.length) {\n      case 0:\n        this.state.PointerOne.end();\n        break;\n      case 1:\n        // down to 1\n        this.state.PointerTwo.end();\n        // do not step down to 1\n        // this.state.PointerOne.start(this.state.pointers.slice(0, 1));\n        break;\n      case 2:\n        // down to 2\n        this.state.PointerThree.end();\n        this.state.PointerTwo.start(this.state.pointers.slice(0, 2));\n        break;\n      default:\n    }\n  }\n}\n\ntype PointerProps = {\n  state: State;\n};\n\nconst PointerComponent = ({ state }: PointerProps) => {\n  useEffect(() => {\n    const { canvas } = state;\n\n    const handlePointerMove = (e: PointerEvent) => {\n      if (state.lastPointerButtonPressed === 0) {\n        if (state.pointers.length > 0) {\n          let pointer;\n          if (state.pressed.includes(\" \")) {\n            pointer = getPointerById(state, 999);\n          } else {\n            pointer = getPointerById(state, e.pointerId);\n          }\n          if (pointer) {\n            pointer.move(e);\n          }\n        } else {\n          if (state.PointerHover.active) {\n            state.PointerHover.move(e.clientX, e.clientY);\n          } else {\n            state.PointerHover.start(e.clientX, e.clientY);\n          }\n        }\n      } else if (state.lastPointerButtonPressed === 1) {\n        if (state.PointerMiddle.active) {\n          state.PointerMiddle.move(e);\n        }\n      } else if (state.lastPointerButtonPressed === 2) {\n        // right\n      }\n    };\n\n    const handlePointerDown = (e: PointerEvent) => {\n      state.PointerHover.end();\n      state.lastPointerButtonPressed = e.button;\n      if (state.lastPointerButtonPressed === 0) {\n        new SubPointer(state, e);\n        canvas.setPointerCapture(e.pointerId);\n      } else if (state.lastPointerButtonPressed === 1) {\n        state.PointerMiddle.start(e);\n      } else if (state.lastPointerButtonPressed === 2) {\n        // right\n      }\n      canvas.setPointerCapture(e.pointerId);\n    };\n\n    const handlePointerUp = (e: PointerEvent) => {\n      if (state.lastPointerButtonPressed === 0) {\n        if (state.pointers.length > 0) {\n          const pointer = getPointerById(state, e.pointerId);\n          if (pointer) pointer.remove();\n        } else {\n          state.PointerHover.end();\n        }\n        canvas.releasePointerCapture(e.pointerId);\n      } else if (state.lastPointerButtonPressed === 1) {\n        state.PointerMiddle.end();\n        state.lastPointerButtonPressed = 0;\n      } else if (state.lastPointerButtonPressed === 2) {\n        // right\n      }\n    };\n\n    const handleMousewheel = (e: WheelEvent) => {\n      e.preventDefault();\n      discreteZoom(state, e.deltaY);\n    };\n\n    if (canvas) {\n      canvas.addEventListener(\"pointerdown\", handlePointerDown);\n      canvas.addEventListener(\"pointermove\", handlePointerMove);\n      canvas.addEventListener(\"pointerup\", handlePointerUp);\n      canvas.addEventListener(\"pointercancel\", handlePointerUp);\n      canvas.addEventListener(\"wheel\", handleMousewheel, {\n        passive: false,\n      });\n      return () => {\n        canvas.removeEventListener(\"pointerdown\", handlePointerDown);\n        canvas.removeEventListener(\"pointermove\", handlePointerMove);\n        canvas.removeEventListener(\"pointerup\", handlePointerUp);\n        canvas.removeEventListener(\"pointercancel\", handlePointerUp);\n        canvas.removeEventListener(\"wheel\", handleMousewheel);\n      };\n    }\n  }, [state]);\n\n  return null;\n};\n\nexport default PointerComponent;\n\nconst getPointerIndexById = (state: State, pointerId: number) => {\n  const ids = state.pointers.map((pointer) => pointer.id);\n  return ids.indexOf(pointerId);\n};\n\nconst getPointerById = (state: State, pointerId: number) => {\n  const index = getPointerIndexById(state, pointerId);\n  if (index > -1) {\n    return state.pointers[index];\n  } else {\n    return null;\n  }\n};\n","import * as THREE from \"three\";\nimport { panCameraStart, panCamera, rotate, rotateStart } from \"./Actions\";\nimport State from \"./State\";\nimport { SubPointer } from \"./PointerComponent\";\n\nclass PointerHover {\n  active: boolean;\n  initial: THREE.Vector2;\n  current: THREE.Vector2;\n  diff: THREE.Vector2;\n  state: State;\n  spacePointer: null | SubPointer;\n\n  constructor(state: State) {\n    this.active = false;\n    this.initial = new THREE.Vector2();\n    this.current = new THREE.Vector2();\n    this.diff = new THREE.Vector2();\n    this.state = state;\n    this.spacePointer = null;\n  }\n\n  start(x: number, y: number) {\n    this.active = true;\n    this.current.set(x, y);\n    this.initial.copy(this.current);\n    this.diff.set(0, 0);\n\n    const pressed = this.state.pressed;\n    if (pressed.includes(\" \")) {\n      // @ts-ignore\n      this.spacePointer = new SubPointer(this.state, {\n        pointerId: 999,\n        clientX: this.current.x,\n        clientY: this.current.y,\n      });\n    } else if (pressed.includes(\"r\")) {\n      rotateStart(this.state);\n    } else if (pressed.includes(\"d\")) {\n      panCameraStart(this.state);\n    }\n  }\n\n  move(x: number, y: number) {\n    this.current.set(x, y);\n    this.diff.copy(this.current).sub(this.initial);\n    const pressed = this.state.pressed;\n    if (pressed.includes(\"r\")) {\n      // @ts-ignore\n      rotate(this.state, this);\n    } else if (pressed.includes(\"d\")) {\n      // @ts-ignore\n      panCamera(this.state, this);\n    }\n  }\n\n  end() {\n    this.active = false;\n    this.current.set(0, 0);\n    this.diff.set(0, 0);\n  }\n}\n\nexport default PointerHover;\n","import * as Three from \"three\";\nimport State from \"./State\";\n\nexport class Box extends Three.InstancedMesh {\n  constructor(\n    state: State,\n    cellSize: number,\n    cols: number,\n    rows: number,\n    depth: number,\n    texture: Three.Texture\n  ) {\n    const geometry = new Three.BoxBufferGeometry(cellSize, cellSize, cellSize);\n\n    var uv = geometry.getAttribute(\"uv\");\n\n    // +x\n    uv.setXY(0, 1, 1);\n    uv.setXY(1, 1, 1);\n    uv.setXY(2, 1, 0);\n    uv.setXY(3, 1, 0);\n\n    // -x\n    uv.setXY(4, 0, 1);\n    uv.setXY(5, 0, 1);\n    uv.setXY(6, 0, 0);\n    uv.setXY(7, 0, 0);\n\n    // +y\n    uv.setXY(8, 0, 1);\n    uv.setXY(9, 1, 1);\n    uv.setXY(10, 0, 1);\n    uv.setXY(11, 1, 1);\n\n    // -y\n    uv.setXY(12, 0, 0);\n    uv.setXY(13, 1, 0);\n    uv.setXY(14, 0, 0);\n    uv.setXY(15, 1, 0);\n\n    // z\n    uv.setXY(16, 0, 1);\n    uv.setXY(17, 1, 1);\n    uv.setXY(18, 0, 0);\n    uv.setXY(15, 1, 0);\n\n    // -z\n    uv.setXY(20, 0, 0);\n    uv.setXY(21, 0, 0);\n    uv.setXY(22, 0, 0);\n    uv.setXY(23, 0, 0);\n\n    const texScale = [1 / cols, 1 / rows];\n    const offsets = [];\n    for (let r = 0; r < rows; r++) {\n      for (let c = 0; c < cols; c++) {\n        for (let d = 0; d < depth; d++) {\n          offsets.push(c, r);\n        }\n      }\n    }\n    geometry.setAttribute(\n      \"offset\",\n      new Three.InstancedBufferAttribute(new Float32Array(offsets), 2, false)\n    );\n\n    const visible = [];\n    for (let r = 0; r < rows; r++) {\n      for (let c = 0; c < cols; c++) {\n        for (let d = 0; d < depth; d++) {\n          visible.push(d === 0 ? 1 : 0);\n          // visible.push(1);\n        }\n      }\n    }\n    geometry.setAttribute(\n      \"visible\",\n      new Three.InstancedBufferAttribute(new Float32Array(visible), 1, false)\n    );\n\n    const vertexShader = `\n      varying vec2 vUv;\n      attribute vec2 offset;\n      varying vec2 vOffset;\n      uniform vec2 texScale;\n      varying vec2 vTexScale;\n      attribute float visible;\n\n      void main() {\n        vUv = uv * texScale;\n        vOffset = offset * texScale;\n        vTexScale = texScale;\n\n        gl_Position = projectionMatrix * viewMatrix * modelMatrix * instanceMatrix * vec4(position, 1.0) * visible;\n      }\n    `;\n    const fragmentShader = `\n      uniform sampler2D texture1;\n      varying vec2 vUv;\n      varying vec2 vOffset;\n      varying vec2 vTexScale;\n\n      void main() {\n         vec4 color = texture2D(texture1, vec2(vUv.x + vOffset.x, vUv.y + vOffset.y));\n        color.a = 1.0;\n         gl_FragColor = color;\n      }\n    `;\n\n    var uniforms = {\n      texture1: { type: \"t\", value: texture },\n      texScale: { value: texScale },\n    };\n\n    const material = new Three.ShaderMaterial({\n      uniforms: uniforms,\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader,\n    });\n    super(geometry, material, cols * rows * depth);\n    const matrix = new Three.Matrix4();\n    for (let r = 0; r < rows; r++) {\n      for (let c = 0; c < cols; c++) {\n        for (let d = 0; d < depth; d++) {\n          matrix.setPosition(\n            (c + 0.5) * cellSize - (cols * cellSize) / 2,\n            (r + 0.5) * cellSize - (rows * cellSize) / 2,\n            d * cellSize\n          );\n          const i = r * cols * depth + c * depth + d;\n          this.setMatrixAt(i, matrix);\n        }\n      }\n    }\n    state.scene.add(this);\n  }\n}\n","import * as Three from \"three\";\nimport State from \"./State\";\n\nexport class OutlineBox extends Three.InstancedMesh {\n  state: State;\n  material: Three.ShaderMaterial;\n\n  constructor(state: State, cellSize: number, cols: number, rows: number) {\n    const geometry = new Three.BoxBufferGeometry(\n      cellSize,\n      cellSize,\n      cellSize / 4\n    );\n\n    geometry.setAttribute(\n      \"depth\",\n      new Three.InstancedBufferAttribute(\n        new Float32Array(cols * rows),\n        1,\n        false\n      )\n    );\n\n    const selected = Array(rows * cols).fill(0);\n    geometry.setAttribute(\n      \"selected\",\n      new Three.InstancedBufferAttribute(new Float32Array(selected), 1, false)\n    );\n\n    const vertexShader = `\n      attribute float depth;\n      uniform float cellSize;\n      attribute float selected;\n      uniform vec3 color;\n\n      void main() {\n        vec3 depthed = position;\n        depthed.z += depth * cellSize - cellSize / 2.0;\n        vec4 pos = viewMatrix * modelMatrix * instanceMatrix * vec4(depthed, 1.0);\n        gl_Position = projectionMatrix * pos * selected;\n    }\n    `;\n    const fragmentShader = `\n      uniform vec3 color;\n      void main() {\n        gl_FragColor = vec4(color, 1.0);\n     }\n   `;\n    const uniforms = {\n      cellSize: { value: cellSize },\n      color: { value: new Three.Vector3(0.0, 1.0, 1.0) },\n    };\n    const material = new Three.ShaderMaterial({\n      uniforms: uniforms,\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader,\n    });\n\n    super(geometry, material, cols * rows);\n    this.material = material;\n    state.highlightScene.add(this);\n    this.state = state;\n\n    const matrix = new Three.Matrix4();\n    for (let r = 0; r < rows; r++) {\n      for (let c = 0; c < cols; c++) {\n        matrix.setPosition(\n          (c + 0.5) * cellSize - (cols * cellSize) / 2,\n          (r + 0.5) * cellSize - (rows * cellSize) / 2,\n          0\n        );\n        const i = r * cols + c;\n        this.setMatrixAt(i, matrix);\n      }\n    }\n    this.updateDepth();\n  }\n\n  updateDepth() {\n    for (let i = 0; i < this.state.heightGrid.length; i++) {\n      const depth = this.state.heightGrid[i];\n      // @ts-ignore\n      this.geometry.attributes.depth.array[i] = depth;\n    }\n    this.geometry.attributes.depth.needsUpdate = true;\n  }\n}\n\nexport default OutlineBox;\n","import * as THREE from \"three\";\n\nclass FullscreenQuad {\n  camera: THREE.PerspectiveCamera;\n  scene: THREE.Scene;\n  renderTarget: THREE.RenderTarget;\n  material: THREE.MeshBasicMaterial;\n\n  constructor() {\n    this.camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      100\n    );\n    const visibleHeight = 2 * Math.tan((this.camera.fov * Math.PI) / 360) * 5;\n    const worldPixel = visibleHeight / window.innerHeight;\n\n    this.renderTarget = new THREE.WebGLRenderTarget(\n      window.innerWidth,\n      window.innerHeight\n    );\n    const geometry = new THREE.PlaneBufferGeometry(\n      window.innerWidth * worldPixel,\n      window.innerHeight * worldPixel\n    );\n    this.material = new THREE.MeshBasicMaterial({\n      transparent: true,\n      opacity: 0.3,\n    });\n    const cube = new THREE.Mesh(geometry, this.material);\n    this.scene = new THREE.Scene();\n    this.scene.add(cube);\n    this.camera.position.z = 5;\n\n    // @ts-ignore\n    this.material.map = this.renderTarget.texture;\n  }\n}\n\nexport default FullscreenQuad;\n","import State from \"./State\";\nimport * as THREE from \"three\";\n\nclass View {\n  holder: HTMLElement;\n  div: HTMLElement;\n  mouse1: THREE.Vector2;\n  mouse2: THREE.Vector2;\n  min: THREE.Vector2;\n  max: THREE.Vector2;\n  topLeft: THREE.Vector2;\n  botRight: THREE.Vector2;\n  diff: THREE.Vector2;\n  kind: \"fullscreen\" | \"window\";\n  activeHandle: null | number;\n  mouseOrigin: THREE.Vector2;\n  mouseDiff: THREE.Vector2;\n  minOrigin: THREE.Vector2;\n  maxOrigin: THREE.Vector2;\n  dragging: boolean;\n  state: State;\n\n  constructor(state: State, mouse1: THREE.Vector2, mouse2: THREE.Vector2) {\n    this.div = document.createElement(\"div\");\n    this.mouse1 = new THREE.Vector2().copy(mouse1);\n    this.mouse2 = new THREE.Vector2().copy(mouse2);\n    this.min = new THREE.Vector2();\n    this.max = new THREE.Vector2();\n    this.topLeft = new THREE.Vector2(0, 0);\n    this.botRight = new THREE.Vector2(window.innerWidth, window.innerHeight);\n    this.diff = new THREE.Vector2();\n    this.activeHandle = null;\n    this.div.style.border = \"solid 1px \" + state.viewColor;\n    this.div.style.position = \"absolute\";\n    this.kind = \"fullscreen\";\n    this.dragging = false;\n    this.mouseOrigin = new THREE.Vector2();\n    this.mouseDiff = new THREE.Vector2();\n    this.minOrigin = new THREE.Vector2();\n    this.maxOrigin = new THREE.Vector2();\n    this.div.style.pointerEvents = \"auto\";\n    this.state = state;\n\n    this.div.addEventListener(\"pointerdown\", (e) => {\n      e.stopPropagation();\n      this.dragging = true;\n      this.mouseOrigin.set(e.clientX, e.clientY);\n      this.minOrigin.copy(this.min);\n      this.maxOrigin.copy(this.max);\n      this.div.setPointerCapture(e.pointerId);\n    });\n    this.div.addEventListener(\"pointermove\", (e) => {\n      if (this.dragging) {\n        this.mouseDiff.set(e.clientX, e.clientY).sub(this.mouseOrigin);\n        this.mouse1.x = this.minOrigin.x + this.mouseDiff.x;\n        this.mouse1.y = this.minOrigin.y + this.mouseDiff.y;\n        this.mouse2.x = this.maxOrigin.x + this.mouseDiff.x;\n        this.mouse2.y = this.maxOrigin.y + this.mouseDiff.y;\n        this.update();\n      }\n    });\n    this.div.addEventListener(\"pointerup\", (e) => {\n      this.dragging = false;\n      this.div.releasePointerCapture(e.pointerId);\n    });\n\n    this.holder = document.createElement(\"div\");\n    this.holder.style.position = \"fixed\";\n    this.holder.style.left = \"0px\";\n    this.holder.style.top = \"0px\";\n    this.holder.style.right = \"0px\";\n    this.holder.style.bottom = \"0px\";\n    this.holder.style.overflow = \"hidden\";\n    this.holder.style.pointerEvents = \"none\";\n    this.holder.appendChild(this.div);\n\n    document.body.appendChild(this.holder);\n\n    const positions = [\n      [-1, -1],\n      [0, -1],\n      [1, -1],\n      [-1, 0],\n      [1, 0],\n      [-1, 1],\n      [0, 1],\n      [1, 1],\n    ];\n    const percents = {\n      \"-1\": \"0%\",\n      \"0\": \"50%\",\n      \"1\": \"100%\",\n    };\n    for (let i = 0; i < positions.length; i++) {\n      const position = positions[i];\n      const div = document.createElement(\"div\");\n      div.style.width = 48 + \"px\";\n      div.style.height = 48 + \"px\";\n      div.style.position = \"absolute\";\n      // @ts-ignore\n      div.style.left = percents[position[0].toString()];\n      // @ts-ignore\n      div.style.top = percents[position[1].toString()];\n      div.style.transform = \"translate(-24px, -24px)\";\n      div.style.pointerEvents = \"auto\";\n      div.style.display = \"none\";\n      div.style.padding = \"16px\";\n      const inner = document.createElement(\"div\");\n      inner.style.width = 16 + \"px\";\n      inner.style.height = 16 + \"px\";\n      inner.style.background = state.viewColor;\n      div.appendChild(inner);\n      div.addEventListener(\"pointerdown\", (e) => {\n        e.stopPropagation();\n        this.activeHandle = i;\n        if (position[0] === -1) {\n          this.mouse1.x = this.max.x;\n        } else if (position[0] === 1) {\n          this.mouse1.x = this.min.x;\n        }\n        if (position[1] === -1) {\n          this.mouse1.y = this.max.y;\n        } else if (position[1] === 1) {\n          this.mouse1.y = this.min.y;\n        }\n        div.setPointerCapture(e.pointerId);\n      });\n      div.addEventListener(\"pointermove\", (e) => {\n        if (this.activeHandle !== null) {\n          if (position[0] !== 0) {\n            this.mouse2.x = e.clientX;\n          }\n          if (position[1] !== 0) {\n            this.mouse2.y = e.clientY;\n          }\n          this.update();\n        }\n      });\n      div.addEventListener(\"pointerup\", (e) => {\n        this.activeHandle = null;\n        div.releasePointerCapture(e.pointerId);\n      });\n      this.div.appendChild(div);\n    }\n    this.update();\n  }\n\n  showHandles() {\n    this.div.style.pointerEvents = \"auto\";\n    this.holder.style.zIndex = \"40\";\n    for (const child of Array.from(this.div.childNodes)) {\n      // @ts-ignore\n      child.style.display = \"block\";\n    }\n  }\n\n  hideHandles() {\n    this.div.style.pointerEvents = \"none\";\n    this.holder.style.zIndex = \"1\";\n    for (const child of Array.from(this.div.childNodes)) {\n      // @ts-ignore\n      child.style.display = \"none\";\n    }\n  }\n\n  updateColor() {\n    for (const child of Array.from(this.div.childNodes)) {\n      // @ts-ignore\n      child.childNodes[0].style.background = this.state.viewColor;\n    }\n    this.div.style.borderColor = this.state.viewColor;\n  }\n\n  update() {\n    if (this.kind === \"window\") {\n      this.div.style.display = \"block\";\n      this.showHandles();\n      this.botRight.set(window.innerWidth, window.innerHeight);\n      this.min.copy(this.mouse1).min(this.mouse2).max(this.topLeft);\n      this.max.copy(this.mouse1).max(this.mouse2).min(this.botRight);\n    } else if (this.kind === \"fullscreen\") {\n      this.div.style.display = \"none\";\n      this.botRight.set(window.innerWidth, window.innerHeight);\n      this.hideHandles();\n      this.min.copy(this.topLeft);\n      this.max.copy(this.botRight);\n    }\n    this.diff.copy(this.max).sub(this.min);\n    this.div.style.left = this.min.x + \"px\";\n    this.div.style.top = this.min.y + \"px\";\n    this.div.style.width = this.diff.x + \"px\";\n    this.div.style.height = this.diff.y + \"px\";\n  }\n}\n\nexport default View;\n","import * as Three from \"three\";\nimport { SubPointer } from \"./PointerComponent\";\nimport PointerOne from \"./PointerOne\";\nimport PointerThree from \"./PointerThree\";\nimport PointerTwo from \"./PointerTwo\";\nimport PointerMiddle from \"./PointerMiddle\";\nimport PointerHover from \"./PointerHover\";\nimport { Box } from \"./Box\";\nimport { MeshBasicMaterial } from \"three\";\nimport OutlineBox from \"./OutlineBox\";\nimport FullscreenQuad from \"./FullscreenQuad\";\nimport View from \"./View\";\n\nclass State {\n  canvas: HTMLCanvasElement;\n  camera: Three.PerspectiveCamera;\n  initialCameraPosition: Three.Vector3;\n  renderer: Three.WebGLRenderer;\n  scene: Three.Scene;\n  worldPixel: number;\n  boxes: Array<Box>;\n  group: Three.Object3D;\n  // @ts-ignore\n  outlineBoxes: Three.Object3D;\n  heightGrid: Array<number>;\n  selectedGrid: Array<number>;\n  keyInterupts: Array<string>;\n  hoverKeyInterrupts: Array<string>;\n  cols: number;\n  rows: number;\n  depth: number;\n  currentImageDims: [number, number];\n  pressed: Array<string>;\n  center: Three.Vector3;\n  pressedOne: string;\n  pointers: Array<SubPointer>;\n  PointerOne: PointerOne;\n  PointerTwo: PointerTwo;\n  PointerThree: PointerThree;\n  PointerMiddle: PointerMiddle;\n  lastPointerButtonPressed: number;\n  initialRotation: Three.Euler;\n  gridCache: Array<number>;\n  PointerHover: PointerHover;\n  heightGridCache: Array<number>;\n  viewScene: Three.Scene;\n  highlightScene: Three.Scene;\n  view: View;\n  printCanvas: HTMLCanvasElement;\n  printTarget: Three.WebGLRenderer;\n  backgroundColor: number;\n  viewColor: string;\n  backgroundAlpha: number;\n  highlightColor: number;\n  highlightAlpha: number;\n  fullscreenQuad: FullscreenQuad;\n  mode: \"normal\" | \"view\";\n  isTouch: boolean;\n  printMultiplier: number;\n\n  constructor(canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    this.camera = new Three.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      100\n    );\n    this.renderer = new Three.WebGLRenderer({\n      canvas,\n      logarithmicDepthBuffer: true,\n      antialias: false,\n    });\n    this.renderer.autoClear = false;\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.scene = new Three.Scene();\n    this.pointers = [];\n    this.boxes = [];\n    this.cols = 8;\n    this.rows = 8;\n    this.depth = 48;\n    this.selectedGrid = [];\n    this.gridCache = [];\n    this.heightGrid = [];\n    this.heightGridCache = [];\n    this.pressed = [];\n    this.center = new Three.Vector3();\n    this.initialCameraPosition = new Three.Vector3();\n    this.pressedOne = \"\";\n    this.PointerOne = new PointerOne(this);\n    this.PointerTwo = new PointerTwo(this);\n    this.PointerThree = new PointerThree(this);\n    this.PointerMiddle = new PointerMiddle(this);\n    this.PointerHover = new PointerHover(this);\n    this.lastPointerButtonPressed = 0;\n    this.keyInterupts = [\" \", \"d\", \"r\", \"control\"];\n    this.hoverKeyInterrupts = [\" \", \"d\", \"r\"];\n    this.initialRotation = new Three.Euler();\n    this.mode = \"normal\";\n    this.viewScene = new Three.Scene();\n    this.highlightScene = new Three.Scene();\n    this.printCanvas = document.createElement(\"canvas\");\n    this.printCanvas.width = window.innerWidth;\n    this.printCanvas.height = window.innerHeight;\n    this.printTarget = new Three.WebGLRenderer({\n      canvas: this.printCanvas,\n      alpha: true,\n    });\n    this.printTarget.setPixelRatio(window.devicePixelRatio);\n    this.currentImageDims = [16, 16];\n    this.viewColor = \"#aaaaaa\";\n    this.view = new View(this, new Three.Vector2(), new Three.Vector2());\n    this.backgroundColor = 0x000000;\n    this.backgroundAlpha = 0;\n    this.highlightColor = 0x00ffff;\n    this.highlightAlpha = 0.3;\n    this.fullscreenQuad = new FullscreenQuad();\n    this.isTouch = window.matchMedia(\"(pointer: coarse)\").matches;\n    this.printMultiplier = 2;\n\n    // set world pixel\n    {\n      const visibleHeight = 2 * Math.tan((this.camera.fov * Math.PI) / 360) * 5;\n      this.worldPixel = visibleHeight / window.innerHeight;\n    }\n\n    this.group = new Three.Group();\n\n    // this.lkadImage(\"ellott2.jpg\");\n    this.loadImage(\"bowiealt.jpg\");\n\n    // additional settings\n    this.camera.position.z = 5;\n\n    this.animate();\n  }\n\n  loadImage(src: string) {\n    const loader = new Three.TextureLoader();\n    loader.setCrossOrigin(\"\");\n    loader.load(\n      src,\n      (texture) => {\n        this.scene.remove(this.group);\n        this.group = new Three.Group();\n\n        const limit = 1024;\n        const img = texture.image;\n        if (img.width > limit || img.height > limit) {\n          const aspect = img.width / img.height;\n          if (aspect > 1) {\n            img.width = limit;\n            img.height = img.width / aspect;\n          } else {\n            img.height = limit;\n            img.width = img.height * aspect;\n          }\n        }\n        const cellSize = this.worldPixel * 16;\n\n        this.currentImageDims = [img.width, img.height];\n        const cols = Math.round(img.width / 16);\n        const rows = Math.round(img.height / 16);\n        this.cols = cols;\n        this.rows = rows;\n\n        this.selectedGrid = Array(cols * rows).fill(0);\n        this.heightGrid = Array(cols * rows).fill(1);\n\n        const ray1 = new Three.Vector2(\n          window.innerWidth / 2 - (window.innerWidth / 2 - 32),\n          window.innerHeight / 2 - (window.innerHeight / 2 - 32)\n        );\n        const ray2 = new Three.Vector2(\n          window.innerWidth / 2 + (window.innerWidth / 2 - 32),\n          window.innerHeight / 2 + (window.innerHeight / 2 - 32)\n        );\n        this.view.mouse1.copy(ray1);\n        this.view.mouse2.copy(ray2);\n        this.view.update();\n        this.changeMode(\"normal\");\n\n        const outlineBoxes = new OutlineBox(this, cellSize, cols, rows);\n        const boxes = new Box(this, cellSize, cols, rows, this.depth, texture);\n        (boxes.material as MeshBasicMaterial).map = texture;\n        this.outlineBoxes = outlineBoxes;\n        this.group = boxes;\n      },\n      () => {},\n      (error) => {\n        // @ts-ignore\n        console.log(error.target);\n      }\n    );\n  }\n\n  animate() {\n    this.renderer.setClearColor(this.backgroundColor, 1);\n    this.renderer.clear();\n    this.renderer.render(this.scene, this.camera);\n\n    this.renderer.setRenderTarget(this.fullscreenQuad.renderTarget);\n    this.renderer.setClearColor(this.backgroundColor, 0);\n    this.renderer.clear();\n    this.renderer.render(this.highlightScene, this.camera);\n    this.renderer.setRenderTarget(null);\n\n    this.fullscreenQuad.material.opacity = this.highlightAlpha;\n    this.renderer.render(this.fullscreenQuad.scene, this.fullscreenQuad.camera);\n\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  changeMode(newMode: \"normal\" | \"view\") {\n    this.mode = newMode;\n    if (this.mode === \"view\" && this.view.kind === \"window\") {\n      this.view.showHandles();\n    } else {\n      this.view.hideHandles();\n    }\n  }\n}\n\nexport default State;\n","import { useEffect } from \"react\";\nimport {\n  discretePanCamera,\n  discreteZoom,\n  interruptPointerKeyDown,\n  interruptPointerKeyUp,\n} from \"./Actions\";\nimport State from \"./State\";\n\ntype KeyboardProps = {\n  state: State;\n};\n\nfunction Keyboard({ state }: KeyboardProps) {\n  useEffect(() => {\n    // const pressed = (key: string) => {};\n\n    const downHandler = (e: KeyboardEvent) => {\n      let press = e.key.toLowerCase();\n      if (press === \"-\") {\n        discreteZoom(state, 32);\n      } else if (press === \"+\" || press === \"=\") {\n        discreteZoom(state, -32);\n      }\n      if (!state.pressed.includes(press)) {\n        state.pressed.push(press);\n        interruptPointerKeyDown(state, press);\n      }\n      if (state.pressed.includes(\"arrowleft\")) {\n        discretePanCamera(state, [-1, 0]);\n      }\n      if (state.pressed.includes(\"arrowright\")) {\n        discretePanCamera(state, [1, 0]);\n      }\n      if (state.pressed.includes(\"arrowup\")) {\n        discretePanCamera(state, [0, -1]);\n      }\n      if (state.pressed.includes(\"arrowdown\")) {\n        discretePanCamera(state, [0, 1]);\n      }\n    };\n\n    const upHandler = (e: KeyboardEvent) => {\n      let press = e.key.toLowerCase();\n      if (press === \" \") {\n        if (state.PointerHover.spacePointer) {\n          state.PointerHover.spacePointer.remove();\n          state.PointerHover.spacePointer = null;\n        }\n      }\n      const index = state.pressed.indexOf(press);\n      if (index !== -1) {\n        state.pressed.splice(index, 1);\n      }\n      interruptPointerKeyUp(state, press);\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [state]);\n\n  return null;\n}\n\nexport default Keyboard;\n","import { useEffect, useRef, useState } from \"react\";\nimport State from \"./State\";\nimport * as THREE from \"three\";\nimport { print, domLoadImage } from \"./Actions\";\n\ninterface ButtonProps {\n  children: any;\n  clickHandler?: any;\n  active?: boolean;\n  textColor: string;\n}\n\nfunction Button({\n  children,\n  clickHandler = null,\n  active = false,\n  textColor,\n}: ButtonProps) {\n  const shade = textColor === \"black\" ? \"800\" : \"200\";\n  return (\n    <div\n      role=\"button\"\n      className={`h-16 flex items-center justify-center px-5 betterhover:hover:bg-gray-${shade} betterhover:hover:bg-opacity-10 ${\n        active ? \"bg-gray-\" + shade : \"\"\n      } bg-opacity-10 pointer-events-auto`}\n      style={{ minWidth: \"8ch\" }}\n      onClick={() => clickHandler && clickHandler()}\n    >\n      {children}\n    </div>\n  );\n}\n\ninterface ShortcutProps {\n  action: any;\n  shortcut: string;\n}\n\nfunction HandleShortcut({ action, shortcut }: ShortcutProps) {\n  useEffect(() => {\n    const downHandler = (e: KeyboardEvent) => {\n      let press = e.key.toLowerCase();\n      if (!e.ctrlKey) {\n        if (press === shortcut) action();\n      }\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n    };\n  }, [action, shortcut]);\n\n  return null;\n}\n\ninterface DialogProps {\n  title: string;\n  children: any;\n  display: boolean;\n  setDisplay: any;\n  shortcut: string;\n  clearModals: any;\n}\n\nfunction Dialog({\n  title,\n  children,\n  display,\n  setDisplay,\n  shortcut,\n  clearModals,\n}: DialogProps) {\n  const [offsetX, setOffSetX] = useState(0);\n  const [offsetY, setOffSetY] = useState(0);\n  const pointerDown = useRef(false);\n  const pointerOrigin = useRef([0, 0]);\n  const offsetOrigin = useRef([0, 0]);\n\n  useEffect(() => {\n    const downHandler = (e: KeyboardEvent) => {\n      let press = e.key.toLowerCase();\n      if (!e.ctrlKey) {\n        if (press === \"escape\") setDisplay(false);\n        if (press === shortcut) {\n          clearModals();\n          setDisplay(!display);\n        }\n      }\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n    };\n  }, [display, shortcut, clearModals, setDisplay]);\n\n  return (\n    <div\n      className=\"fixed inset-0 z-50 pointer-events-none\"\n      style={{ display: display ? \"block\" : \"none\" }}\n    >\n      <div\n        className=\"absolute left-1/2 bg-white text-black pointer-events-auto shadow-md\"\n        style={{\n          top: 64,\n          maxHeight: \"calc(100% - 128px)\",\n          width: 440,\n          maxWidth: \"calc(100% - 32px)\",\n          transform: `translate(calc(${offsetX}px - 50%), ${offsetY}px)`,\n          overflow: \"auto\",\n        }}\n      >\n        <div className=\"flex border-b border-gray-200\">\n          <div\n            className=\"px-4 py-3 select-none flex-grow\"\n            onPointerDown={(e) => {\n              pointerDown.current = true;\n              pointerOrigin.current = [e.clientX, e.clientY];\n              offsetOrigin.current = [offsetX, offsetY];\n            }}\n            onPointerMove={(e) => {\n              if (pointerDown.current) {\n                setOffSetX(\n                  offsetOrigin.current[0] + e.clientX - pointerOrigin.current[0]\n                );\n                setOffSetY(\n                  offsetOrigin.current[1] + e.clientY - pointerOrigin.current[1]\n                );\n              }\n            }}\n            onPointerUp={() => {\n              pointerDown.current = false;\n            }}\n          >\n            {title}\n          </div>\n          <div\n            role=\"button\"\n            className=\"px-5 py-3 hover:bg-gray-200 cursor-pointer select-none\"\n            onClick={() => setDisplay(false)}\n          >\n            X\n          </div>\n        </div>\n        <div className=\"px-4 py-3\">{children}</div>\n      </div>\n    </div>\n  );\n}\n\ninterface BarProps {\n  state: State;\n  setMode: any;\n}\n\nexport function Bars({ state, setMode }: BarProps) {\n  const [isFocus, setIsFocus] = useState(false);\n  const [textColor, setTextColor] = useState(\"black\");\n  const [showAbout, setShowAbout] = useState(false);\n  const [showColors, setShowColors] = useState(false);\n  const [color, setColor] = useState(\"#000000\");\n  const [isTransparent, setIsTransparent] = useState(true);\n  const [is2x, setIs2x] = useState(true);\n  const [highlightColor, setHighlightColor] = useState(\"#00ffff\");\n  const [highlightAlpha, setHighlightAlpha] = useState(state.highlightAlpha);\n  const [showView, setShowView] = useState(false);\n  const [showControls, setShowControls] = useState(false);\n  const [viewColor, setViewColor] = useState(state.viewColor);\n  const colorRef = useRef(new THREE.Color());\n  const [viewKind, setViewKind] = useState<\"fullscreen\" | \"window\">(\n    state.view.kind\n  );\n\n  useEffect(() => {\n    state.backgroundColor = parseInt(color.replace(/^#/, \"\"), 16);\n    const threeColor = colorRef.current.set(color);\n    if (\n      threeColor.r * 255 * 0.299 +\n        threeColor.g * 255 * 0.587 +\n        threeColor.b * 255 * 0.114 >\n      186\n    ) {\n      setTextColor(\"black\");\n    } else {\n      setTextColor(\"white\");\n    }\n  }, [color, state, setTextColor]);\n\n  useEffect(() => {\n    state.backgroundAlpha = isTransparent ? 0 : 1;\n  }, [isTransparent, state]);\n\n  useEffect(() => {\n    state.printMultiplier = is2x ? 2 : 1;\n  }, [is2x, state]);\n\n  useEffect(() => {\n    state.viewColor = viewColor;\n    state.view.updateColor();\n  }, [viewColor, state]);\n\n  useEffect(() => {\n    const threeColor = colorRef.current.set(highlightColor);\n    if (state.outlineBoxes) {\n      // @ts-ignore\n      state.outlineBoxes.material.uniforms.color.value.set(\n        threeColor.r,\n        threeColor.g,\n        threeColor.b\n      );\n      state.highlightColor = threeColor.getHex();\n    }\n  }, [highlightColor, state]);\n\n  useEffect(() => {\n    state.highlightAlpha = highlightAlpha;\n  }, [highlightAlpha, state]);\n\n  useEffect(() => {\n    setMode(showView ? \"view\" : \"normal\");\n  }, [showView, state, setMode]);\n\n  useEffect(() => {\n    state.view.kind = viewKind;\n    state.view.update();\n  }, [viewKind, state]);\n\n  const clearModals = () => {\n    setShowAbout(false);\n    setShowColors(false);\n    setShowView(false);\n    setShowControls(false);\n  };\n\n  return (\n    <>\n      <div\n        className={`fixed left-0 top-0 right-0 h-16 text-${textColor} flex justify-center z-10 select-none pointer-events-none `}\n      >\n        <div className=\"flex\">\n          {isFocus ? null : (\n            <>\n              <Button\n                textColor={textColor}\n                clickHandler={() => domLoadImage(state.loadImage.bind(state))}\n              >\n                <u>o</u>pen\n              </Button>\n              <HandleShortcut\n                action={() => domLoadImage(state.loadImage.bind(state))}\n                shortcut={\"o\"}\n              />\n              <Button\n                textColor={textColor}\n                clickHandler={() => {\n                  clearModals();\n                  setShowAbout(!showAbout);\n                }}\n                active={showAbout}\n              >\n                <u>a</u>bout\n              </Button>\n              <Button\n                textColor={textColor}\n                clickHandler={() => {\n                  clearModals();\n                  setShowColors(!showColors);\n                }}\n                active={showColors}\n              >\n                <u>s</u>ettings\n              </Button>\n            </>\n          )}\n          <Button\n            textColor={textColor}\n            clickHandler={() => {\n              clearModals();\n              setIsFocus(!isFocus);\n            }}\n            active={isFocus}\n          >\n            <u>f</u>ocus\n          </Button>\n          <HandleShortcut action={() => setIsFocus(!isFocus)} shortcut={\"f\"} />\n          <HandleShortcut\n            action={() => {\n              clearModals();\n              setIsFocus(false);\n            }}\n            shortcut={\"escape\"}\n          />\n        </div>\n      </div>\n      {/* bottom bar */}\n      <div className=\"fixed left-0 bottom-0 right-0 h-16 text-${textColor flex justify-center z-10 select-none\">\n        <div className=\"flex\">\n          {isFocus ? null : (\n            <>\n              <Button\n                textColor={textColor}\n                clickHandler={() => {\n                  clearModals();\n                  setShowView(!showView);\n                }}\n                active={showView}\n              >\n                <u>v</u>iew\n              </Button>\n              <Button\n                textColor={textColor}\n                clickHandler={() => {\n                  clearModals();\n                  setShowControls(!showControls);\n                }}\n                active={showControls}\n              >\n                <u>c</u>ontrols\n              </Button>\n            </>\n          )}\n          <Button textColor={textColor} clickHandler={() => print(state)}>\n            <u>p</u>rint\n          </Button>\n          <HandleShortcut action={() => print(state)} shortcut={\"p\"} />\n        </div>\n      </div>\n      {/* Dialogs */}\n      <Dialog\n        title=\"About\"\n        display={showAbout}\n        setDisplay={setShowAbout}\n        shortcut=\"a\"\n        clearModals={clearModals}\n      >\n        <div className=\"mb-4\">\n          Push and pull blocks to distort an image. Select a section of the\n          image then click and drag it to pull it towards you.\n        </div>\n        <div className=\"flex justify-between\">\n          <div>\n            from{\" \"}\n            <a\n              href=\"https://constraint.systems\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Constraint Systems\n            </a>\n          </div>\n          <div>\n            <a\n              href=\"https://github.com/constraint-systems/push\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              View source\n            </a>\n          </div>\n        </div>\n      </Dialog>\n      <Dialog\n        title=\"Settings\"\n        display={showColors}\n        setDisplay={setShowColors}\n        shortcut=\"s\"\n        clearModals={clearModals}\n      >\n        <div className=\"flex items-center justify-between mb-3 pb-3 border-b\">\n          <div>Save at 2x resolution</div>\n          <input\n            type=\"checkbox\"\n            checked={is2x}\n            onChange={(e) => {\n              setIs2x(e.target.checked);\n            }}\n          ></input>\n        </div>\n        <div className=\"flex items-center justify-between mb-3 pb-3 border-b\">\n          <div>Transparent background on save</div>\n          <input\n            type=\"checkbox\"\n            checked={isTransparent}\n            onChange={(e) => {\n              setIsTransparent(e.target.checked);\n            }}\n          ></input>\n        </div>\n        <div className=\"flex items-center justify-between mb-3 pb-3 border-b\">\n          <div>Background color</div>\n          <input\n            style={{ display: \"block\" }}\n            type=\"color\"\n            value={color}\n            onChange={(e) => {\n              setColor(e.target.value);\n            }}\n          ></input>\n        </div>\n        <div className=\"flex items-center justify-between mb-3 pb-3 border-b\">\n          <div>Selection color</div>\n          <input\n            type=\"color\"\n            value={highlightColor}\n            onChange={(e) => {\n              setHighlightColor(e.target.value);\n            }}\n          ></input>\n        </div>\n        <div className=\"flex items-center justify-between mb-3 pb-3 border-b\">\n          <div>Selection color opacity</div>\n          <div className=\"flex items-center\">\n            <input\n              className=\"mr-2\"\n              type=\"range\"\n              value={highlightAlpha}\n              min={0.1}\n              step={0.1}\n              max={1}\n              onChange={(e) => {\n                setHighlightAlpha(parseFloat(e.target.value));\n              }}\n            ></input>{\" \"}\n            {highlightAlpha.toFixed(1)}\n          </div>\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <div>View window color</div>\n          <input\n            style={{ display: \"block\" }}\n            type=\"color\"\n            value={viewColor}\n            onChange={(e) => {\n              setViewColor(e.target.value);\n            }}\n          ></input>\n        </div>\n      </Dialog>\n      <Dialog\n        title=\"View\"\n        display={showView}\n        setDisplay={setShowView}\n        shortcut=\"v\"\n        clearModals={clearModals}\n      >\n        <div className=\"flex items-center justify-between mb-2 text-sm\">\n          View determines what part of the image is saved when you print. Use\n          window mode to select only a section.\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <div>Mode</div>\n          <div className=\"flex items-center\">\n            <label\n              className=\"mr-5\"\n              onPointerDown={(e) => {\n                e.stopPropagation();\n              }}\n              onClick={() => {\n                setViewKind(\"fullscreen\");\n              }}\n            >\n              <input\n                type=\"radio\"\n                value=\"Male\"\n                className=\"mr-2\"\n                checked={viewKind === \"fullscreen\"}\n                onPointerDown={(e) => {\n                  e.stopPropagation();\n                }}\n                onChange={() => {\n                  setViewKind(\"fullscreen\");\n                }}\n              />\n              fullscreen\n            </label>\n            <label\n              onPointerDown={(e) => {\n                e.stopPropagation();\n              }}\n              onClick={() => {\n                setViewKind(\"window\");\n              }}\n            >\n              <input\n                type=\"radio\"\n                className=\"mr-2\"\n                value=\"Female\"\n                checked={viewKind === \"window\"}\n                onChange={() => {\n                  setViewKind(\"window\");\n                }}\n              />\n              window\n            </label>\n          </div>\n        </div>\n      </Dialog>\n      <Dialog\n        title=\"Controls\"\n        display={showControls}\n        setDisplay={setShowControls}\n        shortcut=\"c\"\n        clearModals={clearModals}\n      >\n        <div className=\"flex items-center justify-between mb-4\">\n          Click and drag to select an area. Click and drag a selected area to\n          push and pull it.\n        </div>\n        <div className=\"flex items-center justify-between mb-2\">\n          <strong>Touch</strong>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>One-finger</div>\n          <div>Select, push and pull</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>Two-finger</div>\n          <div>Rotate, zoom</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-5\">\n          <div>Three-finger</div>\n          <div>Pan</div>\n        </div>\n        <div className=\"flex items-center justify-between mb-2\">\n          <strong>Keyboard and mouse</strong>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>Click and drag</div>\n          <div>Select, push and pull</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>Scroll</div>\n          <div>Zoom</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>Control or alt + click and drag</div>\n          <div>Paint select</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>Shift + click and drag</div>\n          <div>Add to selection</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>r + move</div>\n          <div>Rotate</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>d + move</div>\n          <div>Pan</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>Arrows</div>\n          <div>Pan</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>+ and -</div>\n          <div>Zoom</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>Space</div>\n          <div>Mouse click</div>\n        </div>\n      </Dialog>\n    </>\n  );\n}\n","import { useEffect, useRef, useState } from \"react\";\nimport State from \"./State\";\nimport PointerComponent from \"./PointerComponent\";\nimport KeyboardComponent from \"./Keyboard\";\nimport { Bars } from \"./Bars\";\n\nexport type Mode = \"normal\" | \"view\";\n\nfunction App() {\n  const canvasRef = useRef(null!);\n  const [state, setState] = useState<null | State>(null);\n  const [mode, setMode] = useState<Mode>(\"normal\");\n\n  useEffect(() => {\n    if (state !== null) {\n      state.changeMode(mode);\n    }\n  }, [mode, state]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current!;\n    const newState = new State(canvas);\n    setState(newState);\n\n    const handleResize = () => {\n      const xChange = window.innerWidth - newState.renderer.domElement.width;\n      const yChange = window.innerHeight - newState.renderer.domElement.height;\n\n      newState.view.mouse1.copy(newState.view.min);\n      newState.view.mouse2.copy(newState.view.max);\n\n      newState.view.mouse1.x += xChange / 2;\n      newState.view.mouse1.y += yChange / 2;\n      newState.view.mouse2.x += xChange / 2;\n      newState.view.mouse2.y += yChange / 2;\n\n      const percent =\n        window.innerHeight / 2 / (newState.renderer.domElement.height / 2);\n\n      const minToCenterX = newState.view.mouse1.x - window.innerWidth / 2;\n      newState.view.mouse1.x = minToCenterX * percent + window.innerWidth / 2;\n      const maxToCenterX = newState.view.mouse2.x - window.innerWidth / 2;\n      newState.view.mouse2.x = maxToCenterX * percent + window.innerWidth / 2;\n\n      const minToCenterY = newState.view.mouse1.y - window.innerHeight / 2;\n      newState.view.mouse1.y = minToCenterY * percent + window.innerHeight / 2;\n      const maxToCenterY = newState.view.mouse2.y - window.innerHeight / 2;\n      newState.view.mouse2.y = maxToCenterY * percent + window.innerHeight / 2;\n\n      newState.view.update();\n\n      newState.renderer.setSize(window.innerWidth, window.innerHeight);\n      newState.camera.aspect = window.innerWidth / window.innerHeight;\n      newState.camera.updateProjectionMatrix();\n    };\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (state) {\n      const onPaste = (e: any) => {\n        e.preventDefault();\n        e.stopPropagation();\n        for (const item of e.clipboardData.items) {\n          if (item.type.indexOf(\"image\") < 0) {\n            continue;\n          }\n          let file = item.getAsFile();\n          let src = URL.createObjectURL(file);\n          state.loadImage(src);\n        }\n      };\n\n      const onDrop = (e: any) => {\n        e.preventDefault();\n        e.stopPropagation();\n        let file = e.dataTransfer.files[0];\n        let src = URL.createObjectURL(file);\n        state.loadImage(src);\n      };\n\n      const onDrag = (e: any) => {\n        e.stopPropagation();\n        e.preventDefault();\n        e.dataTransfer.dropEffect = \"copy\";\n      };\n\n      window.addEventListener(\"paste\", onPaste);\n      window.addEventListener(\"dragover\", onDrag);\n      window.addEventListener(\"drop\", onDrop);\n      return () => {\n        window.removeEventListener(\"paste\", onPaste);\n        window.removeEventListener(\"dragover\", onDrag);\n        window.removeEventListener(\"drop\", onDrop);\n      };\n    }\n  }, [state]);\n\n  return (\n    <>\n      <input id=\"fileInput\" type=\"file\" style={{ display: \"none\" }}></input>\n      <canvas ref={canvasRef}></canvas>\n      {state ? (\n        <>\n          <PointerComponent state={state} />\n          <KeyboardComponent state={state} />\n          <Bars state={state} setMode={setMode} />\n        </>\n      ) : null}\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}