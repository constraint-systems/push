{"version":3,"sources":["Pointer.tsx","Actions.tsx","SelectBox.tsx","SelectionBox.js","PointerOne.tsx","PointerThree.tsx","PointerTwo.tsx","PointerMiddle.tsx","PointerComponent.tsx","PointerHover.tsx","Box.tsx","OutlineBox.tsx","FullscreenQuad.tsx","View.tsx","State.tsx","Keyboard.tsx","TopBar.tsx","BareActions.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Pointer","state","active","subPointers","initial","current","diff","logEl","markEl","this","THREE","set","el","log","innerText","JSON","stringify","Math","round","x","y","updateMark","style","display","left","top","checkRayIntersect","pointer","visBuffer","group","geometry","attributes","visible","array","raycaster","setFromCamera","clip2","camera","intersected","intersectObject","index","instanceId","getStackGridIndexFromInstanceIndex","allCols","floor","depth","row","cols","col","clearSelected","selectedGrid","fill","renderSelected","selectedBuffer","outlineBoxes","selected","i","length","val","needsUpdate","selectAndRenderCells","selectGridIndex","toggleSelectAndRenderCells","gridIndex","controlIndexCache","panCameraStart","initialCameraPosition","copy","position","panCamera","zoomPixel","tan","fov","PI","z","window","innerHeight","discretePanCamera","rotateStart","initialRotation","rotation","rotate","rotateY","min","max","worldPixel","rotateX","discreteZoom","change","percent","SelectBox","mouse1","mouse2","div","Three","color","highlightColor","document","createElement","rgb","getStyle","rgba","slice","highlightAlpha","background","border","body","appendChild","sub","render","width","height","remove","_frustum","_center","_tmpPoint","_vecNear","_vecTopLeft","_vecTopRight","_vecDownRight","_vecDownLeft","_vecFarTopLeft","_vecFarTopRight","_vecFarDownRight","_vecFarDownLeft","_vectemp1","_vectemp2","_vectemp3","_matrix","_quaternion","_scale","SelectionBox","scene","deep","Number","MAX_VALUE","startPoint","endPoint","collection","instances","updateFrustum","searchChildInFrustum","EPSILON","updateProjectionMatrix","updateMatrixWorld","isPerspectiveCamera","setFromMatrixPosition","matrixWorld","unproject","normalize","multiplyScalar","add","planes","setFromCoplanarPoints","normal","isOrthographicCamera","right","down","console","error","frustum","object","isMesh","isLine","isPoints","isInstancedMesh","uuid","count","getMatrixAt","decompose","applyMatrix4","containsPoint","push","boundingSphere","computeBoundingSphere","center","children","PointerOne","clip","tempClip","ray","areaSelecting","pushPulling","selectIndexCache","startTime","selectBox","selectionBox","innerWidth","distance","p1","Date","now","pressed","includes","view","update","setRay","intersectIndex","gridCache","stackIndex","checkSelected","heightGridCache","heightGrid","visibleBuffer","d","updateDepth","pushPullSelected","abs","deSelectGridIndex","destroy","select","indexes","maxDepth","possibilities","possibility","areaSelectEnd","PointerThree","p2","p3","divideScalar","PointerTwo","initialBetween","between","initialRadius","sqrt","radius","continuousZoom","PointerMiddle","e","clientX","clientY","SubPointer","id","pointerId","pointers","start","cancel","end","move","getPointerIndexById","splice","PointerComponent","useEffect","canvas","handlePointerMove","lastPointerButtonPressed","getPointerById","PointerHover","handlePointerDown","button","setPointerCapture","handlePointerUp","releasePointerCapture","handleMousewheel","viewFinder","wheel","deltaY","addEventListener","passive","removeEventListener","map","indexOf","spacePointer","Box","cellSize","rows","texture","uv","getAttribute","setXY","texScale","offsets","r","c","setAttribute","Float32Array","uniforms","texture1","type","value","material","vertexShader","fragmentShader","matrix","setPosition","setMatrixAt","OutlineBox","Array","highlightScene","FullscreenQuad","renderTarget","transparent","opacity","cube","View","holder","topLeft","botRight","kind","activeHandle","mouseOrigin","mouseDiff","minOrigin","maxOrigin","dragging","viewColor","pointerEvents","stopPropagation","bottom","overflow","positions","percents","toString","transform","padding","inner","from","childNodes","borderColor","showHandles","hideHandles","State","renderer","boxes","keyInterupts","hoverKeyInterrupts","currentImageDims","pressedOne","viewScene","printCanvas","printTarget","backgroundColor","backgroundAlpha","fullscreenQuad","mode","isTouch","logarithmicDepthBuffer","antialias","autoClear","setPixelRatio","devicePixelRatio","setSize","alpha","matchMedia","matches","visibleHeight","loadImage","animate","src","loader","setCrossOrigin","load","limit","img","image","aspect","xPadded","yPadded","ray1","ray2","changeMode","target","setClearColor","clear","setRenderTarget","requestAnimationFrame","bind","newMode","Keyboard","downHandler","press","key","toLowerCase","interruptPointerKeyDown","upHandler","interruptPointerKeyUp","Button","clickHandler","shade","textColor","role","className","minWidth","onClick","HandleShortcut","action","shortcut","Dialog","title","setDisplay","clearModals","useState","offsetX","setOffSetX","offsetY","setOffSetY","pointerDown","useRef","pointerOrigin","offsetOrigin","maxHeight","maxWidth","onPointerDown","onPointerMove","onPointerUp","Bars","setMode","isFocus","setIsFocus","setTextColor","showAbout","setShowAbout","showColors","setShowColors","setColor","isTransparent","setIsTransparent","setHighlightColor","setHighlightAlpha","showView","setShowView","showControls","setShowControls","setViewColor","colorRef","viewKind","setViewKind","parseInt","replace","threeColor","g","b","updateColor","getHex","callback","input","querySelector","handleChange","a","files","item","URL","createObjectURL","dispatchEvent","MouseEvent","bubbles","cancelable","domLoadImage","pw","ph","getContext","drawImage","domElement","link","toBlob","blob","getTime","print","href","rel","checked","onChange","step","parseFloat","toFixed","App","canvasRef","setState","newState","handleResize","xChange","yChange","minToCenterX","maxToCenterX","minToCenterY","maxToCenterY","onPaste","preventDefault","clipboardData","items","file","getAsFile","onDrop","dataTransfer","onDrag","dropEffect","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d685da30.chunk.js","sourcesContent":["import * as THREE from \"three\";\nimport { SubPointer } from \"./PointerComponent\";\nimport State from \"./State\";\n\nclass Pointer {\n  active: boolean;\n  subPointers: null | Array<SubPointer>;\n  initial: THREE.Vector2;\n  current: THREE.Vector2;\n  diff: THREE.Vector2;\n  logEl: null | HTMLElement;\n  markEl: null | HTMLElement;\n  state: State;\n\n  constructor(state: State) {\n    this.active = false;\n    this.subPointers = null;\n    this.initial = new THREE.Vector2();\n    this.current = new THREE.Vector2();\n    this.diff = new THREE.Vector2();\n    this.logEl = null;\n    this.markEl = null;\n    this.state = state;\n  }\n\n  start(subPointers: Array<SubPointer>) {\n    this.active = true;\n  }\n\n  end() {\n    this.active = false;\n    this.current.set(0, 0);\n    this.diff.set(0, 0);\n  }\n\n  setLogEl(el: HTMLElement) {\n    this.logEl = el;\n    this.log();\n  }\n\n  log() {\n    if (this.logEl !== null) {\n      this.logEl.innerText =\n        \" \" +\n        JSON.stringify(this.active) +\n        \" diff \" +\n        Math.round(this.diff.x) +\n        \",\" +\n        Math.round(this.diff.y);\n    }\n  }\n\n  setMarkEl(el: HTMLElement) {\n    this.markEl = el;\n    this.updateMark();\n  }\n\n  extras() {\n    this.log();\n    this.updateMark();\n  }\n\n  updateMark() {\n    if (this.markEl !== null) {\n      if (this.active) {\n        this.markEl.style.display = \"block\";\n      } else {\n        this.markEl.style.display = \"none\";\n      }\n      this.markEl.style.left = this.current.x + \"px\";\n      this.markEl.style.top = this.current.y + \"px\";\n    }\n  }\n}\n\nexport default Pointer;\n","// import * as THREE from \"three\";\nimport PointerOne from \"./PointerOne\";\nimport Pointer from \"./Pointer\";\nimport State from \"./State\";\nimport PointerTwo from \"./PointerTwo\";\nimport { SelectionBox } from \"./SelectionBox\";\n\nexport const checkRayIntersect = (pointer: PointerOne) => {\n  // @ts-ignore\n  const visBuffer = pointer.state.group.geometry.attributes.visible.array;\n  pointer.raycaster.setFromCamera(pointer.clip2, pointer.state.camera);\n  const intersected = pointer.raycaster.intersectObject(pointer.state.group);\n  for (const intersect of intersected) {\n    const index = intersect.instanceId!;\n    if (visBuffer[index]) {\n      return index;\n    }\n  }\n  return null;\n};\n\nexport const getStackGridIndexFromInstanceIndex = (\n  state: State,\n  index: number\n) => {\n  const allCols = Math.floor(index / state.depth);\n  const row = Math.floor(allCols / state.cols);\n  const col = allCols % state.cols;\n  return row * state.cols + col;\n};\n\nexport const selectGridIndex = (state: State, index: number) => {\n  state.selectedGrid[index] = 1;\n};\n\nexport const deSelectGridIndex = (state: State, index: number) => {\n  state.selectedGrid[index] = 0;\n};\n\nexport const clearSelected = (state: State) => {\n  state.selectedGrid.fill(0);\n};\n\nexport const renderSelected = (state: State) => {\n  // @ts-ignore\n  const selectedBuffer = state.outlineBoxes.geometry.attributes.selected.array;\n\n  for (let i = 0; i < state.selectedGrid.length; i++) {\n    const val = state.selectedGrid[i];\n    selectedBuffer[i] = val;\n  }\n  // @ts-ignore\n  state.outlineBoxes.geometry.attributes.selected.needsUpdate = true;\n};\n\nexport const selectAndRenderCells = (state: State, index: number) => {\n  const gridIndex = getStackGridIndexFromInstanceIndex(state, index);\n  selectGridIndex(state, gridIndex);\n  renderSelected(state);\n};\n\nexport const deSelectAndRenderCells = (state: State, index: number) => {\n  const gridIndex = getStackGridIndexFromInstanceIndex(state, index);\n  deSelectGridIndex(state, gridIndex);\n  renderSelected(state);\n};\n\nexport const toggleSelectAndRenderCells = (\n  state: State,\n  pointer: PointerOne,\n  index: number\n) => {\n  const gridIndex = getStackGridIndexFromInstanceIndex(state, index);\n  if (pointer.controlIndexCache !== gridIndex) {\n    state.selectedGrid[gridIndex] = state.selectedGrid[gridIndex] === 0 ? 1 : 0;\n    renderSelected(state);\n    pointer.controlIndexCache = gridIndex;\n  }\n};\n\nexport const panCameraStart = (state: State) => {\n  state.initialCameraPosition.copy(state.camera.position);\n};\n\nexport const panCamera = (state: State, pointer: Pointer) => {\n  const visibleHeight =\n    2 * Math.tan((state.camera.fov * Math.PI) / 360) * state.camera.position.z;\n  const zoomPixel = visibleHeight / window.innerHeight;\n  state.camera.position.x =\n    state.initialCameraPosition.x - pointer.diff.x * zoomPixel;\n  state.camera.position.y =\n    state.initialCameraPosition.y + pointer.diff.y * zoomPixel;\n};\n\nexport const discretePanCamera = (state: State, diff: Array<number>) => {\n  const visibleHeight =\n    2 * Math.tan((state.camera.fov * Math.PI) / 360) * state.camera.position.z;\n  const zoomPixel = visibleHeight / window.innerHeight;\n  state.camera.position.x -= 16 * diff[0] * zoomPixel;\n  state.camera.position.y += 16 * diff[1] * zoomPixel;\n};\n\nexport const interruptPointerKeyDown = (state: State, press: string) => {\n  // pointerOne interrupts\n  if (state.keyInterupts.includes(press)) {\n    if (state.PointerOne.active) {\n      state.PointerOne.end();\n      state.PointerOne.start(state.PointerOne.subPointers!);\n    }\n  }\n  if (state.hoverKeyInterrupts.includes(press)) {\n    if (state.PointerHover.active) {\n      state.PointerHover.start(\n        state.PointerHover.current.x,\n        state.PointerHover.current.y\n      );\n    }\n  }\n};\n\nexport const interruptPointerKeyUp = (state: State, press: string) => {\n  if (state.keyInterupts.includes(press)) {\n    if (state.PointerOne.active) {\n      const index = state.pressed.indexOf(press);\n      if (index !== -1) {\n        state.pressed.splice(index, 1);\n      }\n      state.PointerOne.end();\n      state.PointerOne.start(state.PointerOne.subPointers!);\n    }\n  }\n  if (state.hoverKeyInterrupts.includes(press)) {\n    if (state.PointerHover.active) {\n      state.PointerHover.start(\n        state.PointerHover.current.x,\n        state.PointerHover.current.y\n      );\n    }\n  }\n};\n\nexport const rotateStart = (state: State) => {\n  state.initialRotation.copy(state.group.rotation);\n};\n\nexport const rotate = (state: State, pointer: Pointer) => {\n  const rotateY = Math.min(\n    Math.PI / 2,\n    Math.max(\n      -Math.PI / 2,\n      state.initialRotation.y + pointer.diff.x * state.worldPixel\n    )\n  );\n  const rotateX = Math.min(\n    Math.PI / 2,\n    Math.max(\n      -Math.PI / 2,\n      state.initialRotation.x + pointer.diff.y * state.worldPixel\n    )\n  );\n  state.group.rotation.x = rotateX;\n  state.outlineBoxes.rotation.x = rotateX;\n  state.group.rotation.y = rotateY;\n  state.outlineBoxes.rotation.y = rotateY;\n};\n\nexport const continuousZoomStart = (state: State) => {\n  state.initialCameraPosition.copy(state.camera.position);\n};\n\nexport const continuousZoom = (state: State, pointer: PointerTwo) => {\n  const initialRadius = Math.sqrt(\n    pointer.initialBetween.x * pointer.initialBetween.x +\n      pointer.initialBetween.y * pointer.initialBetween.y\n  );\n  const radius = Math.sqrt(\n    pointer.between.x * pointer.between.x +\n      pointer.between.y * pointer.between.y\n  );\n  const percent =\n    (window.innerHeight + (radius - initialRadius) * 2) / window.innerHeight;\n  state.camera.position.z = state.initialCameraPosition.z / percent;\n};\n\nexport const discreteZoom = (state: State, change: number) => {\n  const percent = (window.innerHeight - change) / window.innerHeight;\n  state.camera.position.z = state.camera.position.z / percent;\n};\n\nexport const checkSelected = (state: State, index: number) => {\n  const stackIndex = getStackGridIndexFromInstanceIndex(state, index);\n  return state.selectedGrid[stackIndex];\n};\n\nexport const areaSelectEnd = (\n  state: State,\n  pointer: PointerOne,\n  selectionBox: SelectionBox\n) => {\n  selectionBox.endPoint.copy(pointer.clip);\n  selectionBox.select();\n  // @ts-ignore\n  const visBuffer = pointer.state.group.geometry.attributes.visible.array;\n  // @ts-ignore\n  const indexes = selectionBox.instances[state.group.uuid];\n\n  let maxDepth = 0;\n  let possibilities = [];\n  for (const index of indexes) {\n    // @ts-ignore\n    if (visBuffer[index]) {\n      // @ts-ignore\n      const allCols = Math.floor(index / state.depth);\n      const row = Math.floor(allCols / state.cols);\n      const col = allCols % state.cols;\n      let depth;\n      if (index < state.depth) {\n        depth = index;\n      } else {\n        depth = index % (row * state.cols * state.depth + col * state.depth);\n      }\n      if (depth === state.heightGrid[row * state.cols + col] - 1) {\n        maxDepth = Math.max(maxDepth, depth);\n        // depth, grid index\n        possibilities.push([depth, row * state.cols + col]);\n      }\n    }\n  }\n  for (const possibility of possibilities) {\n    if (possibility[0] === maxDepth) {\n      state.selectedGrid[possibility[1]] = 1;\n    }\n  }\n  renderSelected(state);\n};\n\nexport const pushPullSelected = (state: State, pointer: Pointer) => {\n  const visibleBuffer =\n    // @ts-ignore\n    state.group.geometry.attributes.visible.array;\n  for (let i = 0; i < state.selectedGrid.length; i++) {\n    const isSelected = state.selectedGrid[i];\n    if (isSelected) {\n      state.heightGrid[i] = Math.max(\n        1,\n        Math.min(\n          state.depth,\n          state.heightGridCache[i] + Math.round(pointer.diff.y / 8)\n        )\n      );\n      const height = state.heightGrid[i];\n      const row = Math.floor(i / state.cols);\n      const col = i % state.cols;\n      for (let d = 0; d < state.depth; d++) {\n        visibleBuffer[row * state.cols * state.depth + col * state.depth + d] =\n          d < height ? 1 : 0;\n      }\n    }\n  }\n  // @ts-ignore\n  state.group.geometry.attributes.visible.needsUpdate = true;\n  // @ts-ignore\n  state.outlineBoxes.updateDepth();\n};\n\nexport const print = (state: State) => {\n  // const pw = window.innerWidth / ratio;\n  const pw = window.innerWidth;\n  // const ph = window.innerHeight / ratio;\n  const ph = window.innerHeight;\n  state.printTarget.setSize(pw, ph);\n  state.printTarget.setClearColor(state.backgroundColor, state.backgroundAlpha);\n  state.printTarget.render(state.scene, state.camera);\n\n  const c = document.createElement(\"canvas\");\n  c.width = state.view.diff.x;\n  c.height = state.view.diff.y;\n  const ctx = c.getContext(\"2d\")!;\n  ctx.drawImage(\n    state.printTarget.domElement,\n    state.view.min.x,\n    state.view.min.y,\n    state.view.diff.x,\n    state.view.diff.y,\n    0,\n    0,\n    state.view.diff.x,\n    state.view.diff.y\n  );\n\n  let link = document.createElement(\"a\");\n  c.toBlob(function (blob) {\n    link.setAttribute(\n      \"download\",\n      \"push-\" + Math.round(new Date().getTime() / 1000) + \".png\"\n    );\n    link.setAttribute(\"href\", URL.createObjectURL(blob));\n    link.dispatchEvent(\n      new MouseEvent(`click`, {\n        bubbles: true,\n        cancelable: true,\n        view: window,\n      })\n    );\n  });\n};\n","import * as Three from \"three\";\nimport State from \"./State\";\n\nexport class SelectBox {\n  mouse1: Three.Vector2;\n  mouse2: Three.Vector2;\n  min: Three.Vector2;\n  max: Three.Vector2;\n  diff: Three.Vector2;\n  div: HTMLElement;\n\n  constructor(state: State, initial: Three.Vector2, current: Three.Vector2) {\n    this.mouse1 = new Three.Vector2();\n    this.mouse2 = new Three.Vector2();\n    this.min = new Three.Vector2();\n    this.max = new Three.Vector2();\n    this.diff = new Three.Vector2();\n    this.mouse1.copy(initial);\n    this.mouse2.copy(current);\n\n    const color = new Three.Color(state.highlightColor);\n    const div = document.createElement(\"div\");\n    this.div = div;\n    const rgb = color.getStyle();\n    const rgba =\n      rgb.slice(0, rgb.length - 1) + \",\" + state.highlightAlpha + \")\";\n    div.style.background = rgba;\n    div.style.border = \"solid 1px \" + rgb;\n    div.style.position = \"fixed\";\n    div.style.top = \"0\";\n    div.style.left = \"0\";\n    document.body.appendChild(div);\n  }\n\n  update(current: Three.Vector2) {\n    this.mouse2.copy(current);\n    this.min.copy(this.mouse2).min(this.mouse1);\n    this.max.copy(this.mouse2).max(this.mouse1);\n    this.diff.copy(this.max).sub(this.min);\n    this.render();\n  }\n\n  render() {\n    this.div.style.left = this.min.x + \"px\";\n    this.div.style.top = this.min.y + \"px\";\n    this.div.style.width = this.diff.x + \"px\";\n    this.div.style.height = this.diff.y + \"px\";\n  }\n\n  destroy() {\n    this.div.remove();\n  }\n}\n","import * as THREE from \"three\";\n\nconst _frustum = new THREE.Frustum();\n\nconst _center = new THREE.Vector3();\n\nconst _tmpPoint = new THREE.Vector3();\n\nconst _vecNear = new THREE.Vector3();\n\nconst _vecTopLeft = new THREE.Vector3();\n\nconst _vecTopRight = new THREE.Vector3();\n\nconst _vecDownRight = new THREE.Vector3();\n\nconst _vecDownLeft = new THREE.Vector3();\n\nconst _vecFarTopLeft = new THREE.Vector3();\n\nconst _vecFarTopRight = new THREE.Vector3();\n\nconst _vecFarDownRight = new THREE.Vector3();\n\nconst _vecFarDownLeft = new THREE.Vector3();\n\nconst _vectemp1 = new THREE.Vector3();\n\nconst _vectemp2 = new THREE.Vector3();\n\nconst _vectemp3 = new THREE.Vector3();\n\nconst _matrix = new THREE.Matrix4();\n\nconst _quaternion = new THREE.Quaternion();\n\nconst _scale = new THREE.Vector3();\n\nexport class SelectionBox {\n  constructor(camera, scene, deep = Number.MAX_VALUE) {\n    this.camera = camera;\n    this.scene = scene;\n    this.startPoint = new THREE.Vector3();\n    this.endPoint = new THREE.Vector3();\n    this.collection = [];\n    this.instances = {};\n    this.deep = deep;\n  }\n\n  select(startPoint, endPoint) {\n    this.startPoint = startPoint || this.startPoint;\n    this.endPoint = endPoint || this.endPoint;\n    this.collection = [];\n    this.updateFrustum(this.startPoint, this.endPoint);\n    this.searchChildInFrustum(_frustum, this.scene);\n    return this.collection;\n  }\n\n  updateFrustum(startPoint, endPoint) {\n    startPoint = startPoint || this.startPoint;\n    endPoint = endPoint || this.endPoint; // Avoid invalid frustum\n\n    if (startPoint.x === endPoint.x) {\n      endPoint.x += Number.EPSILON;\n    }\n\n    if (startPoint.y === endPoint.y) {\n      endPoint.y += Number.EPSILON;\n    }\n\n    this.camera.updateProjectionMatrix();\n    this.camera.updateMatrixWorld();\n\n    if (this.camera.isPerspectiveCamera) {\n      _tmpPoint.copy(startPoint);\n\n      _tmpPoint.x = Math.min(startPoint.x, endPoint.x);\n      _tmpPoint.y = Math.max(startPoint.y, endPoint.y);\n      endPoint.x = Math.max(startPoint.x, endPoint.x);\n      endPoint.y = Math.min(startPoint.y, endPoint.y);\n\n      _vecNear.setFromMatrixPosition(this.camera.matrixWorld);\n\n      _vecTopLeft.copy(_tmpPoint);\n\n      _vecTopRight.set(endPoint.x, _tmpPoint.y, 0);\n\n      _vecDownRight.copy(endPoint);\n\n      _vecDownLeft.set(_tmpPoint.x, endPoint.y, 0);\n\n      _vecTopLeft.unproject(this.camera);\n\n      _vecTopRight.unproject(this.camera);\n\n      _vecDownRight.unproject(this.camera);\n\n      _vecDownLeft.unproject(this.camera);\n\n      _vectemp1.copy(_vecTopLeft).sub(_vecNear);\n\n      _vectemp2.copy(_vecTopRight).sub(_vecNear);\n\n      _vectemp3.copy(_vecDownRight).sub(_vecNear);\n\n      _vectemp1.normalize();\n\n      _vectemp2.normalize();\n\n      _vectemp3.normalize();\n\n      _vectemp1.multiplyScalar(this.deep);\n\n      _vectemp2.multiplyScalar(this.deep);\n\n      _vectemp3.multiplyScalar(this.deep);\n\n      _vectemp1.add(_vecNear);\n\n      _vectemp2.add(_vecNear);\n\n      _vectemp3.add(_vecNear);\n\n      const planes = _frustum.planes;\n      planes[0].setFromCoplanarPoints(_vecNear, _vecTopLeft, _vecTopRight);\n      planes[1].setFromCoplanarPoints(_vecNear, _vecTopRight, _vecDownRight);\n      planes[2].setFromCoplanarPoints(_vecDownRight, _vecDownLeft, _vecNear);\n      planes[3].setFromCoplanarPoints(_vecDownLeft, _vecTopLeft, _vecNear);\n      planes[4].setFromCoplanarPoints(\n        _vecTopRight,\n        _vecDownRight,\n        _vecDownLeft\n      );\n      planes[5].setFromCoplanarPoints(_vectemp3, _vectemp2, _vectemp1);\n      planes[5].normal.multiplyScalar(-1);\n    } else if (this.camera.isOrthographicCamera) {\n      const left = Math.min(startPoint.x, endPoint.x);\n      const top = Math.max(startPoint.y, endPoint.y);\n      const right = Math.max(startPoint.x, endPoint.x);\n      const down = Math.min(startPoint.y, endPoint.y);\n\n      _vecTopLeft.set(left, top, -1);\n\n      _vecTopRight.set(right, top, -1);\n\n      _vecDownRight.set(right, down, -1);\n\n      _vecDownLeft.set(left, down, -1);\n\n      _vecFarTopLeft.set(left, top, 1);\n\n      _vecFarTopRight.set(right, top, 1);\n\n      _vecFarDownRight.set(right, down, 1);\n\n      _vecFarDownLeft.set(left, down, 1);\n\n      _vecTopLeft.unproject(this.camera);\n\n      _vecTopRight.unproject(this.camera);\n\n      _vecDownRight.unproject(this.camera);\n\n      _vecDownLeft.unproject(this.camera);\n\n      _vecFarTopLeft.unproject(this.camera);\n\n      _vecFarTopRight.unproject(this.camera);\n\n      _vecFarDownRight.unproject(this.camera);\n\n      _vecFarDownLeft.unproject(this.camera);\n\n      const planes = _frustum.planes;\n      planes[0].setFromCoplanarPoints(\n        _vecTopLeft,\n        _vecFarTopLeft,\n        _vecFarTopRight\n      );\n      planes[1].setFromCoplanarPoints(\n        _vecTopRight,\n        _vecFarTopRight,\n        _vecFarDownRight\n      );\n      planes[2].setFromCoplanarPoints(\n        _vecFarDownRight,\n        _vecFarDownLeft,\n        _vecDownLeft\n      );\n      planes[3].setFromCoplanarPoints(\n        _vecFarDownLeft,\n        _vecFarTopLeft,\n        _vecTopLeft\n      );\n      planes[4].setFromCoplanarPoints(\n        _vecTopRight,\n        _vecDownRight,\n        _vecDownLeft\n      );\n      planes[5].setFromCoplanarPoints(\n        _vecFarDownRight,\n        _vecFarTopRight,\n        _vecFarTopLeft\n      );\n      planes[5].normal.multiplyScalar(-1);\n    } else {\n      console.error(\"THREE.SelectionBox: Unsupported camera type.\");\n    }\n  }\n\n  searchChildInFrustum(frustum, object) {\n    if (object.isMesh || object.isLine || object.isPoints) {\n      if (object.isInstancedMesh) {\n        this.instances[object.uuid] = [];\n\n        for (let instanceId = 0; instanceId < object.count; instanceId++) {\n          object.getMatrixAt(instanceId, _matrix);\n\n          _matrix.decompose(_center, _quaternion, _scale);\n          // apply parent transforms to instance\n          _center.applyMatrix4(object.matrixWorld);\n\n          if (frustum.containsPoint(_center)) {\n            this.instances[object.uuid].push(instanceId);\n          }\n        }\n      } else {\n        if (object.geometry.boundingSphere === null)\n          object.geometry.computeBoundingSphere();\n\n        _center.copy(object.geometry.boundingSphere.center);\n\n        _center.applyMatrix4(object.matrixWorld);\n\n        if (frustum.containsPoint(_center)) {\n          this.collection.push(object);\n        }\n      }\n    }\n\n    if (object.children.length > 0) {\n      for (let x = 0; x < object.children.length; x++) {\n        this.searchChildInFrustum(frustum, object.children[x]);\n      }\n    }\n  }\n}\n","import { SubPointer } from \"./PointerComponent\";\nimport Pointer from \"./Pointer\";\nimport {\n  areaSelectEnd,\n  checkRayIntersect,\n  checkSelected,\n  clearSelected,\n  deSelectAndRenderCells,\n  panCamera,\n  panCameraStart,\n  pushPullSelected,\n  renderSelected,\n  rotate,\n  rotateStart,\n  selectAndRenderCells,\n  toggleSelectAndRenderCells,\n} from \"./Actions\";\nimport { SelectBox } from \"./SelectBox\";\nimport { SelectionBox } from \"./SelectionBox\";\nimport State from \"./State\";\nimport * as THREE from \"three\";\n\nconst areaSelectThreshold = 4;\n\nclass PointerOne extends Pointer {\n  raycaster: THREE.Raycaster;\n  clip: THREE.Vector3;\n  clip2: THREE.Vector2;\n  tempClip: THREE.Vector3;\n  ray: THREE.Vector3;\n  areaSelecting: boolean;\n  pushPulling: boolean;\n  selectIndexCache: null | number;\n  startTime: number;\n  selectBox: null | SelectBox;\n  selectionBox: any;\n  controlIndexCache: null | number;\n\n  constructor(state: State) {\n    super(state);\n    this.clip = new THREE.Vector3();\n    this.clip2 = new THREE.Vector2();\n    this.tempClip = new THREE.Vector3();\n    this.ray = new THREE.Vector3();\n    this.raycaster = new THREE.Raycaster();\n    this.areaSelecting = false;\n    this.pushPulling = false;\n    this.selectBox = null;\n    this.selectIndexCache = null;\n    this.startTime = 0;\n    this.selectionBox = new SelectionBox(this.state.camera, this.state.scene);\n    this.controlIndexCache = null;\n  }\n\n  setRay() {\n    this.clip.set(\n      (this.current.x / window.innerWidth) * 2 - 1,\n      -(this.current.y / window.innerHeight) * 2 + 1,\n      0.5\n    );\n    this.clip2.set(this.clip.x, this.clip.y);\n    this.tempClip.copy(this.clip);\n    this.tempClip.unproject(this.state.camera);\n    this.tempClip.sub(this.state.camera.position).normalize();\n    const distance = (0 - this.state.camera.position.z) / this.tempClip.z;\n    this.ray.copy(this.state.camera.position);\n    this.ray.add(this.tempClip.multiplyScalar(distance));\n  }\n\n  start(subPointers: Array<SubPointer>) {\n    super.start(subPointers);\n    this.subPointers = subPointers;\n    const [p1] = this.subPointers;\n    this.initial.copy(p1.current);\n    this.current.copy(p1.current);\n    this.diff.set(0, 0);\n    this.areaSelecting = false;\n    this.pushPulling = false;\n    this.startTime = Date.now();\n    this.controlIndexCache = null;\n\n    super.extras();\n\n    const pressed = this.state.pressed;\n    if (pressed.includes(\"d\")) {\n      panCameraStart(this.state);\n    } else if (pressed.includes(\"v\")) {\n      this.state.view.mouse1.copy(this.current);\n      this.state.view.mouse2.copy(this.current);\n      this.state.view.update();\n    } else if (pressed.includes(\"r\")) {\n      rotateStart(this.state);\n    } else if (pressed.includes(\"control\")) {\n      this.setRay();\n      const intersectIndex = checkRayIntersect(this);\n      if (intersectIndex !== null) {\n        toggleSelectAndRenderCells(this.state, this, intersectIndex);\n      }\n    } else {\n      this.state.gridCache = this.state.selectedGrid.slice();\n      // default\n      this.setRay();\n      const intersectIndex = checkRayIntersect(this);\n      if (intersectIndex !== null) {\n        const isSelected = checkSelected(this.state, intersectIndex);\n        if (isSelected && !pressed.includes(\"shift\")) {\n          this.state.heightGridCache = this.state.heightGrid.slice();\n          this.pushPulling = true;\n        } else {\n          if (!pressed.includes(\"shift\")) clearSelected(this.state);\n          this.selectIndexCache = intersectIndex;\n          selectAndRenderCells(this.state, intersectIndex);\n        }\n      } else {\n        if (!pressed.includes(\"shift\")) clearSelected(this.state);\n        renderSelected(this.state);\n      }\n    }\n  }\n\n  move() {\n    if (this.active && this.subPointers) {\n      const [p1] = this.subPointers;\n      this.current.copy(p1.current);\n      this.diff.copy(this.current).sub(this.initial);\n\n      const pressed = this.state.pressed;\n      if (pressed.includes(\"d\")) {\n        panCamera(this.state, this);\n      } else if (pressed.includes(\"r\")) {\n        rotate(this.state, this);\n      } else if (pressed.includes(\"v\")) {\n        this.state.view.mouse2.copy(this.current);\n        this.state.view.update();\n      } else if (pressed.includes(\"control\")) {\n        this.setRay();\n        const intersectIndex = checkRayIntersect(this);\n        if (intersectIndex !== null) {\n          toggleSelectAndRenderCells(this.state, this, intersectIndex);\n        }\n      } else if (this.pushPulling) {\n        pushPullSelected(this.state, this);\n      } else {\n        // default\n        if (\n          Math.abs(this.diff.x) > areaSelectThreshold ||\n          Math.abs(this.diff.y) > areaSelectThreshold\n        ) {\n          if (!this.areaSelecting) {\n            // start area select\n            this.setRay();\n            this.areaSelecting = true;\n            this.selectBox = new SelectBox(\n              this.state,\n              this.initial,\n              this.current\n            );\n            this.selectionBox.startPoint.copy(this.clip);\n            deSelectAndRenderCells(this.state, this.selectIndexCache!);\n          } else {\n            // continue area select\n            this.selectBox!.update(this.current);\n            this.selectionBox.endPoint.copy(this.clip);\n          }\n        } else {\n          if (this.areaSelecting) {\n            this.areaSelecting = false;\n            this.selectBox!.destroy();\n            this.selectBox = null;\n            selectAndRenderCells(this.state, this.selectIndexCache!);\n          }\n        }\n      }\n\n      super.extras();\n    }\n  }\n\n  cancel() {\n    this.pushPulling = false;\n    if (this.areaSelecting) {\n      this.areaSelecting = false;\n      this.selectBox!.destroy();\n    }\n    this.active = false;\n  }\n\n  end() {\n    this.pushPulling = false;\n    if (this.areaSelecting) {\n      this.areaSelecting = false;\n      this.selectBox!.destroy();\n      this.setRay();\n      areaSelectEnd(this.state, this, this.selectionBox);\n    }\n    super.end();\n    super.extras();\n  }\n}\n\nexport default PointerOne;\n","import { SubPointer } from \"./PointerComponent\";\nimport Pointer from \"./Pointer\";\nimport { panCamera, panCameraStart } from \"./Actions\";\n\n// no between because it gets complicated\nclass PointerThree extends Pointer {\n  start(subPointers: Array<SubPointer>) {\n    this.active = true;\n    this.subPointers = subPointers;\n    const [p1, p2, p3] = subPointers;\n\n    this.current\n      .copy(p1.current)\n      .add(p2.current)\n      .add(p3.current)\n      .divideScalar(3);\n    this.initial.copy(this.current);\n\n    this.diff.set(0, 0);\n    super.extras();\n\n    panCameraStart(this.state);\n  }\n\n  move() {\n    if (this.subPointers) {\n      const [p1, p2, p3] = this.subPointers;\n      this.current\n        .copy(p1.current)\n        .add(p2.current)\n        .add(p3.current)\n        .divideScalar(3);\n\n      this.diff.copy(this.current).sub(this.initial);\n      super.extras();\n\n      panCamera(this.state, this);\n    }\n  }\n\n  end() {\n    super.end();\n    super.extras();\n  }\n}\n\nexport default PointerThree;\n","import { SubPointer } from \"./PointerComponent\";\nimport * as THREE from \"three\";\nimport Pointer from \"./Pointer\";\nimport State from \"./State\";\nimport {\n  rotate,\n  rotateStart,\n  continuousZoomStart,\n  continuousZoom,\n} from \"./Actions\";\n\nclass PointerTwo extends Pointer {\n  initialBetween: THREE.Vector2;\n  between: THREE.Vector2;\n\n  constructor(state: State) {\n    super(state);\n    this.between = new THREE.Vector2();\n    this.initialBetween = new THREE.Vector2();\n  }\n\n  start(subPointers: Array<SubPointer>) {\n    super.start(subPointers);\n    this.subPointers = subPointers;\n    const [p1, p2] = subPointers;\n\n    this.current.copy(p1.current).add(p2.current).divideScalar(2);\n    this.initial.copy(this.current);\n\n    this.between.copy(p1.current).sub(p2.current);\n    this.initialBetween.copy(this.between);\n\n    this.diff.set(0, 0);\n    super.extras();\n\n    rotateStart(this.state);\n    continuousZoomStart(this.state);\n  }\n\n  move() {\n    if (this.subPointers) {\n      const [p1, p2] = this.subPointers;\n      this.current.copy(p1.current).add(p2.current).divideScalar(2);\n\n      this.between.copy(p1.current).sub(p2.current);\n\n      this.diff.copy(this.current).sub(this.initial);\n      super.extras();\n\n      rotate(this.state, this);\n      continuousZoom(this.state, this);\n    }\n  }\n\n  end() {\n    super.end();\n    super.extras();\n  }\n}\n\nexport default PointerTwo;\n","import * as THREE from \"three\";\nimport { rotate, rotateStart } from \"./Actions\";\nimport State from \"./State\";\n\nclass PointerMiddle {\n  active: boolean;\n  initial: THREE.Vector2;\n  current: THREE.Vector2;\n  diff: THREE.Vector2;\n  state: State;\n\n  constructor(state: State) {\n    this.active = false;\n    this.initial = new THREE.Vector2();\n    this.current = new THREE.Vector2();\n    this.diff = new THREE.Vector2();\n    this.state = state;\n  }\n\n  start(e: PointerEvent) {\n    this.active = true;\n    this.current.set(e.clientX, e.clientY);\n    this.initial.copy(this.current);\n    this.diff.set(0, 0);\n\n    rotateStart(this.state);\n  }\n\n  move(e: PointerEvent) {\n    this.current.set(e.clientX, e.clientY);\n    this.diff.copy(this.current).sub(this.initial);\n\n    rotate(this.state, this);\n  }\n\n  end() {\n    this.active = false;\n    this.current.set(0, 0);\n    this.diff.set(0, 0);\n  }\n}\n\nexport default PointerMiddle;\n","import { useEffect } from \"react\";\nimport State from \"./State\";\nimport * as THREE from \"three\";\nimport { discreteZoom, renderSelected } from \"./Actions\";\n\nexport class SubPointer {\n  state: State;\n  id: number;\n  current: THREE.Vector2;\n\n  constructor(state: State, e: PointerEvent) {\n    this.state = state;\n    this.id = e.pointerId;\n    this.current = new THREE.Vector2(e.clientX, e.clientY);\n\n    // left button\n    this.state.pointers.push(this);\n    switch (this.state.pointers.length) {\n      case 1:\n        // start 1\n        this.state.PointerOne.start(\n          this.state.pointers.slice(0, 1),\n          state.pressed\n        );\n        break;\n      case 2:\n        // start 2\n        if (Date.now() - state.PointerOne.startTime) {\n          // revert selection\n          state.selectedGrid = state.gridCache;\n          renderSelected(state);\n        }\n        this.state.PointerOne.cancel();\n        this.state.PointerTwo.start(this.state.pointers.slice(0, 2));\n        break;\n      default:\n        // three or greater start three\n        this.state.PointerTwo.end();\n        this.state.PointerThree.start(this.state.pointers.slice(0, 3));\n    }\n  }\n\n  move(e: PointerEvent) {\n    this.current.set(e.clientX, e.clientY);\n    switch (this.state.pointers.length) {\n      case 1:\n        this.state.PointerOne.move();\n        break;\n      case 2:\n        this.state.PointerTwo.move();\n        break;\n      default:\n        this.state.PointerThree.move();\n        break;\n    }\n  }\n\n  remove() {\n    const index = getPointerIndexById(this.state, this.id);\n    if (index !== -1) {\n      this.state.pointers.splice(index, 1);\n    }\n    switch (this.state.pointers.length) {\n      case 0:\n        this.state.PointerOne.end();\n        break;\n      case 1:\n        // down to 1\n        this.state.PointerTwo.end();\n        // do not step down to 1\n        // this.state.PointerOne.start(this.state.pointers.slice(0, 1));\n        break;\n      case 2:\n        // down to 2\n        this.state.PointerThree.end();\n        this.state.PointerTwo.start(this.state.pointers.slice(0, 2));\n        break;\n      default:\n    }\n  }\n}\n\ntype PointerProps = {\n  state: State;\n};\n\nconst PointerComponent = ({ state }: PointerProps) => {\n  useEffect(() => {\n    const { canvas } = state;\n\n    const handlePointerMove = (e: PointerEvent) => {\n      if (state.lastPointerButtonPressed === 0) {\n        if (state.pointers.length > 0) {\n          let pointer;\n          if (state.pressed.includes(\" \")) {\n            pointer = getPointerById(state, 999);\n          } else {\n            pointer = getPointerById(state, e.pointerId);\n          }\n          if (pointer) {\n            pointer.move(e);\n          }\n        } else {\n          if (state.PointerHover.active) {\n            state.PointerHover.move(e.clientX, e.clientY);\n          } else {\n            state.PointerHover.start(e.clientX, e.clientY);\n          }\n        }\n      } else if (state.lastPointerButtonPressed === 1) {\n        if (state.PointerMiddle.active) {\n          state.PointerMiddle.move(e);\n        }\n      } else if (state.lastPointerButtonPressed === 2) {\n        // right\n      }\n    };\n\n    const handlePointerDown = (e: PointerEvent) => {\n      state.PointerHover.end();\n      state.lastPointerButtonPressed = e.button;\n      if (state.lastPointerButtonPressed === 0) {\n        new SubPointer(state, e);\n        canvas.setPointerCapture(e.pointerId);\n      } else if (state.lastPointerButtonPressed === 1) {\n        state.PointerMiddle.start(e);\n      } else if (state.lastPointerButtonPressed === 2) {\n        // right\n      }\n      canvas.setPointerCapture(e.pointerId);\n    };\n\n    const handlePointerUp = (e: PointerEvent) => {\n      if (state.lastPointerButtonPressed === 0) {\n        if (state.pointers.length > 0) {\n          const pointer = getPointerById(state, e.pointerId);\n          if (pointer) pointer.remove();\n        } else {\n          state.PointerHover.end();\n        }\n        canvas.releasePointerCapture(e.pointerId);\n      } else if (state.lastPointerButtonPressed === 1) {\n        state.PointerMiddle.end();\n        state.lastPointerButtonPressed = 0;\n      } else if (state.lastPointerButtonPressed === 2) {\n        // right\n      }\n    };\n\n    const handleMousewheel = (e: WheelEvent) => {\n      if (state.pressed.includes(\"v\")) {\n        state.viewFinder.wheel(e.deltaY);\n      } else {\n        discreteZoom(state, e.deltaY);\n      }\n    };\n\n    if (canvas) {\n      canvas.addEventListener(\"pointerdown\", handlePointerDown);\n      canvas.addEventListener(\"pointermove\", handlePointerMove);\n      canvas.addEventListener(\"pointerup\", handlePointerUp);\n      canvas.addEventListener(\"pointercancel\", handlePointerUp);\n      canvas.addEventListener(\"wheel\", handleMousewheel, {\n        passive: false,\n      });\n      return () => {\n        canvas.removeEventListener(\"pointerdown\", handlePointerDown);\n        canvas.removeEventListener(\"pointermove\", handlePointerMove);\n        canvas.removeEventListener(\"pointerup\", handlePointerUp);\n        canvas.removeEventListener(\"pointercancel\", handlePointerUp);\n        canvas.removeEventListener(\"wheel\", handleMousewheel);\n      };\n    }\n  }, [state]);\n\n  return null;\n};\n\nexport default PointerComponent;\n\nconst getPointerIndexById = (state: State, pointerId: number) => {\n  const ids = state.pointers.map((pointer) => pointer.id);\n  return ids.indexOf(pointerId);\n};\n\nconst getPointerById = (state: State, pointerId: number) => {\n  const index = getPointerIndexById(state, pointerId);\n  if (index > -1) {\n    return state.pointers[index];\n  } else {\n    return null;\n  }\n};\n","import * as THREE from \"three\";\nimport { panCameraStart, panCamera, rotate, rotateStart } from \"./Actions\";\nimport State from \"./State\";\nimport { SubPointer } from \"./PointerComponent\";\n\nclass PointerHover {\n  active: boolean;\n  initial: THREE.Vector2;\n  current: THREE.Vector2;\n  diff: THREE.Vector2;\n  state: State;\n  spacePointer: null | SubPointer;\n\n  constructor(state: State) {\n    this.active = false;\n    this.initial = new THREE.Vector2();\n    this.current = new THREE.Vector2();\n    this.diff = new THREE.Vector2();\n    this.state = state;\n    this.spacePointer = null;\n  }\n\n  start(x: number, y: number) {\n    this.active = true;\n    this.current.set(x, y);\n    this.initial.copy(this.current);\n    this.diff.set(0, 0);\n\n    const pressed = this.state.pressed;\n    if (pressed.includes(\" \")) {\n      this.spacePointer = new SubPointer(this.state, {\n        pointerId: 999,\n        clientX: this.current.x,\n        clientY: this.current.y,\n      });\n    } else if (pressed.includes(\"r\")) {\n      rotateStart(this.state);\n    } else if (pressed.includes(\"d\")) {\n      panCameraStart(this.state);\n    }\n  }\n\n  move(x: number, y: number) {\n    this.current.set(x, y);\n    this.diff.copy(this.current).sub(this.initial);\n    const pressed = this.state.pressed;\n    if (pressed.includes(\"r\")) {\n      rotate(this.state, this);\n    } else if (pressed.includes(\"d\")) {\n      panCamera(this.state, this);\n    }\n  }\n\n  end() {\n    this.active = false;\n    this.current.set(0, 0);\n    this.diff.set(0, 0);\n  }\n}\n\nexport default PointerHover;\n","import * as Three from \"three\";\nimport State from \"./State\";\n\nexport class Box extends Three.InstancedMesh {\n  selected: boolean;\n\n  constructor(\n    state: State,\n    cellSize: number,\n    cols: number,\n    rows: number,\n    depth: number,\n    texture: Three.Texture\n  ) {\n    const geometry = new Three.BoxBufferGeometry(cellSize, cellSize, cellSize);\n\n    var uv = geometry.getAttribute(\"uv\");\n\n    // +x\n    uv.setXY(0, 1, 1);\n    uv.setXY(1, 1, 1);\n    uv.setXY(2, 1, 0);\n    uv.setXY(3, 1, 0);\n\n    // -x\n    uv.setXY(4, 0, 1);\n    uv.setXY(5, 0, 1);\n    uv.setXY(6, 0, 0);\n    uv.setXY(7, 0, 0);\n\n    // +y\n    uv.setXY(8, 0, 1);\n    uv.setXY(9, 1, 1);\n    uv.setXY(10, 0, 1);\n    uv.setXY(11, 1, 1);\n\n    // -y\n    uv.setXY(12, 0, 0);\n    uv.setXY(13, 1, 0);\n    uv.setXY(14, 0, 0);\n    uv.setXY(15, 1, 0);\n\n    // z\n    uv.setXY(16, 0, 1);\n    uv.setXY(17, 1, 1);\n    uv.setXY(18, 0, 0);\n    uv.setXY(15, 1, 0);\n\n    // -z\n    uv.setXY(20, 0, 0);\n    uv.setXY(21, 0, 0);\n    uv.setXY(22, 0, 0);\n    uv.setXY(23, 0, 0);\n\n    const texScale = [1 / cols, 1 / rows];\n    const offsets = [];\n    for (let r = 0; r < rows; r++) {\n      for (let c = 0; c < cols; c++) {\n        for (let d = 0; d < depth; d++) {\n          offsets.push(c, r);\n        }\n      }\n    }\n    geometry.setAttribute(\n      \"offset\",\n      new Three.InstancedBufferAttribute(new Float32Array(offsets), 2, false)\n    );\n\n    const visible = [];\n    for (let r = 0; r < rows; r++) {\n      for (let c = 0; c < cols; c++) {\n        for (let d = 0; d < depth; d++) {\n          visible.push(d === 0 ? 1 : 0);\n          // visible.push(1);\n        }\n      }\n    }\n    geometry.setAttribute(\n      \"visible\",\n      new Three.InstancedBufferAttribute(new Float32Array(visible), 1, false)\n    );\n\n    // const selected = Array(rows * cols * depth).fill(0);\n    // geometry.setAttribute(\n    //   \"selected\",\n    //   new Three.InstancedBufferAttribute(new Float32Array(selected), 1, false)\n    // );\n\n    const vertexShader = `\n      varying vec2 vUv;\n      attribute vec2 offset;\n      varying vec2 vOffset;\n      uniform vec2 texScale;\n      varying vec2 vTexScale;\n      attribute float visible;\n\n      void main() {\n        vUv = uv * texScale;\n        vOffset = offset * texScale;\n        vTexScale = texScale;\n\n        gl_Position = projectionMatrix * viewMatrix * modelMatrix * instanceMatrix * vec4(position, 1.0) * visible;\n      }\n    `;\n    const fragmentShader = `\n      uniform sampler2D texture1;\n      varying vec2 vUv;\n      varying vec2 vOffset;\n      varying vec2 vTexScale;\n\n      void main() {\n         vec4 color = texture2D(texture1, vec2(vUv.x + vOffset.x, vUv.y + vOffset.y));\n        color.a = 1.0;\n         gl_FragColor = color;\n      }\n    `;\n\n    var uniforms = {\n      texture1: { type: \"t\", value: texture },\n      texScale: { value: texScale },\n    };\n\n    const material = new Three.ShaderMaterial({\n      uniforms: uniforms,\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader,\n    });\n    super(geometry, material, cols * rows * depth);\n    const matrix = new Three.Matrix4();\n    for (let r = 0; r < rows; r++) {\n      for (let c = 0; c < cols; c++) {\n        for (let d = 0; d < depth; d++) {\n          matrix.setPosition(\n            (c + 0.5) * cellSize - (cols * cellSize) / 2,\n            (r + 0.5) * cellSize - (rows * cellSize) / 2,\n            d * cellSize\n          );\n          const i = r * cols * depth + c * depth + d;\n          this.setMatrixAt(i, matrix);\n        }\n      }\n    }\n    state.scene.add(this);\n  }\n}\n","import * as Three from \"three\";\nimport State from \"./State\";\n\nexport class OutlineBox extends Three.InstancedMesh {\n  state: State;\n  material: THree.ShaderMaterial;\n\n  constructor(state: State, cellSize: number, cols: number, rows: number) {\n    const geometry = new Three.BoxBufferGeometry(\n      cellSize,\n      cellSize,\n      cellSize / 4\n    );\n\n    geometry.setAttribute(\n      \"depth\",\n      new Three.InstancedBufferAttribute(\n        new Float32Array(cols * rows),\n        1,\n        false\n      )\n    );\n\n    const selected = Array(rows * cols).fill(0);\n    geometry.setAttribute(\n      \"selected\",\n      new Three.InstancedBufferAttribute(new Float32Array(selected), 1, false)\n    );\n\n    const vertexShader = `\n      attribute float depth;\n      uniform float cellSize;\n      attribute float selected;\n      uniform vec3 color;\n\n      void main() {\n        vec3 depthed = position;\n        depthed.z += depth * cellSize - cellSize / 2.0;\n        vec4 pos = viewMatrix * modelMatrix * instanceMatrix * vec4(depthed, 1.0);\n        gl_Position = projectionMatrix * pos * selected;\n    }\n    `;\n    const fragmentShader = `\n      uniform vec3 color;\n      void main() {\n        gl_FragColor = vec4(color, 1.0);\n     }\n   `;\n    const uniforms = {\n      cellSize: { value: cellSize },\n      color: { value: new Three.Vector3(0.0, 1.0, 1.0) },\n    };\n    const material = new Three.ShaderMaterial({\n      uniforms: uniforms,\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader,\n    });\n\n    super(geometry, material, cols * rows);\n    this.material = material;\n    state.highlightScene.add(this);\n    this.state = state;\n\n    const matrix = new Three.Matrix4();\n    for (let r = 0; r < rows; r++) {\n      for (let c = 0; c < cols; c++) {\n        matrix.setPosition(\n          (c + 0.5) * cellSize - (cols * cellSize) / 2,\n          (r + 0.5) * cellSize - (rows * cellSize) / 2,\n          0\n        );\n        const i = r * cols + c;\n        this.setMatrixAt(i, matrix);\n      }\n    }\n    this.updateDepth();\n  }\n\n  updateDepth() {\n    for (let i = 0; i < this.state.heightGrid.length; i++) {\n      const depth = this.state.heightGrid[i];\n      // @ts-ignore\n      this.geometry.attributes.depth.array[i] = depth;\n    }\n    this.geometry.attributes.depth.needsUpdate = true;\n  }\n}\n\nexport default OutlineBox;\n","import * as THREE from \"three\";\n\nclass FullscreenQuad {\n  camera: THREE.PerspectiveCamera;\n  scene: THREE.Scene;\n  renderTarget: THREE.RenderTarget;\n  material: THREE.MeshBasicMaterial;\n\n  constructor() {\n    this.camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      100\n    );\n    const visibleHeight = 2 * Math.tan((this.camera.fov * Math.PI) / 360) * 5;\n    const worldPixel = visibleHeight / window.innerHeight;\n\n    this.renderTarget = new THREE.WebGLRenderTarget(\n      window.innerWidth,\n      window.innerHeight\n    );\n    const geometry = new THREE.PlaneBufferGeometry(\n      window.innerWidth * worldPixel,\n      window.innerHeight * worldPixel\n    );\n    this.material = new THREE.MeshBasicMaterial({\n      transparent: true,\n      opacity: 0.3,\n    });\n    const cube = new THREE.Mesh(geometry, this.material);\n    this.scene = new THREE.Scene();\n    this.scene.add(cube);\n    this.camera.position.z = 5;\n\n    this.material.map = this.renderTarget.texture;\n  }\n}\n\nexport default FullscreenQuad;\n","import State from \"./State\";\nimport * as THREE from \"three\";\n\nclass View {\n  holder: HTMLElement;\n  div: HTMLElement;\n  mouse1: THREE.Vector2;\n  mouse2: THREE.Vector2;\n  min: THREE.Vector2;\n  max: THREE.Vector2;\n  topLeft: THREE.Vector2;\n  botRight: THREE.Vector2;\n  diff: THREE.Vector2;\n  kind: \"fullscreen\" | \"window\";\n  activeHandle: null | number;\n  mouseOrigin: THREE.Vector2;\n  mouseDiff: THREE.Vector2;\n  minOrigin: THREE.Vector2;\n  maxOrigin: THREE.Vector2;\n  dragging: boolean;\n  state: State;\n\n  constructor(state: State, mouse1: THREE.Vector2, mouse2: THREE.Vector2) {\n    this.div = document.createElement(\"div\");\n    this.mouse1 = new THREE.Vector2().copy(mouse1);\n    this.mouse2 = new THREE.Vector2().copy(mouse2);\n    this.min = new THREE.Vector2();\n    this.max = new THREE.Vector2();\n    this.topLeft = new THREE.Vector2(0, 0);\n    this.botRight = new THREE.Vector2(window.innerWidth, window.innerHeight);\n    this.diff = new THREE.Vector2();\n    this.activeHandle = null;\n    this.div.style.border = \"solid 1px \" + state.viewColor;\n    this.div.style.position = \"absolute\";\n    this.kind = \"fullscreen\";\n    this.dragging = false;\n    this.mouseOrigin = new THREE.Vector2();\n    this.mouseDiff = new THREE.Vector2();\n    this.minOrigin = new THREE.Vector2();\n    this.maxOrigin = new THREE.Vector2();\n    this.div.style.pointerEvents = \"auto\";\n    this.state = state;\n\n    this.div.addEventListener(\"pointerdown\", (e) => {\n      e.stopPropagation();\n      this.dragging = true;\n      this.mouseOrigin.set(e.clientX, e.clientY);\n      this.minOrigin.copy(this.min);\n      this.maxOrigin.copy(this.max);\n      this.div.setPointerCapture(e.pointerId);\n    });\n    this.div.addEventListener(\"pointermove\", (e) => {\n      if (this.dragging) {\n        this.mouseDiff.set(e.clientX, e.clientY).sub(this.mouseOrigin);\n        this.mouse1.x = this.minOrigin.x + this.mouseDiff.x;\n        this.mouse1.y = this.minOrigin.y + this.mouseDiff.y;\n        this.mouse2.x = this.maxOrigin.x + this.mouseDiff.x;\n        this.mouse2.y = this.maxOrigin.y + this.mouseDiff.y;\n        this.update();\n      }\n    });\n    this.div.addEventListener(\"pointerup\", (e) => {\n      this.dragging = false;\n      this.div.releasePointerCapture(e.pointerId);\n    });\n\n    this.holder = document.createElement(\"div\");\n    this.holder.style.position = \"fixed\";\n    this.holder.style.left = \"0px\";\n    this.holder.style.top = \"0px\";\n    this.holder.style.right = \"0px\";\n    this.holder.style.bottom = \"0px\";\n    this.holder.style.overflow = \"hidden\";\n    this.holder.style.pointerEvents = \"none\";\n    this.holder.appendChild(this.div);\n\n    document.body.appendChild(this.holder);\n\n    const positions = [\n      [-1, -1],\n      [0, -1],\n      [1, -1],\n      [-1, 0],\n      [1, 0],\n      [-1, 1],\n      [0, 1],\n      [1, 1],\n    ];\n    const percents = {\n      \"-1\": \"0%\",\n      \"0\": \"50%\",\n      \"1\": \"100%\",\n    };\n    for (let i = 0; i < positions.length; i++) {\n      const position = positions[i];\n      const div = document.createElement(\"div\");\n      div.style.width = 48 + \"px\";\n      div.style.height = 48 + \"px\";\n      div.style.position = \"absolute\";\n      // @ts-ignore\n      div.style.left = percents[position[0].toString()];\n      // @ts-ignore\n      div.style.top = percents[position[1].toString()];\n      div.style.transform = \"translate(-24px, -24px)\";\n      div.style.pointerEvents = \"auto\";\n      div.style.display = \"none\";\n      div.style.padding = \"16px\";\n      const inner = document.createElement(\"div\");\n      inner.style.width = 16 + \"px\";\n      inner.style.height = 16 + \"px\";\n      inner.style.background = state.viewColor;\n      div.appendChild(inner);\n      div.addEventListener(\"pointerdown\", (e) => {\n        e.stopPropagation();\n        this.activeHandle = i;\n        if (position[0] === -1) {\n          this.mouse1.x = this.max.x;\n        } else if (position[0] === 1) {\n          this.mouse1.x = this.min.x;\n        }\n        if (position[1] === -1) {\n          this.mouse1.y = this.max.y;\n        } else if (position[1] === 1) {\n          this.mouse1.y = this.min.y;\n        }\n        div.setPointerCapture(e.pointerId);\n      });\n      div.addEventListener(\"pointermove\", (e) => {\n        if (this.activeHandle !== null) {\n          if (position[0] !== 0) {\n            this.mouse2.x = e.clientX;\n          }\n          if (position[1] !== 0) {\n            this.mouse2.y = e.clientY;\n          }\n          this.update();\n        }\n      });\n      div.addEventListener(\"pointerup\", (e) => {\n        this.activeHandle = null;\n        div.releasePointerCapture(e.pointerId);\n      });\n      this.div.appendChild(div);\n    }\n    this.update();\n  }\n\n  showHandles() {\n    this.div.style.pointerEvents = \"auto\";\n    for (const child of Array.from(this.div.childNodes)) {\n      child.style.display = \"block\";\n    }\n  }\n\n  hideHandles() {\n    this.div.style.pointerEvents = \"none\";\n    for (const child of Array.from(this.div.childNodes)) {\n      child.style.display = \"none\";\n    }\n  }\n\n  updateColor() {\n    for (const child of Array.from(this.div.childNodes)) {\n      child.childNodes[0].style.background = this.state.viewColor;\n    }\n    this.div.style.borderColor = this.state.viewColor;\n  }\n\n  update() {\n    if (this.kind === \"window\") {\n      this.div.style.display = \"block\";\n      this.showHandles();\n      this.botRight.set(window.innerWidth, window.innerHeight);\n      this.min.copy(this.mouse1).min(this.mouse2).max(this.topLeft);\n      this.max.copy(this.mouse1).max(this.mouse2).min(this.botRight);\n    } else if (this.kind === \"fullscreen\") {\n      this.div.style.display = \"none\";\n      this.botRight.set(window.innerWidth, window.innerHeight);\n      this.hideHandles();\n      this.min.copy(this.topLeft);\n      this.max.copy(this.botRight);\n    }\n    this.diff.copy(this.max).sub(this.min);\n    this.div.style.left = this.min.x + \"px\";\n    this.div.style.top = this.min.y + \"px\";\n    this.div.style.width = this.diff.x + \"px\";\n    this.div.style.height = this.diff.y + \"px\";\n  }\n}\n\nexport default View;\n","import * as Three from \"three\";\nimport { SubPointer } from \"./PointerComponent\";\nimport PointerOne from \"./PointerOne\";\nimport PointerThree from \"./PointerThree\";\nimport PointerTwo from \"./PointerTwo\";\nimport PointerMiddle from \"./PointerMiddle\";\nimport PointerHover from \"./PointerHover\";\nimport { Box } from \"./Box\";\nimport { MeshBasicMaterial } from \"three\";\nimport OutlineBox from \"./OutlineBox\";\nimport FullscreenQuad from \"./FullscreenQuad\";\nimport View from \"./View\";\n\nclass State {\n  canvas: HTMLCanvasElement;\n  camera: Three.PerspectiveCamera;\n  initialCameraPosition: Three.Vector3;\n  renderer: Three.WebGLRenderer;\n  scene: Three.Scene;\n  worldPixel: number;\n  boxes: Array<Box>;\n  group: Three.Object3D;\n  outlineBoxes: Three.Object3D;\n  heightGrid: Array<number>;\n  selectedGrid: Array<number>;\n  keyInterupts: Array<string>;\n  hoverKeyInterrupts: Array<string>;\n  cols: number;\n  rows: number;\n  depth: number;\n  currentImageDims: [number, number];\n  pressed: Array<string>;\n  center: Three.Vector3;\n  pressedOne: string;\n  pointers: Array<SubPointer>;\n  PointerOne: PointerOne;\n  PointerTwo: PointerTwo;\n  PointerThree: PointerThree;\n  PointerMiddle: PointerMiddle;\n  lastPointerButtonPressed: number;\n  initialRotation: Three.Euler;\n  gridCache: Array<number>;\n  PointerHover: PointerHover;\n  heightGridCache: Array<number>;\n  viewScene: Three.Scene;\n  highlightScene: Three.Scene;\n  view: View;\n  printCanvas: HTMLCanvasElement;\n  printTarget: Three.WebGLRenderer;\n  backgroundColor: number;\n  viewColor: string;\n  backgroundAlpha: number;\n  highlightColor: number;\n  highlightAlpha: number;\n  fullscreenQuad: FullscreenQuad;\n  mode: \"normal\" | \"view\";\n  isTouch: boolean;\n\n  constructor(canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    this.camera = new Three.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      100\n    );\n    this.renderer = new Three.WebGLRenderer({\n      canvas,\n      logarithmicDepthBuffer: true,\n      antialias: false,\n    });\n    this.renderer.autoClear = false;\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.scene = new Three.Scene();\n    this.pointers = [];\n    this.boxes = [];\n    this.cols = 8;\n    this.rows = 8;\n    this.depth = 48;\n    this.selectedGrid = [];\n    this.gridCache = [];\n    this.heightGrid = [];\n    this.heightGridCache = [];\n    this.pressed = [];\n    this.center = new Three.Vector3();\n    this.initialCameraPosition = new Three.Vector3();\n    this.pressedOne = \"\";\n    this.PointerOne = new PointerOne(this);\n    this.PointerTwo = new PointerTwo(this);\n    this.PointerThree = new PointerThree(this);\n    this.PointerMiddle = new PointerMiddle(this);\n    this.PointerHover = new PointerHover(this);\n    this.lastPointerButtonPressed = 0;\n    this.keyInterupts = [\" \", \"d\", \"r\", \"control\"];\n    this.hoverKeyInterrupts = [\" \", \"d\", \"r\"];\n    this.initialRotation = new Three.Euler();\n    this.mode = \"normal\";\n    this.viewScene = new Three.Scene();\n    this.highlightScene = new Three.Scene();\n    this.printCanvas = document.createElement(\"canvas\");\n    this.printCanvas.width = window.innerWidth;\n    this.printCanvas.height = window.innerHeight;\n    this.printTarget = new Three.WebGLRenderer({\n      canvas: this.printCanvas,\n      alpha: true,\n    });\n    this.currentImageDims = [16, 16];\n    this.viewColor = \"#aaaaaa\";\n    this.view = new View(this, new Three.Vector2(), new Three.Vector2());\n    this.backgroundColor = 0x000000;\n    this.backgroundAlpha = 0;\n    this.highlightColor = 0x00ffff;\n    this.highlightAlpha = 0.3;\n    this.fullscreenQuad = new FullscreenQuad();\n    this.isTouch = window.matchMedia(\"(pointer: coarse)\").matches;\n\n    // set world pixel\n    {\n      const visibleHeight = 2 * Math.tan((this.camera.fov * Math.PI) / 360) * 5;\n      this.worldPixel = visibleHeight / window.innerHeight;\n    }\n\n    this.group = new Three.Group();\n\n    // this.lkadImage(\"ellott2.jpg\");\n    this.loadImage(\"bowiealt.jpg\");\n\n    // additional settings\n    this.camera.position.z = 5;\n\n    this.animate();\n  }\n\n  loadImage(src: string) {\n    const loader = new Three.TextureLoader();\n    loader.setCrossOrigin(\"\");\n    loader.load(\n      src,\n      (texture) => {\n        this.scene.remove(this.group);\n        this.group = new Three.Group();\n\n        const limit = 1024;\n        const img = texture.image;\n        if (img.width > limit || img.height > limit) {\n          const aspect = img.width / img.height;\n          if (aspect > 1) {\n            img.width = limit;\n            img.height = img.width / aspect;\n          } else {\n            img.height = limit;\n            img.width = img.height * aspect;\n          }\n        }\n        const cellSize = this.worldPixel * 16;\n\n        this.currentImageDims = [img.width, img.height];\n        const cols = Math.round(img.width / 16);\n        const rows = Math.round(img.height / 16);\n        this.cols = cols;\n        this.rows = rows;\n\n        this.selectedGrid = Array(cols * rows).fill(0);\n        this.heightGrid = Array(cols * rows).fill(1);\n\n        const xPadded = (16 * cols) / 2 + 16 * 3;\n        const yPadded = (16 * rows) / 2 + 16 * 3;\n        const ray1 = new Three.Vector2(\n          window.innerWidth / 2 - xPadded,\n          window.innerHeight / 2 - yPadded\n        );\n        const ray2 = new Three.Vector2(\n          window.innerWidth / 2 + xPadded,\n          window.innerHeight / 2 + yPadded\n        );\n        this.view.mouse1.copy(ray1);\n        this.view.mouse2.copy(ray2);\n        this.view.update();\n        this.changeMode(\"normal\");\n\n        const outlineBoxes = new OutlineBox(this, cellSize, cols, rows);\n        const boxes = new Box(this, cellSize, cols, rows, this.depth, texture);\n        (boxes.material as MeshBasicMaterial).map = texture;\n        this.outlineBoxes = outlineBoxes;\n        this.group = boxes;\n      },\n      () => {},\n      (error) => {\n        // @ts-ignore\n        console.log(error.target);\n      }\n    );\n  }\n\n  animate() {\n    this.renderer.setClearColor(this.backgroundColor, 1);\n    this.renderer.clear();\n    this.renderer.render(this.scene, this.camera);\n\n    this.renderer.setRenderTarget(this.fullscreenQuad.renderTarget);\n    this.renderer.setClearColor(this.backgroundColor, 0);\n    this.renderer.clear();\n    this.renderer.render(this.highlightScene, this.camera);\n    this.renderer.setRenderTarget(null);\n\n    this.fullscreenQuad.material.opacity = this.highlightAlpha;\n    this.renderer.render(this.fullscreenQuad.scene, this.fullscreenQuad.camera);\n    // this.renderer.clearDepth();\n    // this.renderer.render(this.viewScene, this.camera);\n\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  changeMode(newMode: \"normal\" | \"view\") {\n    this.mode = newMode;\n    if (this.mode === \"view\" && this.view.kind === \"window\") {\n      this.view.showHandles();\n    } else {\n      this.view.hideHandles();\n    }\n  }\n}\n\nexport default State;\n","import { useEffect } from \"react\";\nimport {\n  discretePanCamera,\n  discreteZoom,\n  interruptPointerKeyDown,\n  interruptPointerKeyUp,\n} from \"./Actions\";\nimport State from \"./State\";\n\ntype KeyboardProps = {\n  state: State;\n};\n\nfunction Keyboard({ state }: KeyboardProps) {\n  useEffect(() => {\n    // const pressed = (key: string) => {};\n\n    const downHandler = (e: KeyboardEvent) => {\n      let press = e.key.toLowerCase();\n      if (press === \"-\") {\n        discreteZoom(state, 32);\n      } else if (press === \"+\" || press === \"=\") {\n        discreteZoom(state, -32);\n      }\n      if (!state.pressed.includes(press)) {\n        state.pressed.push(press);\n        interruptPointerKeyDown(state, press);\n      }\n      if (state.pressed.includes(\"arrowleft\")) {\n        discretePanCamera(state, [-1, 0]);\n      }\n      if (state.pressed.includes(\"arrowright\")) {\n        discretePanCamera(state, [1, 0]);\n      }\n      if (state.pressed.includes(\"arrowup\")) {\n        discretePanCamera(state, [0, -1]);\n      }\n      if (state.pressed.includes(\"arrowdown\")) {\n        discretePanCamera(state, [0, 1]);\n      }\n    };\n\n    const upHandler = (e: KeyboardEvent) => {\n      let press = e.key.toLowerCase();\n      if (press === \" \") {\n        if (state.PointerHover.spacePointer) {\n          state.PointerHover.spacePointer.remove();\n          state.PointerHover.spacePointer = null;\n        }\n      }\n      const index = state.pressed.indexOf(press);\n      if (index !== -1) {\n        state.pressed.splice(index, 1);\n      }\n      interruptPointerKeyUp(state, press);\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [state]);\n\n  return null;\n}\n\nexport default Keyboard;\n","import { useEffect, useRef, useState } from \"react\";\nimport { domLoadImage } from \"./BareActions\";\nimport State from \"./State\";\nimport * as THREE from \"three\";\nimport { print } from \"./Actions\";\n\ninterface ButtonProps {\n  children: any;\n  clickHandler?: any;\n  active?: boolean;\n  textColor: string;\n}\n\nfunction Button({\n  children,\n  clickHandler = null,\n  active = false,\n  textColor,\n}: ButtonProps) {\n  const shade = textColor === \"black\" ? \"800\" : \"200\";\n  return (\n    <div\n      role=\"button\"\n      className={`h-16 flex items-center justify-center px-5 betterhover:hover:bg-gray-${shade} betterhover:hover:bg-opacity-10 ${\n        active ? \"bg-gray-\" + shade : \"\"\n      } bg-opacity-10 pointer-events-auto`}\n      style={{ minWidth: \"8ch\" }}\n      onClick={() => clickHandler && clickHandler()}\n    >\n      {children}\n    </div>\n  );\n}\n\ninterface ShortcutProps {\n  action: any;\n  shortcut: string;\n}\n\nfunction HandleShortcut({ action, shortcut }: ShortcutProps) {\n  useEffect(() => {\n    const downHandler = (e: KeyboardEvent) => {\n      let press = e.key.toLowerCase();\n      if (press === shortcut) action();\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n    };\n  }, [action, shortcut]);\n\n  return null;\n}\n\ninterface DialogProps {\n  title: string;\n  children: any;\n  display: boolean;\n  setDisplay: any;\n  shortcut: string;\n  clearModals: any;\n}\n\nfunction Dialog({\n  title,\n  children,\n  display,\n  setDisplay,\n  shortcut,\n  clearModals,\n}: DialogProps) {\n  const [offsetX, setOffSetX] = useState(0);\n  const [offsetY, setOffSetY] = useState(0);\n  const pointerDown = useRef(false);\n  const pointerOrigin = useRef([0, 0]);\n  const offsetOrigin = useRef([0, 0]);\n\n  useEffect(() => {\n    const downHandler = (e: KeyboardEvent) => {\n      let press = e.key.toLowerCase();\n      if (press === \"escape\") setDisplay(false);\n      if (press === shortcut) {\n        clearModals();\n        setDisplay(!display);\n      }\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n    };\n  }, [display, shortcut, clearModals, setDisplay]);\n\n  return (\n    <div\n      className=\"fixed inset-0 z-50 pointer-events-none\"\n      style={{ display: display ? \"block\" : \"none\" }}\n    >\n      <div\n        className=\"absolute left-1/2 bg-white text-black pointer-events-auto shadow-md\"\n        style={{\n          top: 64,\n          maxHeight: \"calc(100% - 128px)\",\n          width: 440,\n          maxWidth: \"calc(100% - 32px)\",\n          transform: `translate(calc(${offsetX}px - 50%), ${offsetY}px)`,\n          overflow: \"auto\",\n        }}\n      >\n        <div className=\"flex border-b border-gray-200\">\n          <div\n            className=\"px-4 py-3 select-none flex-grow\"\n            onPointerDown={(e) => {\n              pointerDown.current = true;\n              pointerOrigin.current = [e.clientX, e.clientY];\n              offsetOrigin.current = [offsetX, offsetY];\n            }}\n            onPointerMove={(e) => {\n              if (pointerDown.current) {\n                setOffSetX(\n                  offsetOrigin.current[0] + e.clientX - pointerOrigin.current[0]\n                );\n                setOffSetY(\n                  offsetOrigin.current[1] + e.clientY - pointerOrigin.current[1]\n                );\n              }\n            }}\n            onPointerUp={() => {\n              pointerDown.current = false;\n            }}\n          >\n            {title}\n          </div>\n          <div\n            role=\"button\"\n            className=\"px-5 py-3 hover:bg-gray-200 cursor-pointer select-none\"\n            onClick={() => setDisplay(false)}\n          >\n            X\n          </div>\n        </div>\n        <div className=\"px-4 py-3\">{children}</div>\n      </div>\n    </div>\n  );\n}\n\ninterface BarProps {\n  state: State;\n  setMode: any;\n}\n\nexport function Bars({ state, setMode }: BarProps) {\n  const [isFocus, setIsFocus] = useState(false);\n  const [textColor, setTextColor] = useState(\"black\");\n  const [showAbout, setShowAbout] = useState(false);\n  const [showColors, setShowColors] = useState(false);\n  const [color, setColor] = useState(\"#000000\");\n  const [isTransparent, setIsTransparent] = useState(true);\n  const [highlightColor, setHighlightColor] = useState(\"#00ffff\");\n  const [highlightAlpha, setHighlightAlpha] = useState(state.highlightAlpha);\n  const [showView, setShowView] = useState(false);\n  const [showControls, setShowControls] = useState(false);\n  const [viewColor, setViewColor] = useState(state.viewColor);\n  const colorRef = useRef(new THREE.Color());\n  const [viewKind, setViewKind] = useState<\"fullscreen\" | \"window\">(\n    state.view.kind\n  );\n\n  useEffect(() => {\n    state.backgroundColor = parseInt(color.replace(/^#/, \"\"), 16);\n    const threeColor = colorRef.current.set(color);\n    if (\n      threeColor.r * 255 * 0.299 +\n        threeColor.g * 255 * 0.587 +\n        threeColor.b * 255 * 0.114 >\n      186\n    ) {\n      setTextColor(\"black\");\n    } else {\n      setTextColor(\"white\");\n    }\n  }, [color, state, setTextColor]);\n\n  useEffect(() => {\n    state.backgroundAlpha = isTransparent ? 0 : 1;\n  }, [isTransparent, state]);\n\n  useEffect(() => {\n    state.viewColor = viewColor;\n    state.view.updateColor();\n  }, [viewColor, state]);\n\n  useEffect(() => {\n    const threeColor = colorRef.current.set(highlightColor);\n    if (state.outlineBoxes) {\n      // @ts-ignore\n      state.outlineBoxes.material.uniforms.color.value.set(\n        threeColor.r,\n        threeColor.g,\n        threeColor.b\n      );\n      state.highlightColor = threeColor.getHex();\n    }\n  }, [highlightColor, state]);\n\n  useEffect(() => {\n    state.highlightAlpha = highlightAlpha;\n  }, [highlightAlpha, state]);\n\n  useEffect(() => {\n    setMode(showView ? \"view\" : \"normal\");\n  }, [showView, state, setMode]);\n\n  useEffect(() => {\n    state.view.kind = viewKind;\n    state.view.update();\n  }, [viewKind, state]);\n\n  const clearModals = () => {\n    setShowAbout(false);\n    setShowColors(false);\n    setShowView(false);\n    setShowControls(false);\n  };\n\n  return (\n    <>\n      <div\n        className={`fixed left-0 top-0 right-0 h-16 text-${textColor} flex justify-center z-10 select-none pointer-events-none `}\n      >\n        <div className=\"flex\">\n          {isFocus ? null : (\n            <>\n              <Button\n                textColor={textColor}\n                clickHandler={() => domLoadImage(state.loadImage.bind(state))}\n              >\n                <u>o</u>pen\n              </Button>\n              <Button\n                textColor={textColor}\n                clickHandler={() => {\n                  clearModals();\n                  setShowAbout(!showAbout);\n                }}\n                active={showAbout}\n              >\n                <u>a</u>bout\n              </Button>\n              <Button\n                textColor={textColor}\n                clickHandler={() => {\n                  clearModals();\n                  setShowColors(!showColors);\n                }}\n                active={showColors}\n              >\n                <u>c</u>olors\n              </Button>\n            </>\n          )}\n          <Button\n            textColor={textColor}\n            clickHandler={() => {\n              clearModals();\n              setIsFocus(!isFocus);\n            }}\n            active={isFocus}\n          >\n            <u>f</u>ocus\n          </Button>\n          <HandleShortcut action={() => setIsFocus(!isFocus)} shortcut={\"f\"} />\n          <HandleShortcut\n            action={() => {\n              clearModals();\n              setIsFocus(false);\n            }}\n            shortcut={\"escape\"}\n          />\n        </div>\n      </div>\n      {/* bottom bar */}\n      <div className=\"fixed left-0 bottom-0 right-0 h-16 text-${textColor flex justify-center z-10 select-none\">\n        <div className=\"flex\">\n          {isFocus ? null : (\n            <>\n              <Button\n                textColor={textColor}\n                clickHandler={() => {\n                  clearModals();\n                  setShowView(!showView);\n                }}\n                active={showView}\n              >\n                <u>v</u>iew\n              </Button>\n              <Button\n                textColor={textColor}\n                clickHandler={() => {\n                  clearModals();\n                  setShowControls(!showControls);\n                }}\n                active={showControls}\n              >\n                con<u>t</u>rols\n              </Button>\n            </>\n          )}\n          <Button textColor={textColor} clickHandler={() => print(state)}>\n            <u>p</u>rint\n          </Button>\n        </div>\n      </div>\n      {/* Dialogs */}\n      <Dialog\n        title=\"About\"\n        display={showAbout}\n        setDisplay={setShowAbout}\n        shortcut=\"a\"\n        clearModals={clearModals}\n      >\n        <div className=\"mb-2\">\n          Push and pull blocks to distort an image. Select a section of the\n          image then click and drag it to pull it towards you.\n        </div>\n        A{\" \"}\n        <a href=\"https://constraint.systems\" target=\"_blank\" rel=\"noreferrer\">\n          Constraint Systems\n        </a>{\" \"}\n        project\n      </Dialog>\n      <Dialog\n        title=\"Colors\"\n        display={showColors}\n        setDisplay={setShowColors}\n        shortcut=\"c\"\n        clearModals={clearModals}\n      >\n        <div className=\"flex items-center justify-between mb-3 pb-3 border-b\">\n          <div>Transparent background on save</div>\n          <input\n            type=\"checkbox\"\n            checked={isTransparent}\n            onChange={(e) => {\n              setIsTransparent(e.target.checked);\n            }}\n          ></input>\n        </div>\n        <div className=\"flex items-center justify-between mb-3 pb-3 border-b\">\n          <div>Background color</div>\n          <input\n            style={{ display: \"block\" }}\n            type=\"color\"\n            value={color}\n            onChange={(e) => {\n              setColor(e.target.value);\n            }}\n          ></input>\n        </div>\n        <div className=\"flex items-center justify-between mb-3 pb-3 border-b\">\n          <div>Selection color</div>\n          <input\n            type=\"color\"\n            value={highlightColor}\n            onChange={(e) => {\n              setHighlightColor(e.target.value);\n            }}\n          ></input>\n        </div>\n        <div className=\"flex items-center justify-between mb-3 pb-3 border-b\">\n          <div>Selection color opacity</div>\n          <div className=\"flex items-center\">\n            <input\n              className=\"mr-2\"\n              type=\"range\"\n              value={highlightAlpha}\n              min={0.1}\n              step={0.1}\n              max={1}\n              onChange={(e) => {\n                setHighlightAlpha(parseFloat(e.target.value));\n              }}\n            ></input>{\" \"}\n            {highlightAlpha.toFixed(1)}\n          </div>\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <div>View window color</div>\n          <input\n            style={{ display: \"block\" }}\n            type=\"color\"\n            value={viewColor}\n            onChange={(e) => {\n              setViewColor(e.target.value);\n            }}\n          ></input>\n        </div>\n      </Dialog>\n      <Dialog\n        title=\"View\"\n        display={showView}\n        setDisplay={setShowView}\n        shortcut=\"v\"\n        clearModals={clearModals}\n      >\n        <div className=\"flex items-center justify-between mb-2 text-sm\">\n          View determines what part of the image is saved when you print. Use\n          window mode to select only a section.\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <div>Mode</div>\n          <div className=\"flex items-center\">\n            <label\n              className=\"mr-5\"\n              onPointerDown={(e) => {\n                e.stopPropagation();\n              }}\n              onClick={() => {\n                setViewKind(\"fullscreen\");\n              }}\n            >\n              <input\n                type=\"radio\"\n                value=\"Male\"\n                className=\"mr-2\"\n                checked={viewKind === \"fullscreen\"}\n                onPointerDown={(e) => {\n                  e.stopPropagation();\n                }}\n                onChange={() => {\n                  setViewKind(\"fullscreen\");\n                }}\n              />\n              fullscreen\n            </label>\n            <label\n              onPointerDown={(e) => {\n                e.stopPropagation();\n              }}\n              onClick={() => {\n                setViewKind(\"window\");\n              }}\n            >\n              <input\n                type=\"radio\"\n                className=\"mr-2\"\n                value=\"Female\"\n                checked={viewKind === \"window\"}\n                onChange={() => {\n                  setViewKind(\"window\");\n                }}\n              />\n              window\n            </label>\n          </div>\n        </div>\n      </Dialog>\n      <Dialog\n        title=\"Controls\"\n        display={showControls}\n        setDisplay={setShowControls}\n        shortcut=\"t\"\n        clearModals={clearModals}\n      >\n        <div className=\"flex items-center justify-between mb-4\">\n          Click and drag to select an area. Click and drag a selected area to\n          push and pull it.\n        </div>\n        <div className=\"flex items-center justify-between mb-2\">\n          <strong>Touch</strong>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>One-finger</div>\n          <div>Select, push and pull</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>Two-finger</div>\n          <div>Rotate, zoom</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-5\">\n          <div>Three-finger</div>\n          <div>Pan</div>\n        </div>\n        <div className=\"flex items-center justify-between mb-2\">\n          <strong>Keyboard and mouse</strong>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>Click and drag</div>\n          <div>Select, push and pull</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>Scroll</div>\n          <div>Zoom</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>Control + click and drag</div>\n          <div>Paint select</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>Shift + click and drag</div>\n          <div>Add to selection</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>r + move</div>\n          <div>Rotate</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>d + move</div>\n          <div>Pan</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>Arrows</div>\n          <div>Pan</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>+ and -</div>\n          <div>Zoom</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>Space</div>\n          <div>Mouse click</div>\n        </div>\n      </Dialog>\n    </>\n  );\n}\n","export function domLoadImage(callback) {\n  let input = document.querySelector(\"#fileInput\");\n  async function handleChange() {\n    for (let item of this.files) {\n      if (item.type.indexOf(\"image\") < 0) {\n        continue;\n      }\n      let src = URL.createObjectURL(item);\n      callback(src);\n      this.removeEventListener(\"change\", handleChange);\n    }\n  }\n  input.addEventListener(\"change\", handleChange);\n\n  input.dispatchEvent(\n    new MouseEvent(\"click\", {\n      bubbles: true,\n      cancelable: true,\n      view: window,\n    })\n  );\n  return input;\n}\n","import { useEffect, useRef, useState } from \"react\";\nimport State from \"./State\";\nimport PointerComponent from \"./PointerComponent\";\nimport KeyboardComponent from \"./Keyboard\";\nimport { Bars } from \"./TopBar\";\n\nexport type Mode = \"normal\" | \"view\";\n\nfunction App() {\n  const canvasRef = useRef(null!);\n  const [state, setState] = useState<null | State>(null);\n  const [mode, setMode] = useState<Mode>(\"normal\");\n\n  useEffect(() => {\n    if (state !== null) {\n      state.changeMode(mode);\n    }\n  }, [mode, state]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current!;\n    const newState = new State(canvas);\n    setState(newState);\n\n    const handleResize = () => {\n      const xChange = window.innerWidth - newState.renderer.domElement.width;\n      const yChange = window.innerHeight - newState.renderer.domElement.height;\n\n      newState.view.mouse1.copy(newState.view.min);\n      newState.view.mouse2.copy(newState.view.max);\n\n      newState.view.mouse1.x += xChange / 2;\n      newState.view.mouse1.y += yChange / 2;\n      newState.view.mouse2.x += xChange / 2;\n      newState.view.mouse2.y += yChange / 2;\n\n      const percent =\n        window.innerHeight / 2 / (newState.renderer.domElement.height / 2);\n\n      const minToCenterX = newState.view.mouse1.x - window.innerWidth / 2;\n      newState.view.mouse1.x = minToCenterX * percent + window.innerWidth / 2;\n      const maxToCenterX = newState.view.mouse2.x - window.innerWidth / 2;\n      newState.view.mouse2.x = maxToCenterX * percent + window.innerWidth / 2;\n\n      const minToCenterY = newState.view.mouse1.y - window.innerHeight / 2;\n      newState.view.mouse1.y = minToCenterY * percent + window.innerHeight / 2;\n      const maxToCenterY = newState.view.mouse2.y - window.innerHeight / 2;\n      newState.view.mouse2.y = maxToCenterY * percent + window.innerHeight / 2;\n\n      newState.view.update();\n\n      newState.renderer.setSize(window.innerWidth, window.innerHeight);\n      newState.camera.aspect = window.innerWidth / window.innerHeight;\n      newState.camera.updateProjectionMatrix();\n    };\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (state) {\n      const onPaste = (e: any) => {\n        e.preventDefault();\n        e.stopPropagation();\n        for (const item of e.clipboardData.items) {\n          if (item.type.indexOf(\"image\") < 0) {\n            continue;\n          }\n          let file = item.getAsFile();\n          let src = URL.createObjectURL(file);\n          state.loadImage(src);\n        }\n      };\n\n      const onDrop = (e: any) => {\n        e.preventDefault();\n        e.stopPropagation();\n        let file = e.dataTransfer.files[0];\n        let src = URL.createObjectURL(file);\n        state.loadImage(src);\n      };\n\n      const onDrag = (e: any) => {\n        e.stopPropagation();\n        e.preventDefault();\n        e.dataTransfer.dropEffect = \"copy\";\n      };\n\n      window.addEventListener(\"paste\", onPaste);\n      window.addEventListener(\"dragover\", onDrag);\n      window.addEventListener(\"drop\", onDrop);\n      return () => {\n        window.removeEventListener(\"paste\", onPaste);\n        window.removeEventListener(\"dragover\", onDrag);\n        window.removeEventListener(\"drop\", onDrop);\n      };\n    }\n  }, [state]);\n\n  return (\n    <>\n      <input id=\"fileInput\" type=\"file\" style={{ display: \"none\" }}></input>\n      <canvas ref={canvasRef}></canvas>\n      {state ? (\n        <>\n          <PointerComponent state={state} />\n          <KeyboardComponent state={state} />\n          <Bars state={state} setMode={setMode} />\n        </>\n      ) : null}\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}