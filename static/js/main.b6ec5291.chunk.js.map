{"version":3,"sources":["Pointer.tsx","Actions.tsx","SelectBox.tsx","SelectionBox.js","PointerOne.tsx","PointerThree.tsx","PointerTwo.tsx","PointerMiddle.tsx","PointerComponent.tsx","PointerHover.tsx","Box.tsx","OutlineBox.tsx","FullscreenQuad.tsx","View.tsx","State.tsx","Keyboard.tsx","Bars.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Pointer","state","active","subPointers","initial","current","diff","logEl","markEl","this","THREE","set","el","log","innerText","JSON","stringify","Math","round","x","y","updateMark","style","display","left","top","checkRayIntersect","pointer","visBuffer","group","geometry","attributes","visible","array","raycaster","setFromCamera","clip2","camera","intersected","intersectObject","index","instanceId","getStackGridIndexFromInstanceIndex","allCols","floor","depth","row","cols","col","clearSelected","selectedGrid","fill","renderSelected","selectedBuffer","outlineBoxes","selected","i","length","val","needsUpdate","selectAndRenderCells","selectGridIndex","toggleSelectAndRenderCells","gridIndex","controlIndexCache","panCameraStart","initialCameraPosition","copy","position","panCamera","zoomPixel","tan","fov","PI","z","window","innerHeight","discretePanCamera","rotateStart","initialRotation","rotation","rotate","rotateY","min","max","worldPixel","rotateX","boundZoom","near","far","discreteZoom","change","percent","print","m","printMultiplier","pw","innerWidth","ph","printTarget","setSize","setClearColor","backgroundColor","backgroundAlpha","render","scene","c","document","createElement","width","view","height","getContext","drawImage","domElement","link","toBlob","blob","setAttribute","Date","getTime","URL","createObjectURL","dispatchEvent","MouseEvent","bubbles","cancelable","domLoadImage","callback","input","querySelector","handleChange","a","files","item","type","indexOf","src","removeEventListener","addEventListener","SelectBox","mouse1","mouse2","div","Three","color","highlightColor","rgb","getStyle","rgba","slice","highlightAlpha","background","border","body","appendChild","sub","remove","_frustum","_center","_tmpPoint","_vecNear","_vecTopLeft","_vecTopRight","_vecDownRight","_vecDownLeft","_vecFarTopLeft","_vecFarTopRight","_vecFarDownRight","_vecFarDownLeft","_vectemp1","_vectemp2","_vectemp3","_matrix","_quaternion","_scale","SelectionBox","deep","Number","MAX_VALUE","startPoint","endPoint","collection","instances","updateFrustum","searchChildInFrustum","EPSILON","updateProjectionMatrix","updateMatrixWorld","isPerspectiveCamera","setFromMatrixPosition","matrixWorld","unproject","normalize","multiplyScalar","add","planes","setFromCoplanarPoints","normal","isOrthographicCamera","right","down","console","error","frustum","object","isMesh","isLine","isPoints","isInstancedMesh","uuid","count","getMatrixAt","decompose","applyMatrix4","containsPoint","push","boundingSphere","computeBoundingSphere","center","children","PointerOne","clip","tempClip","ray","areaSelecting","pushPulling","selectIndexCache","startTime","selectBox","selectionBox","distance","p1","now","pressed","includes","update","setRay","intersectIndex","gridCache","stackIndex","checkSelected","heightGridCache","heightGrid","visibleBuffer","d","updateDepth","pushPullSelected","abs","deSelectGridIndex","destroy","select","indexes","maxDepth","possibilities","possibility","areaSelectEnd","PointerThree","p2","p3","divideScalar","PointerTwo","initialBetween","between","initialRadius","sqrt","radius","continuousZoom","PointerMiddle","e","clientX","clientY","SubPointer","id","pointerId","pointers","start","cancel","end","move","getPointerIndexById","splice","PointerComponent","useEffect","canvas","handlePointerMove","lastPointerButtonPressed","getPointerById","PointerHover","handlePointerDown","button","setPointerCapture","handlePointerUp","releasePointerCapture","handleMousewheel","deltaY","passive","map","spacePointer","Box","cellSize","rows","texture","uv","getAttribute","setXY","texScale","offsets","r","Float32Array","uniforms","texture1","value","material","vertexShader","fragmentShader","matrix","setPosition","setMatrixAt","OutlineBox","Array","highlightScene","FullscreenQuad","renderTarget","transparent","opacity","cube","View","holder","topLeft","botRight","kind","activeHandle","mouseOrigin","mouseDiff","minOrigin","maxOrigin","dragging","viewColor","pointerEvents","stopPropagation","bottom","overflow","positions","percents","toString","transform","padding","inner","zIndex","from","childNodes","borderColor","showHandles","hideHandles","State","renderer","boxes","keyInterupts","hoverKeyInterrupts","currentImageDims","pressedOne","viewScene","printCanvas","fullscreenQuad","mode","isTouch","logarithmicDepthBuffer","antialias","autoClear","setPixelRatio","devicePixelRatio","alpha","matchMedia","matches","visibleHeight","loadImage","animate","loader","setCrossOrigin","load","limit","img","image","aspect","ray1","ray2","changeMode","target","clear","setRenderTarget","requestAnimationFrame","bind","newMode","Keyboard","downHandler","press","key","toLowerCase","interruptPointerKeyDown","upHandler","interruptPointerKeyUp","Button","clickHandler","shade","textColor","role","className","minWidth","onClick","HandleShortcut","action","shortcut","Dialog","title","setDisplay","clearModals","useState","offsetX","setOffSetX","offsetY","setOffSetY","pointerDown","useRef","pointerOrigin","offsetOrigin","maxHeight","maxWidth","onPointerDown","onPointerMove","onPointerUp","Bars","setMode","isFocus","setIsFocus","setTextColor","showAbout","setShowAbout","showColors","setShowColors","setColor","isTransparent","setIsTransparent","is2x","setIs2x","setHighlightColor","setHighlightAlpha","showView","setShowView","showControls","setShowControls","setViewColor","colorRef","viewKind","setViewKind","parseInt","replace","threeColor","g","b","updateColor","getHex","href","rel","checked","onChange","step","parseFloat","toFixed","App","canvasRef","setState","newState","handleResize","xChange","yChange","minToCenterX","maxToCenterX","minToCenterY","maxToCenterY","onPaste","preventDefault","clipboardData","items","file","getAsFile","onDrop","dataTransfer","onDrag","dropEffect","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b6ec5291.chunk.js","sourcesContent":["import * as THREE from \"three\";\nimport { SubPointer } from \"./PointerComponent\";\nimport State from \"./State\";\n\nclass Pointer {\n  active: boolean;\n  subPointers: null | Array<SubPointer>;\n  initial: THREE.Vector2;\n  current: THREE.Vector2;\n  diff: THREE.Vector2;\n  logEl: null | HTMLElement;\n  markEl: null | HTMLElement;\n  state: State;\n\n  constructor(state: State) {\n    this.active = false;\n    this.subPointers = null;\n    this.initial = new THREE.Vector2();\n    this.current = new THREE.Vector2();\n    this.diff = new THREE.Vector2();\n    this.logEl = null;\n    this.markEl = null;\n    this.state = state;\n  }\n\n  start(subPointers: Array<SubPointer>) {\n    this.active = true;\n  }\n\n  end() {\n    this.active = false;\n    this.current.set(0, 0);\n    this.diff.set(0, 0);\n  }\n\n  setLogEl(el: HTMLElement) {\n    this.logEl = el;\n    this.log();\n  }\n\n  log() {\n    if (this.logEl !== null) {\n      this.logEl.innerText =\n        \" \" +\n        JSON.stringify(this.active) +\n        \" diff \" +\n        Math.round(this.diff.x) +\n        \",\" +\n        Math.round(this.diff.y);\n    }\n  }\n\n  setMarkEl(el: HTMLElement) {\n    this.markEl = el;\n    this.updateMark();\n  }\n\n  extras() {\n    this.log();\n    this.updateMark();\n  }\n\n  updateMark() {\n    if (this.markEl !== null) {\n      if (this.active) {\n        this.markEl.style.display = \"block\";\n      } else {\n        this.markEl.style.display = \"none\";\n      }\n      this.markEl.style.left = this.current.x + \"px\";\n      this.markEl.style.top = this.current.y + \"px\";\n    }\n  }\n}\n\nexport default Pointer;\n","// import * as THREE from \"three\";\nimport PointerOne from \"./PointerOne\";\nimport Pointer from \"./Pointer\";\nimport State from \"./State\";\nimport PointerTwo from \"./PointerTwo\";\nimport { SelectionBox } from \"./SelectionBox\";\n\nexport const checkRayIntersect = (pointer: PointerOne) => {\n  // @ts-ignore\n  const visBuffer = pointer.state.group.geometry.attributes.visible.array;\n  pointer.raycaster.setFromCamera(pointer.clip2, pointer.state.camera);\n  const intersected = pointer.raycaster.intersectObject(pointer.state.group);\n  for (const intersect of intersected) {\n    const index = intersect.instanceId!;\n    if (visBuffer[index]) {\n      return index;\n    }\n  }\n  return null;\n};\n\nexport const getStackGridIndexFromInstanceIndex = (\n  state: State,\n  index: number\n) => {\n  const allCols = Math.floor(index / state.depth);\n  const row = Math.floor(allCols / state.cols);\n  const col = allCols % state.cols;\n  return row * state.cols + col;\n};\n\nexport const selectGridIndex = (state: State, index: number) => {\n  state.selectedGrid[index] = 1;\n};\n\nexport const deSelectGridIndex = (state: State, index: number) => {\n  state.selectedGrid[index] = 0;\n};\n\nexport const clearSelected = (state: State) => {\n  state.selectedGrid.fill(0);\n};\n\nexport const renderSelected = (state: State) => {\n  // @ts-ignore\n  const selectedBuffer = state.outlineBoxes.geometry.attributes.selected.array;\n\n  for (let i = 0; i < state.selectedGrid.length; i++) {\n    const val = state.selectedGrid[i];\n    selectedBuffer[i] = val;\n  }\n  // @ts-ignore\n  state.outlineBoxes.geometry.attributes.selected.needsUpdate = true;\n};\n\nexport const selectAndRenderCells = (state: State, index: number) => {\n  const gridIndex = getStackGridIndexFromInstanceIndex(state, index);\n  selectGridIndex(state, gridIndex);\n  renderSelected(state);\n};\n\nexport const deSelectAndRenderCells = (state: State, index: number) => {\n  const gridIndex = getStackGridIndexFromInstanceIndex(state, index);\n  deSelectGridIndex(state, gridIndex);\n  renderSelected(state);\n};\n\nexport const toggleSelectAndRenderCells = (\n  state: State,\n  pointer: PointerOne,\n  index: number\n) => {\n  const gridIndex = getStackGridIndexFromInstanceIndex(state, index);\n  if (pointer.controlIndexCache !== gridIndex) {\n    state.selectedGrid[gridIndex] = state.selectedGrid[gridIndex] === 0 ? 1 : 0;\n    renderSelected(state);\n    pointer.controlIndexCache = gridIndex;\n  }\n};\n\nexport const panCameraStart = (state: State) => {\n  state.initialCameraPosition.copy(state.camera.position);\n};\n\nexport const panCamera = (state: State, pointer: Pointer) => {\n  const visibleHeight =\n    2 * Math.tan((state.camera.fov * Math.PI) / 360) * state.camera.position.z;\n  const zoomPixel = visibleHeight / window.innerHeight;\n  state.camera.position.x =\n    state.initialCameraPosition.x - pointer.diff.x * zoomPixel;\n  state.camera.position.y =\n    state.initialCameraPosition.y + pointer.diff.y * zoomPixel;\n};\n\nexport const discretePanCamera = (state: State, diff: Array<number>) => {\n  const visibleHeight =\n    2 * Math.tan((state.camera.fov * Math.PI) / 360) * state.camera.position.z;\n  const zoomPixel = visibleHeight / window.innerHeight;\n  state.camera.position.x -= 16 * diff[0] * zoomPixel;\n  state.camera.position.y += 16 * diff[1] * zoomPixel;\n};\n\nexport const interruptPointerKeyDown = (state: State, press: string) => {\n  // pointerOne interrupts\n  if (state.keyInterupts.includes(press)) {\n    if (state.PointerOne.active) {\n      state.PointerOne.end();\n      state.PointerOne.start(state.PointerOne.subPointers!);\n    }\n  }\n  if (state.hoverKeyInterrupts.includes(press)) {\n    if (state.PointerHover.active) {\n      state.PointerHover.start(\n        state.PointerHover.current.x,\n        state.PointerHover.current.y\n      );\n    }\n  }\n};\n\nexport const interruptPointerKeyUp = (state: State, press: string) => {\n  if (state.keyInterupts.includes(press)) {\n    if (state.PointerOne.active) {\n      const index = state.pressed.indexOf(press);\n      if (index !== -1) {\n        state.pressed.splice(index, 1);\n      }\n      state.PointerOne.end();\n      state.PointerOne.start(state.PointerOne.subPointers!);\n    }\n  }\n  if (state.hoverKeyInterrupts.includes(press)) {\n    if (state.PointerHover.active) {\n      state.PointerHover.start(\n        state.PointerHover.current.x,\n        state.PointerHover.current.y\n      );\n    }\n  }\n};\n\nexport const rotateStart = (state: State) => {\n  state.initialRotation.copy(state.group.rotation);\n};\n\nexport const rotate = (state: State, pointer: Pointer) => {\n  const rotateY = Math.min(\n    Math.PI / 2,\n    Math.max(\n      -Math.PI / 2,\n      state.initialRotation.y + pointer.diff.x * state.worldPixel\n    )\n  );\n  const rotateX = Math.min(\n    Math.PI / 2,\n    Math.max(\n      -Math.PI / 2,\n      state.initialRotation.x + pointer.diff.y * state.worldPixel\n    )\n  );\n  state.group.rotation.x = rotateX;\n  state.outlineBoxes.rotation.x = rotateX;\n  state.group.rotation.y = rotateY;\n  state.outlineBoxes.rotation.y = rotateY;\n};\n\nexport const boundZoom = (state: State, val: number) => {\n  const min = state.camera.near + 0.1;\n  const max = state.camera.far - 0.1;\n  return Math.min(max, Math.max(min, val));\n};\n\nexport const continuousZoomStart = (state: State) => {\n  state.initialCameraPosition.copy(state.camera.position);\n};\n\nexport const continuousZoom = (state: State, pointer: PointerTwo) => {\n  const initialRadius = Math.sqrt(\n    pointer.initialBetween.x * pointer.initialBetween.x +\n      pointer.initialBetween.y * pointer.initialBetween.y\n  );\n  const radius = Math.sqrt(\n    pointer.between.x * pointer.between.x +\n      pointer.between.y * pointer.between.y\n  );\n  const percent =\n    (window.innerHeight + (radius - initialRadius) * 2) / window.innerHeight;\n  state.camera.position.z = boundZoom(\n    state,\n    state.initialCameraPosition.z / percent\n  );\n};\n\nexport const discreteZoom = (state: State, change: number) => {\n  const percent = (window.innerHeight - change) / window.innerHeight;\n  state.camera.position.z = boundZoom(state, state.camera.position.z / percent);\n};\n\nexport const checkSelected = (state: State, index: number) => {\n  const stackIndex = getStackGridIndexFromInstanceIndex(state, index);\n  return state.selectedGrid[stackIndex];\n};\n\nexport const areaSelectEnd = (\n  state: State,\n  pointer: PointerOne,\n  selectionBox: SelectionBox\n) => {\n  selectionBox.endPoint.copy(pointer.clip);\n  selectionBox.select();\n  // @ts-ignore\n  const visBuffer = pointer.state.group.geometry.attributes.visible.array;\n  // @ts-ignore\n  const indexes = selectionBox.instances[state.group.uuid];\n\n  let maxDepth = 0;\n  let possibilities = [];\n  for (const index of indexes) {\n    // @ts-ignore\n    if (visBuffer[index]) {\n      // @ts-ignore\n      const allCols = Math.floor(index / state.depth);\n      const row = Math.floor(allCols / state.cols);\n      const col = allCols % state.cols;\n      let depth;\n      if (index < state.depth) {\n        depth = index;\n      } else {\n        depth = index % (row * state.cols * state.depth + col * state.depth);\n      }\n      if (depth === state.heightGrid[row * state.cols + col] - 1) {\n        maxDepth = Math.max(maxDepth, depth);\n        // depth, grid index\n        possibilities.push([depth, row * state.cols + col]);\n      }\n    }\n  }\n  for (const possibility of possibilities) {\n    if (possibility[0] === maxDepth) {\n      state.selectedGrid[possibility[1]] = 1;\n    }\n  }\n  renderSelected(state);\n};\n\nexport const pushPullSelected = (state: State, pointer: Pointer) => {\n  const visibleBuffer =\n    // @ts-ignore\n    state.group.geometry.attributes.visible.array;\n  for (let i = 0; i < state.selectedGrid.length; i++) {\n    const isSelected = state.selectedGrid[i];\n    if (isSelected) {\n      state.heightGrid[i] = Math.max(\n        1,\n        Math.min(\n          state.depth,\n          state.heightGridCache[i] + Math.round(pointer.diff.y / 8)\n        )\n      );\n      const height = state.heightGrid[i];\n      const row = Math.floor(i / state.cols);\n      const col = i % state.cols;\n      for (let d = 0; d < state.depth; d++) {\n        visibleBuffer[row * state.cols * state.depth + col * state.depth + d] =\n          d < height ? 1 : 0;\n      }\n    }\n  }\n  // @ts-ignore\n  state.group.geometry.attributes.visible.needsUpdate = true;\n  // @ts-ignore\n  state.outlineBoxes.updateDepth();\n};\n\nexport const print = (state: State) => {\n  const m = state.printMultiplier;\n  // const pw = window.innerWidth / ratio;\n  const pw = window.innerWidth;\n  // const ph = window.innerHeight / ratio;\n  const ph = window.innerHeight;\n  state.printTarget.setSize(pw * m, ph * m);\n  state.printTarget.setClearColor(state.backgroundColor, state.backgroundAlpha);\n  state.printTarget.render(state.scene, state.camera);\n\n  const c = document.createElement(\"canvas\");\n  c.width = state.view.diff.x * m;\n  c.height = state.view.diff.y * m;\n  const ctx = c.getContext(\"2d\")!;\n  ctx.drawImage(\n    state.printTarget.domElement,\n    state.view.min.x * m,\n    state.view.min.y * m,\n    state.view.diff.x * m,\n    state.view.diff.y * m,\n    0,\n    0,\n    state.view.diff.x * m,\n    state.view.diff.y * m\n  );\n\n  let link = document.createElement(\"a\");\n  c.toBlob(function (blob) {\n    link.setAttribute(\n      \"download\",\n      \"push-\" + Math.round(new Date().getTime() / 1000) + \".png\"\n    );\n    link.setAttribute(\"href\", URL.createObjectURL(blob));\n    link.dispatchEvent(\n      new MouseEvent(`click`, {\n        bubbles: true,\n        cancelable: true,\n        view: window,\n      })\n    );\n  });\n};\n\nexport function domLoadImage(callback: any) {\n  let input = document.querySelector(\"#fileInput\");\n  async function handleChange(this: any) {\n    for (let item of this.files) {\n      if (item.type.indexOf(\"image\") < 0) {\n        continue;\n      }\n      let src = URL.createObjectURL(item);\n      callback(src);\n      this.removeEventListener(\"change\", handleChange);\n    }\n  }\n  input!.addEventListener(\"change\", handleChange);\n\n  input!.dispatchEvent(\n    new MouseEvent(\"click\", {\n      bubbles: true,\n      cancelable: true,\n      view: window,\n    })\n  );\n  return input;\n}\n","import * as Three from \"three\";\nimport State from \"./State\";\n\nexport class SelectBox {\n  mouse1: Three.Vector2;\n  mouse2: Three.Vector2;\n  min: Three.Vector2;\n  max: Three.Vector2;\n  diff: Three.Vector2;\n  div: HTMLElement;\n\n  constructor(state: State, initial: Three.Vector2, current: Three.Vector2) {\n    this.mouse1 = new Three.Vector2();\n    this.mouse2 = new Three.Vector2();\n    this.min = new Three.Vector2();\n    this.max = new Three.Vector2();\n    this.diff = new Three.Vector2();\n    this.mouse1.copy(initial);\n    this.mouse2.copy(current);\n\n    const color = new Three.Color(state.highlightColor);\n    const div = document.createElement(\"div\");\n    this.div = div;\n    const rgb = color.getStyle();\n    const rgba =\n      rgb.slice(0, rgb.length - 1) + \",\" + state.highlightAlpha + \")\";\n    div.style.background = rgba;\n    div.style.border = \"solid 1px \" + rgb;\n    div.style.position = \"fixed\";\n    div.style.top = \"0\";\n    div.style.left = \"0\";\n    document.body.appendChild(div);\n  }\n\n  update(current: Three.Vector2) {\n    this.mouse2.copy(current);\n    this.min.copy(this.mouse2).min(this.mouse1);\n    this.max.copy(this.mouse2).max(this.mouse1);\n    this.diff.copy(this.max).sub(this.min);\n    this.render();\n  }\n\n  render() {\n    this.div.style.left = this.min.x + \"px\";\n    this.div.style.top = this.min.y + \"px\";\n    this.div.style.width = this.diff.x + \"px\";\n    this.div.style.height = this.diff.y + \"px\";\n  }\n\n  destroy() {\n    this.div.remove();\n  }\n}\n","import * as THREE from \"three\";\n\nconst _frustum = new THREE.Frustum();\n\nconst _center = new THREE.Vector3();\n\nconst _tmpPoint = new THREE.Vector3();\n\nconst _vecNear = new THREE.Vector3();\n\nconst _vecTopLeft = new THREE.Vector3();\n\nconst _vecTopRight = new THREE.Vector3();\n\nconst _vecDownRight = new THREE.Vector3();\n\nconst _vecDownLeft = new THREE.Vector3();\n\nconst _vecFarTopLeft = new THREE.Vector3();\n\nconst _vecFarTopRight = new THREE.Vector3();\n\nconst _vecFarDownRight = new THREE.Vector3();\n\nconst _vecFarDownLeft = new THREE.Vector3();\n\nconst _vectemp1 = new THREE.Vector3();\n\nconst _vectemp2 = new THREE.Vector3();\n\nconst _vectemp3 = new THREE.Vector3();\n\nconst _matrix = new THREE.Matrix4();\n\nconst _quaternion = new THREE.Quaternion();\n\nconst _scale = new THREE.Vector3();\n\nexport class SelectionBox {\n  constructor(camera, scene, deep = Number.MAX_VALUE) {\n    this.camera = camera;\n    this.scene = scene;\n    this.startPoint = new THREE.Vector3();\n    this.endPoint = new THREE.Vector3();\n    this.collection = [];\n    this.instances = {};\n    this.deep = deep;\n  }\n\n  select(startPoint, endPoint) {\n    this.startPoint = startPoint || this.startPoint;\n    this.endPoint = endPoint || this.endPoint;\n    this.collection = [];\n    this.updateFrustum(this.startPoint, this.endPoint);\n    this.searchChildInFrustum(_frustum, this.scene);\n    return this.collection;\n  }\n\n  updateFrustum(startPoint, endPoint) {\n    startPoint = startPoint || this.startPoint;\n    endPoint = endPoint || this.endPoint; // Avoid invalid frustum\n\n    if (startPoint.x === endPoint.x) {\n      endPoint.x += Number.EPSILON;\n    }\n\n    if (startPoint.y === endPoint.y) {\n      endPoint.y += Number.EPSILON;\n    }\n\n    this.camera.updateProjectionMatrix();\n    this.camera.updateMatrixWorld();\n\n    if (this.camera.isPerspectiveCamera) {\n      _tmpPoint.copy(startPoint);\n\n      _tmpPoint.x = Math.min(startPoint.x, endPoint.x);\n      _tmpPoint.y = Math.max(startPoint.y, endPoint.y);\n      endPoint.x = Math.max(startPoint.x, endPoint.x);\n      endPoint.y = Math.min(startPoint.y, endPoint.y);\n\n      _vecNear.setFromMatrixPosition(this.camera.matrixWorld);\n\n      _vecTopLeft.copy(_tmpPoint);\n\n      _vecTopRight.set(endPoint.x, _tmpPoint.y, 0);\n\n      _vecDownRight.copy(endPoint);\n\n      _vecDownLeft.set(_tmpPoint.x, endPoint.y, 0);\n\n      _vecTopLeft.unproject(this.camera);\n\n      _vecTopRight.unproject(this.camera);\n\n      _vecDownRight.unproject(this.camera);\n\n      _vecDownLeft.unproject(this.camera);\n\n      _vectemp1.copy(_vecTopLeft).sub(_vecNear);\n\n      _vectemp2.copy(_vecTopRight).sub(_vecNear);\n\n      _vectemp3.copy(_vecDownRight).sub(_vecNear);\n\n      _vectemp1.normalize();\n\n      _vectemp2.normalize();\n\n      _vectemp3.normalize();\n\n      _vectemp1.multiplyScalar(this.deep);\n\n      _vectemp2.multiplyScalar(this.deep);\n\n      _vectemp3.multiplyScalar(this.deep);\n\n      _vectemp1.add(_vecNear);\n\n      _vectemp2.add(_vecNear);\n\n      _vectemp3.add(_vecNear);\n\n      const planes = _frustum.planes;\n      planes[0].setFromCoplanarPoints(_vecNear, _vecTopLeft, _vecTopRight);\n      planes[1].setFromCoplanarPoints(_vecNear, _vecTopRight, _vecDownRight);\n      planes[2].setFromCoplanarPoints(_vecDownRight, _vecDownLeft, _vecNear);\n      planes[3].setFromCoplanarPoints(_vecDownLeft, _vecTopLeft, _vecNear);\n      planes[4].setFromCoplanarPoints(\n        _vecTopRight,\n        _vecDownRight,\n        _vecDownLeft\n      );\n      planes[5].setFromCoplanarPoints(_vectemp3, _vectemp2, _vectemp1);\n      planes[5].normal.multiplyScalar(-1);\n    } else if (this.camera.isOrthographicCamera) {\n      const left = Math.min(startPoint.x, endPoint.x);\n      const top = Math.max(startPoint.y, endPoint.y);\n      const right = Math.max(startPoint.x, endPoint.x);\n      const down = Math.min(startPoint.y, endPoint.y);\n\n      _vecTopLeft.set(left, top, -1);\n\n      _vecTopRight.set(right, top, -1);\n\n      _vecDownRight.set(right, down, -1);\n\n      _vecDownLeft.set(left, down, -1);\n\n      _vecFarTopLeft.set(left, top, 1);\n\n      _vecFarTopRight.set(right, top, 1);\n\n      _vecFarDownRight.set(right, down, 1);\n\n      _vecFarDownLeft.set(left, down, 1);\n\n      _vecTopLeft.unproject(this.camera);\n\n      _vecTopRight.unproject(this.camera);\n\n      _vecDownRight.unproject(this.camera);\n\n      _vecDownLeft.unproject(this.camera);\n\n      _vecFarTopLeft.unproject(this.camera);\n\n      _vecFarTopRight.unproject(this.camera);\n\n      _vecFarDownRight.unproject(this.camera);\n\n      _vecFarDownLeft.unproject(this.camera);\n\n      const planes = _frustum.planes;\n      planes[0].setFromCoplanarPoints(\n        _vecTopLeft,\n        _vecFarTopLeft,\n        _vecFarTopRight\n      );\n      planes[1].setFromCoplanarPoints(\n        _vecTopRight,\n        _vecFarTopRight,\n        _vecFarDownRight\n      );\n      planes[2].setFromCoplanarPoints(\n        _vecFarDownRight,\n        _vecFarDownLeft,\n        _vecDownLeft\n      );\n      planes[3].setFromCoplanarPoints(\n        _vecFarDownLeft,\n        _vecFarTopLeft,\n        _vecTopLeft\n      );\n      planes[4].setFromCoplanarPoints(\n        _vecTopRight,\n        _vecDownRight,\n        _vecDownLeft\n      );\n      planes[5].setFromCoplanarPoints(\n        _vecFarDownRight,\n        _vecFarTopRight,\n        _vecFarTopLeft\n      );\n      planes[5].normal.multiplyScalar(-1);\n    } else {\n      console.error(\"THREE.SelectionBox: Unsupported camera type.\");\n    }\n  }\n\n  searchChildInFrustum(frustum, object) {\n    if (object.isMesh || object.isLine || object.isPoints) {\n      if (object.isInstancedMesh) {\n        this.instances[object.uuid] = [];\n\n        for (let instanceId = 0; instanceId < object.count; instanceId++) {\n          object.getMatrixAt(instanceId, _matrix);\n\n          _matrix.decompose(_center, _quaternion, _scale);\n          // apply parent transforms to instance\n          _center.applyMatrix4(object.matrixWorld);\n\n          if (frustum.containsPoint(_center)) {\n            this.instances[object.uuid].push(instanceId);\n          }\n        }\n      } else {\n        if (object.geometry.boundingSphere === null)\n          object.geometry.computeBoundingSphere();\n\n        _center.copy(object.geometry.boundingSphere.center);\n\n        _center.applyMatrix4(object.matrixWorld);\n\n        if (frustum.containsPoint(_center)) {\n          this.collection.push(object);\n        }\n      }\n    }\n\n    if (object.children.length > 0) {\n      for (let x = 0; x < object.children.length; x++) {\n        this.searchChildInFrustum(frustum, object.children[x]);\n      }\n    }\n  }\n}\n","import { SubPointer } from \"./PointerComponent\";\nimport Pointer from \"./Pointer\";\nimport {\n  areaSelectEnd,\n  checkRayIntersect,\n  checkSelected,\n  clearSelected,\n  deSelectAndRenderCells,\n  panCamera,\n  panCameraStart,\n  pushPullSelected,\n  renderSelected,\n  rotate,\n  rotateStart,\n  selectAndRenderCells,\n  toggleSelectAndRenderCells,\n} from \"./Actions\";\nimport { SelectBox } from \"./SelectBox\";\nimport { SelectionBox } from \"./SelectionBox\";\nimport State from \"./State\";\nimport * as THREE from \"three\";\n\nconst areaSelectThreshold = 4;\n\nclass PointerOne extends Pointer {\n  raycaster: THREE.Raycaster;\n  clip: THREE.Vector3;\n  clip2: THREE.Vector2;\n  tempClip: THREE.Vector3;\n  ray: THREE.Vector3;\n  areaSelecting: boolean;\n  pushPulling: boolean;\n  selectIndexCache: null | number;\n  startTime: number;\n  selectBox: null | SelectBox;\n  selectionBox: any;\n  controlIndexCache: null | number;\n\n  constructor(state: State) {\n    super(state);\n    this.clip = new THREE.Vector3();\n    this.clip2 = new THREE.Vector2();\n    this.tempClip = new THREE.Vector3();\n    this.ray = new THREE.Vector3();\n    this.raycaster = new THREE.Raycaster();\n    this.areaSelecting = false;\n    this.pushPulling = false;\n    this.selectBox = null;\n    this.selectIndexCache = null;\n    this.startTime = 0;\n    this.selectionBox = new SelectionBox(this.state.camera, this.state.scene);\n    this.controlIndexCache = null;\n  }\n\n  setRay() {\n    this.clip.set(\n      (this.current.x / window.innerWidth) * 2 - 1,\n      -(this.current.y / window.innerHeight) * 2 + 1,\n      0.5\n    );\n    this.clip2.set(this.clip.x, this.clip.y);\n    this.tempClip.copy(this.clip);\n    this.tempClip.unproject(this.state.camera);\n    this.tempClip.sub(this.state.camera.position).normalize();\n    const distance = (0 - this.state.camera.position.z) / this.tempClip.z;\n    this.ray.copy(this.state.camera.position);\n    this.ray.add(this.tempClip.multiplyScalar(distance));\n  }\n\n  start(subPointers: Array<SubPointer>) {\n    super.start(subPointers);\n    this.subPointers = subPointers;\n    const [p1] = this.subPointers;\n    this.initial.copy(p1.current);\n    this.current.copy(p1.current);\n    this.diff.set(0, 0);\n    this.areaSelecting = false;\n    this.pushPulling = false;\n    this.startTime = Date.now();\n    this.controlIndexCache = null;\n\n    super.extras();\n\n    const pressed = this.state.pressed;\n    if (pressed.includes(\"d\")) {\n      panCameraStart(this.state);\n    } else if (pressed.includes(\"v\")) {\n      this.state.view.mouse1.copy(this.current);\n      this.state.view.mouse2.copy(this.current);\n      this.state.view.update();\n    } else if (pressed.includes(\"r\")) {\n      rotateStart(this.state);\n    } else if (pressed.includes(\"control\")) {\n      this.setRay();\n      const intersectIndex = checkRayIntersect(this);\n      if (intersectIndex !== null) {\n        toggleSelectAndRenderCells(this.state, this, intersectIndex);\n      }\n    } else {\n      this.state.gridCache = this.state.selectedGrid.slice();\n      // default\n      this.setRay();\n      const intersectIndex = checkRayIntersect(this);\n      if (intersectIndex !== null) {\n        const isSelected = checkSelected(this.state, intersectIndex);\n        if (isSelected && !pressed.includes(\"shift\")) {\n          this.state.heightGridCache = this.state.heightGrid.slice();\n          this.pushPulling = true;\n        } else {\n          if (!pressed.includes(\"shift\")) clearSelected(this.state);\n          this.selectIndexCache = intersectIndex;\n          selectAndRenderCells(this.state, intersectIndex);\n        }\n      } else {\n        if (!pressed.includes(\"shift\")) clearSelected(this.state);\n        renderSelected(this.state);\n      }\n    }\n  }\n\n  move() {\n    if (this.active && this.subPointers) {\n      const [p1] = this.subPointers;\n      this.current.copy(p1.current);\n      this.diff.copy(this.current).sub(this.initial);\n\n      const pressed = this.state.pressed;\n      if (pressed.includes(\"d\")) {\n        panCamera(this.state, this);\n      } else if (pressed.includes(\"r\")) {\n        rotate(this.state, this);\n      } else if (pressed.includes(\"v\")) {\n        this.state.view.mouse2.copy(this.current);\n        this.state.view.update();\n      } else if (pressed.includes(\"control\")) {\n        this.setRay();\n        const intersectIndex = checkRayIntersect(this);\n        if (intersectIndex !== null) {\n          toggleSelectAndRenderCells(this.state, this, intersectIndex);\n        }\n      } else if (this.pushPulling) {\n        pushPullSelected(this.state, this);\n      } else {\n        // default\n        if (\n          Math.abs(this.diff.x) > areaSelectThreshold ||\n          Math.abs(this.diff.y) > areaSelectThreshold\n        ) {\n          if (!this.areaSelecting) {\n            // start area select\n            this.setRay();\n            this.areaSelecting = true;\n            this.selectBox = new SelectBox(\n              this.state,\n              this.initial,\n              this.current\n            );\n            this.selectionBox.startPoint.copy(this.clip);\n            deSelectAndRenderCells(this.state, this.selectIndexCache!);\n          } else {\n            // continue area select\n            this.selectBox!.update(this.current);\n            this.selectionBox.endPoint.copy(this.clip);\n          }\n        } else {\n          if (this.areaSelecting) {\n            this.areaSelecting = false;\n            this.selectBox!.destroy();\n            this.selectBox = null;\n            selectAndRenderCells(this.state, this.selectIndexCache!);\n          }\n        }\n      }\n\n      super.extras();\n    }\n  }\n\n  cancel() {\n    this.pushPulling = false;\n    if (this.areaSelecting) {\n      this.areaSelecting = false;\n      this.selectBox!.destroy();\n    }\n    this.active = false;\n  }\n\n  end() {\n    this.pushPulling = false;\n    if (this.areaSelecting) {\n      this.areaSelecting = false;\n      this.selectBox!.destroy();\n      this.setRay();\n      areaSelectEnd(this.state, this, this.selectionBox);\n    }\n    super.end();\n    super.extras();\n  }\n}\n\nexport default PointerOne;\n","import { SubPointer } from \"./PointerComponent\";\nimport Pointer from \"./Pointer\";\nimport { panCamera, panCameraStart } from \"./Actions\";\n\n// no between because it gets complicated\nclass PointerThree extends Pointer {\n  start(subPointers: Array<SubPointer>) {\n    this.active = true;\n    this.subPointers = subPointers;\n    const [p1, p2, p3] = subPointers;\n\n    this.current\n      .copy(p1.current)\n      .add(p2.current)\n      .add(p3.current)\n      .divideScalar(3);\n    this.initial.copy(this.current);\n\n    this.diff.set(0, 0);\n    super.extras();\n\n    panCameraStart(this.state);\n  }\n\n  move() {\n    if (this.subPointers) {\n      const [p1, p2, p3] = this.subPointers;\n      this.current\n        .copy(p1.current)\n        .add(p2.current)\n        .add(p3.current)\n        .divideScalar(3);\n\n      this.diff.copy(this.current).sub(this.initial);\n      super.extras();\n\n      panCamera(this.state, this);\n    }\n  }\n\n  end() {\n    super.end();\n    super.extras();\n  }\n}\n\nexport default PointerThree;\n","import { SubPointer } from \"./PointerComponent\";\nimport * as THREE from \"three\";\nimport Pointer from \"./Pointer\";\nimport State from \"./State\";\nimport {\n  rotate,\n  rotateStart,\n  continuousZoomStart,\n  continuousZoom,\n} from \"./Actions\";\n\nclass PointerTwo extends Pointer {\n  initialBetween: THREE.Vector2;\n  between: THREE.Vector2;\n\n  constructor(state: State) {\n    super(state);\n    this.between = new THREE.Vector2();\n    this.initialBetween = new THREE.Vector2();\n  }\n\n  start(subPointers: Array<SubPointer>) {\n    super.start(subPointers);\n    this.subPointers = subPointers;\n    const [p1, p2] = subPointers;\n\n    this.current.copy(p1.current).add(p2.current).divideScalar(2);\n    this.initial.copy(this.current);\n\n    this.between.copy(p1.current).sub(p2.current);\n    this.initialBetween.copy(this.between);\n\n    this.diff.set(0, 0);\n    super.extras();\n\n    rotateStart(this.state);\n    continuousZoomStart(this.state);\n  }\n\n  move() {\n    if (this.subPointers) {\n      const [p1, p2] = this.subPointers;\n      this.current.copy(p1.current).add(p2.current).divideScalar(2);\n\n      this.between.copy(p1.current).sub(p2.current);\n\n      this.diff.copy(this.current).sub(this.initial);\n      super.extras();\n\n      rotate(this.state, this);\n      continuousZoom(this.state, this);\n    }\n  }\n\n  end() {\n    super.end();\n    super.extras();\n  }\n}\n\nexport default PointerTwo;\n","import * as THREE from \"three\";\nimport { rotate, rotateStart } from \"./Actions\";\nimport State from \"./State\";\n\nclass PointerMiddle {\n  active: boolean;\n  initial: THREE.Vector2;\n  current: THREE.Vector2;\n  diff: THREE.Vector2;\n  state: State;\n\n  constructor(state: State) {\n    this.active = false;\n    this.initial = new THREE.Vector2();\n    this.current = new THREE.Vector2();\n    this.diff = new THREE.Vector2();\n    this.state = state;\n  }\n\n  start(e: PointerEvent) {\n    this.active = true;\n    this.current.set(e.clientX, e.clientY);\n    this.initial.copy(this.current);\n    this.diff.set(0, 0);\n\n    rotateStart(this.state);\n  }\n\n  move(e: PointerEvent) {\n    this.current.set(e.clientX, e.clientY);\n    this.diff.copy(this.current).sub(this.initial);\n\n    // @ts-ignore\n    rotate(this.state, this);\n  }\n\n  end() {\n    this.active = false;\n    this.current.set(0, 0);\n    this.diff.set(0, 0);\n  }\n}\n\nexport default PointerMiddle;\n","import { useEffect } from \"react\";\nimport State from \"./State\";\nimport * as THREE from \"three\";\nimport { discreteZoom, renderSelected } from \"./Actions\";\n\nexport class SubPointer {\n  state: State;\n  id: number;\n  current: THREE.Vector2;\n\n  constructor(state: State, e: PointerEvent) {\n    this.state = state;\n    this.id = e.pointerId;\n    this.current = new THREE.Vector2(e.clientX, e.clientY);\n\n    // left button\n    this.state.pointers.push(this);\n    switch (this.state.pointers.length) {\n      case 1:\n        // start 1\n        this.state.PointerOne.start(this.state.pointers.slice(0, 1));\n        break;\n      case 2:\n        // start 2\n        if (Date.now() - state.PointerOne.startTime) {\n          // revert selection\n          state.selectedGrid = state.gridCache;\n          renderSelected(state);\n        }\n        this.state.PointerOne.cancel();\n        this.state.PointerTwo.start(this.state.pointers.slice(0, 2));\n        break;\n      default:\n        // three or greater start three\n        this.state.PointerTwo.end();\n        this.state.PointerThree.start(this.state.pointers.slice(0, 3));\n    }\n  }\n\n  move(e: PointerEvent) {\n    this.current.set(e.clientX, e.clientY);\n    switch (this.state.pointers.length) {\n      case 1:\n        this.state.PointerOne.move();\n        break;\n      case 2:\n        this.state.PointerTwo.move();\n        break;\n      default:\n        this.state.PointerThree.move();\n        break;\n    }\n  }\n\n  remove() {\n    const index = getPointerIndexById(this.state, this.id);\n    if (index !== -1) {\n      this.state.pointers.splice(index, 1);\n    }\n    switch (this.state.pointers.length) {\n      case 0:\n        this.state.PointerOne.end();\n        break;\n      case 1:\n        // down to 1\n        this.state.PointerTwo.end();\n        // do not step down to 1\n        // this.state.PointerOne.start(this.state.pointers.slice(0, 1));\n        break;\n      case 2:\n        // down to 2\n        this.state.PointerThree.end();\n        this.state.PointerTwo.start(this.state.pointers.slice(0, 2));\n        break;\n      default:\n    }\n  }\n}\n\ntype PointerProps = {\n  state: State;\n};\n\nconst PointerComponent = ({ state }: PointerProps) => {\n  useEffect(() => {\n    const { canvas } = state;\n\n    const handlePointerMove = (e: PointerEvent) => {\n      if (state.lastPointerButtonPressed === 0) {\n        if (state.pointers.length > 0) {\n          let pointer;\n          if (state.pressed.includes(\" \")) {\n            pointer = getPointerById(state, 999);\n          } else {\n            pointer = getPointerById(state, e.pointerId);\n          }\n          if (pointer) {\n            pointer.move(e);\n          }\n        } else {\n          if (state.PointerHover.active) {\n            state.PointerHover.move(e.clientX, e.clientY);\n          } else {\n            state.PointerHover.start(e.clientX, e.clientY);\n          }\n        }\n      } else if (state.lastPointerButtonPressed === 1) {\n        if (state.PointerMiddle.active) {\n          state.PointerMiddle.move(e);\n        }\n      } else if (state.lastPointerButtonPressed === 2) {\n        // right\n      }\n    };\n\n    const handlePointerDown = (e: PointerEvent) => {\n      state.PointerHover.end();\n      state.lastPointerButtonPressed = e.button;\n      if (state.lastPointerButtonPressed === 0) {\n        new SubPointer(state, e);\n        canvas.setPointerCapture(e.pointerId);\n      } else if (state.lastPointerButtonPressed === 1) {\n        state.PointerMiddle.start(e);\n      } else if (state.lastPointerButtonPressed === 2) {\n        // right\n      }\n      canvas.setPointerCapture(e.pointerId);\n    };\n\n    const handlePointerUp = (e: PointerEvent) => {\n      if (state.lastPointerButtonPressed === 0) {\n        if (state.pointers.length > 0) {\n          const pointer = getPointerById(state, e.pointerId);\n          if (pointer) pointer.remove();\n        } else {\n          state.PointerHover.end();\n        }\n        canvas.releasePointerCapture(e.pointerId);\n      } else if (state.lastPointerButtonPressed === 1) {\n        state.PointerMiddle.end();\n        state.lastPointerButtonPressed = 0;\n      } else if (state.lastPointerButtonPressed === 2) {\n        // right\n      }\n    };\n\n    const handleMousewheel = (e: WheelEvent) => {\n      discreteZoom(state, e.deltaY);\n    };\n\n    if (canvas) {\n      canvas.addEventListener(\"pointerdown\", handlePointerDown);\n      canvas.addEventListener(\"pointermove\", handlePointerMove);\n      canvas.addEventListener(\"pointerup\", handlePointerUp);\n      canvas.addEventListener(\"pointercancel\", handlePointerUp);\n      canvas.addEventListener(\"wheel\", handleMousewheel, {\n        passive: false,\n      });\n      return () => {\n        canvas.removeEventListener(\"pointerdown\", handlePointerDown);\n        canvas.removeEventListener(\"pointermove\", handlePointerMove);\n        canvas.removeEventListener(\"pointerup\", handlePointerUp);\n        canvas.removeEventListener(\"pointercancel\", handlePointerUp);\n        canvas.removeEventListener(\"wheel\", handleMousewheel);\n      };\n    }\n  }, [state]);\n\n  return null;\n};\n\nexport default PointerComponent;\n\nconst getPointerIndexById = (state: State, pointerId: number) => {\n  const ids = state.pointers.map((pointer) => pointer.id);\n  return ids.indexOf(pointerId);\n};\n\nconst getPointerById = (state: State, pointerId: number) => {\n  const index = getPointerIndexById(state, pointerId);\n  if (index > -1) {\n    return state.pointers[index];\n  } else {\n    return null;\n  }\n};\n","import * as THREE from \"three\";\nimport { panCameraStart, panCamera, rotate, rotateStart } from \"./Actions\";\nimport State from \"./State\";\nimport { SubPointer } from \"./PointerComponent\";\n\nclass PointerHover {\n  active: boolean;\n  initial: THREE.Vector2;\n  current: THREE.Vector2;\n  diff: THREE.Vector2;\n  state: State;\n  spacePointer: null | SubPointer;\n\n  constructor(state: State) {\n    this.active = false;\n    this.initial = new THREE.Vector2();\n    this.current = new THREE.Vector2();\n    this.diff = new THREE.Vector2();\n    this.state = state;\n    this.spacePointer = null;\n  }\n\n  start(x: number, y: number) {\n    this.active = true;\n    this.current.set(x, y);\n    this.initial.copy(this.current);\n    this.diff.set(0, 0);\n\n    const pressed = this.state.pressed;\n    if (pressed.includes(\" \")) {\n      // @ts-ignore\n      this.spacePointer = new SubPointer(this.state, {\n        pointerId: 999,\n        clientX: this.current.x,\n        clientY: this.current.y,\n      });\n    } else if (pressed.includes(\"r\")) {\n      rotateStart(this.state);\n    } else if (pressed.includes(\"d\")) {\n      panCameraStart(this.state);\n    }\n  }\n\n  move(x: number, y: number) {\n    this.current.set(x, y);\n    this.diff.copy(this.current).sub(this.initial);\n    const pressed = this.state.pressed;\n    if (pressed.includes(\"r\")) {\n      // @ts-ignore\n      rotate(this.state, this);\n    } else if (pressed.includes(\"d\")) {\n      // @ts-ignore\n      panCamera(this.state, this);\n    }\n  }\n\n  end() {\n    this.active = false;\n    this.current.set(0, 0);\n    this.diff.set(0, 0);\n  }\n}\n\nexport default PointerHover;\n","import * as Three from \"three\";\nimport State from \"./State\";\n\nexport class Box extends Three.InstancedMesh {\n  constructor(\n    state: State,\n    cellSize: number,\n    cols: number,\n    rows: number,\n    depth: number,\n    texture: Three.Texture\n  ) {\n    const geometry = new Three.BoxBufferGeometry(cellSize, cellSize, cellSize);\n\n    var uv = geometry.getAttribute(\"uv\");\n\n    // +x\n    uv.setXY(0, 1, 1);\n    uv.setXY(1, 1, 1);\n    uv.setXY(2, 1, 0);\n    uv.setXY(3, 1, 0);\n\n    // -x\n    uv.setXY(4, 0, 1);\n    uv.setXY(5, 0, 1);\n    uv.setXY(6, 0, 0);\n    uv.setXY(7, 0, 0);\n\n    // +y\n    uv.setXY(8, 0, 1);\n    uv.setXY(9, 1, 1);\n    uv.setXY(10, 0, 1);\n    uv.setXY(11, 1, 1);\n\n    // -y\n    uv.setXY(12, 0, 0);\n    uv.setXY(13, 1, 0);\n    uv.setXY(14, 0, 0);\n    uv.setXY(15, 1, 0);\n\n    // z\n    uv.setXY(16, 0, 1);\n    uv.setXY(17, 1, 1);\n    uv.setXY(18, 0, 0);\n    uv.setXY(15, 1, 0);\n\n    // -z\n    uv.setXY(20, 0, 0);\n    uv.setXY(21, 0, 0);\n    uv.setXY(22, 0, 0);\n    uv.setXY(23, 0, 0);\n\n    const texScale = [1 / cols, 1 / rows];\n    const offsets = [];\n    for (let r = 0; r < rows; r++) {\n      for (let c = 0; c < cols; c++) {\n        for (let d = 0; d < depth; d++) {\n          offsets.push(c, r);\n        }\n      }\n    }\n    geometry.setAttribute(\n      \"offset\",\n      new Three.InstancedBufferAttribute(new Float32Array(offsets), 2, false)\n    );\n\n    const visible = [];\n    for (let r = 0; r < rows; r++) {\n      for (let c = 0; c < cols; c++) {\n        for (let d = 0; d < depth; d++) {\n          visible.push(d === 0 ? 1 : 0);\n          // visible.push(1);\n        }\n      }\n    }\n    geometry.setAttribute(\n      \"visible\",\n      new Three.InstancedBufferAttribute(new Float32Array(visible), 1, false)\n    );\n\n    const vertexShader = `\n      varying vec2 vUv;\n      attribute vec2 offset;\n      varying vec2 vOffset;\n      uniform vec2 texScale;\n      varying vec2 vTexScale;\n      attribute float visible;\n\n      void main() {\n        vUv = uv * texScale;\n        vOffset = offset * texScale;\n        vTexScale = texScale;\n\n        gl_Position = projectionMatrix * viewMatrix * modelMatrix * instanceMatrix * vec4(position, 1.0) * visible;\n      }\n    `;\n    const fragmentShader = `\n      uniform sampler2D texture1;\n      varying vec2 vUv;\n      varying vec2 vOffset;\n      varying vec2 vTexScale;\n\n      void main() {\n         vec4 color = texture2D(texture1, vec2(vUv.x + vOffset.x, vUv.y + vOffset.y));\n        color.a = 1.0;\n         gl_FragColor = color;\n      }\n    `;\n\n    var uniforms = {\n      texture1: { type: \"t\", value: texture },\n      texScale: { value: texScale },\n    };\n\n    const material = new Three.ShaderMaterial({\n      uniforms: uniforms,\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader,\n    });\n    super(geometry, material, cols * rows * depth);\n    const matrix = new Three.Matrix4();\n    for (let r = 0; r < rows; r++) {\n      for (let c = 0; c < cols; c++) {\n        for (let d = 0; d < depth; d++) {\n          matrix.setPosition(\n            (c + 0.5) * cellSize - (cols * cellSize) / 2,\n            (r + 0.5) * cellSize - (rows * cellSize) / 2,\n            d * cellSize\n          );\n          const i = r * cols * depth + c * depth + d;\n          this.setMatrixAt(i, matrix);\n        }\n      }\n    }\n    state.scene.add(this);\n  }\n}\n","import * as Three from \"three\";\nimport State from \"./State\";\n\nexport class OutlineBox extends Three.InstancedMesh {\n  state: State;\n  material: Three.ShaderMaterial;\n\n  constructor(state: State, cellSize: number, cols: number, rows: number) {\n    const geometry = new Three.BoxBufferGeometry(\n      cellSize,\n      cellSize,\n      cellSize / 4\n    );\n\n    geometry.setAttribute(\n      \"depth\",\n      new Three.InstancedBufferAttribute(\n        new Float32Array(cols * rows),\n        1,\n        false\n      )\n    );\n\n    const selected = Array(rows * cols).fill(0);\n    geometry.setAttribute(\n      \"selected\",\n      new Three.InstancedBufferAttribute(new Float32Array(selected), 1, false)\n    );\n\n    const vertexShader = `\n      attribute float depth;\n      uniform float cellSize;\n      attribute float selected;\n      uniform vec3 color;\n\n      void main() {\n        vec3 depthed = position;\n        depthed.z += depth * cellSize - cellSize / 2.0;\n        vec4 pos = viewMatrix * modelMatrix * instanceMatrix * vec4(depthed, 1.0);\n        gl_Position = projectionMatrix * pos * selected;\n    }\n    `;\n    const fragmentShader = `\n      uniform vec3 color;\n      void main() {\n        gl_FragColor = vec4(color, 1.0);\n     }\n   `;\n    const uniforms = {\n      cellSize: { value: cellSize },\n      color: { value: new Three.Vector3(0.0, 1.0, 1.0) },\n    };\n    const material = new Three.ShaderMaterial({\n      uniforms: uniforms,\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader,\n    });\n\n    super(geometry, material, cols * rows);\n    this.material = material;\n    state.highlightScene.add(this);\n    this.state = state;\n\n    const matrix = new Three.Matrix4();\n    for (let r = 0; r < rows; r++) {\n      for (let c = 0; c < cols; c++) {\n        matrix.setPosition(\n          (c + 0.5) * cellSize - (cols * cellSize) / 2,\n          (r + 0.5) * cellSize - (rows * cellSize) / 2,\n          0\n        );\n        const i = r * cols + c;\n        this.setMatrixAt(i, matrix);\n      }\n    }\n    this.updateDepth();\n  }\n\n  updateDepth() {\n    for (let i = 0; i < this.state.heightGrid.length; i++) {\n      const depth = this.state.heightGrid[i];\n      // @ts-ignore\n      this.geometry.attributes.depth.array[i] = depth;\n    }\n    this.geometry.attributes.depth.needsUpdate = true;\n  }\n}\n\nexport default OutlineBox;\n","import * as THREE from \"three\";\n\nclass FullscreenQuad {\n  camera: THREE.PerspectiveCamera;\n  scene: THREE.Scene;\n  renderTarget: THREE.RenderTarget;\n  material: THREE.MeshBasicMaterial;\n\n  constructor() {\n    this.camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      100\n    );\n    const visibleHeight = 2 * Math.tan((this.camera.fov * Math.PI) / 360) * 5;\n    const worldPixel = visibleHeight / window.innerHeight;\n\n    this.renderTarget = new THREE.WebGLRenderTarget(\n      window.innerWidth,\n      window.innerHeight\n    );\n    const geometry = new THREE.PlaneBufferGeometry(\n      window.innerWidth * worldPixel,\n      window.innerHeight * worldPixel\n    );\n    this.material = new THREE.MeshBasicMaterial({\n      transparent: true,\n      opacity: 0.3,\n    });\n    const cube = new THREE.Mesh(geometry, this.material);\n    this.scene = new THREE.Scene();\n    this.scene.add(cube);\n    this.camera.position.z = 5;\n\n    // @ts-ignore\n    this.material.map = this.renderTarget.texture;\n  }\n}\n\nexport default FullscreenQuad;\n","import State from \"./State\";\nimport * as THREE from \"three\";\n\nclass View {\n  holder: HTMLElement;\n  div: HTMLElement;\n  mouse1: THREE.Vector2;\n  mouse2: THREE.Vector2;\n  min: THREE.Vector2;\n  max: THREE.Vector2;\n  topLeft: THREE.Vector2;\n  botRight: THREE.Vector2;\n  diff: THREE.Vector2;\n  kind: \"fullscreen\" | \"window\";\n  activeHandle: null | number;\n  mouseOrigin: THREE.Vector2;\n  mouseDiff: THREE.Vector2;\n  minOrigin: THREE.Vector2;\n  maxOrigin: THREE.Vector2;\n  dragging: boolean;\n  state: State;\n\n  constructor(state: State, mouse1: THREE.Vector2, mouse2: THREE.Vector2) {\n    this.div = document.createElement(\"div\");\n    this.mouse1 = new THREE.Vector2().copy(mouse1);\n    this.mouse2 = new THREE.Vector2().copy(mouse2);\n    this.min = new THREE.Vector2();\n    this.max = new THREE.Vector2();\n    this.topLeft = new THREE.Vector2(0, 0);\n    this.botRight = new THREE.Vector2(window.innerWidth, window.innerHeight);\n    this.diff = new THREE.Vector2();\n    this.activeHandle = null;\n    this.div.style.border = \"solid 1px \" + state.viewColor;\n    this.div.style.position = \"absolute\";\n    this.kind = \"fullscreen\";\n    this.dragging = false;\n    this.mouseOrigin = new THREE.Vector2();\n    this.mouseDiff = new THREE.Vector2();\n    this.minOrigin = new THREE.Vector2();\n    this.maxOrigin = new THREE.Vector2();\n    this.div.style.pointerEvents = \"auto\";\n    this.state = state;\n\n    this.div.addEventListener(\"pointerdown\", (e) => {\n      e.stopPropagation();\n      this.dragging = true;\n      this.mouseOrigin.set(e.clientX, e.clientY);\n      this.minOrigin.copy(this.min);\n      this.maxOrigin.copy(this.max);\n      this.div.setPointerCapture(e.pointerId);\n    });\n    this.div.addEventListener(\"pointermove\", (e) => {\n      if (this.dragging) {\n        this.mouseDiff.set(e.clientX, e.clientY).sub(this.mouseOrigin);\n        this.mouse1.x = this.minOrigin.x + this.mouseDiff.x;\n        this.mouse1.y = this.minOrigin.y + this.mouseDiff.y;\n        this.mouse2.x = this.maxOrigin.x + this.mouseDiff.x;\n        this.mouse2.y = this.maxOrigin.y + this.mouseDiff.y;\n        this.update();\n      }\n    });\n    this.div.addEventListener(\"pointerup\", (e) => {\n      this.dragging = false;\n      this.div.releasePointerCapture(e.pointerId);\n    });\n\n    this.holder = document.createElement(\"div\");\n    this.holder.style.position = \"fixed\";\n    this.holder.style.left = \"0px\";\n    this.holder.style.top = \"0px\";\n    this.holder.style.right = \"0px\";\n    this.holder.style.bottom = \"0px\";\n    this.holder.style.overflow = \"hidden\";\n    this.holder.style.pointerEvents = \"none\";\n    this.holder.appendChild(this.div);\n\n    document.body.appendChild(this.holder);\n\n    const positions = [\n      [-1, -1],\n      [0, -1],\n      [1, -1],\n      [-1, 0],\n      [1, 0],\n      [-1, 1],\n      [0, 1],\n      [1, 1],\n    ];\n    const percents = {\n      \"-1\": \"0%\",\n      \"0\": \"50%\",\n      \"1\": \"100%\",\n    };\n    for (let i = 0; i < positions.length; i++) {\n      const position = positions[i];\n      const div = document.createElement(\"div\");\n      div.style.width = 48 + \"px\";\n      div.style.height = 48 + \"px\";\n      div.style.position = \"absolute\";\n      // @ts-ignore\n      div.style.left = percents[position[0].toString()];\n      // @ts-ignore\n      div.style.top = percents[position[1].toString()];\n      div.style.transform = \"translate(-24px, -24px)\";\n      div.style.pointerEvents = \"auto\";\n      div.style.display = \"none\";\n      div.style.padding = \"16px\";\n      const inner = document.createElement(\"div\");\n      inner.style.width = 16 + \"px\";\n      inner.style.height = 16 + \"px\";\n      inner.style.background = state.viewColor;\n      div.appendChild(inner);\n      div.addEventListener(\"pointerdown\", (e) => {\n        e.stopPropagation();\n        this.activeHandle = i;\n        if (position[0] === -1) {\n          this.mouse1.x = this.max.x;\n        } else if (position[0] === 1) {\n          this.mouse1.x = this.min.x;\n        }\n        if (position[1] === -1) {\n          this.mouse1.y = this.max.y;\n        } else if (position[1] === 1) {\n          this.mouse1.y = this.min.y;\n        }\n        div.setPointerCapture(e.pointerId);\n      });\n      div.addEventListener(\"pointermove\", (e) => {\n        if (this.activeHandle !== null) {\n          if (position[0] !== 0) {\n            this.mouse2.x = e.clientX;\n          }\n          if (position[1] !== 0) {\n            this.mouse2.y = e.clientY;\n          }\n          this.update();\n        }\n      });\n      div.addEventListener(\"pointerup\", (e) => {\n        this.activeHandle = null;\n        div.releasePointerCapture(e.pointerId);\n      });\n      this.div.appendChild(div);\n    }\n    this.update();\n  }\n\n  showHandles() {\n    this.div.style.pointerEvents = \"auto\";\n    this.holder.style.zIndex = \"40\";\n    for (const child of Array.from(this.div.childNodes)) {\n      // @ts-ignore\n      child.style.display = \"block\";\n    }\n  }\n\n  hideHandles() {\n    this.div.style.pointerEvents = \"none\";\n    this.holder.style.zIndex = \"1\";\n    for (const child of Array.from(this.div.childNodes)) {\n      // @ts-ignore\n      child.style.display = \"none\";\n    }\n  }\n\n  updateColor() {\n    for (const child of Array.from(this.div.childNodes)) {\n      // @ts-ignore\n      child.childNodes[0].style.background = this.state.viewColor;\n    }\n    this.div.style.borderColor = this.state.viewColor;\n  }\n\n  update() {\n    if (this.kind === \"window\") {\n      this.div.style.display = \"block\";\n      this.showHandles();\n      this.botRight.set(window.innerWidth, window.innerHeight);\n      this.min.copy(this.mouse1).min(this.mouse2).max(this.topLeft);\n      this.max.copy(this.mouse1).max(this.mouse2).min(this.botRight);\n    } else if (this.kind === \"fullscreen\") {\n      this.div.style.display = \"none\";\n      this.botRight.set(window.innerWidth, window.innerHeight);\n      this.hideHandles();\n      this.min.copy(this.topLeft);\n      this.max.copy(this.botRight);\n    }\n    this.diff.copy(this.max).sub(this.min);\n    this.div.style.left = this.min.x + \"px\";\n    this.div.style.top = this.min.y + \"px\";\n    this.div.style.width = this.diff.x + \"px\";\n    this.div.style.height = this.diff.y + \"px\";\n  }\n}\n\nexport default View;\n","import * as Three from \"three\";\nimport { SubPointer } from \"./PointerComponent\";\nimport PointerOne from \"./PointerOne\";\nimport PointerThree from \"./PointerThree\";\nimport PointerTwo from \"./PointerTwo\";\nimport PointerMiddle from \"./PointerMiddle\";\nimport PointerHover from \"./PointerHover\";\nimport { Box } from \"./Box\";\nimport { MeshBasicMaterial } from \"three\";\nimport OutlineBox from \"./OutlineBox\";\nimport FullscreenQuad from \"./FullscreenQuad\";\nimport View from \"./View\";\n\nclass State {\n  canvas: HTMLCanvasElement;\n  camera: Three.PerspectiveCamera;\n  initialCameraPosition: Three.Vector3;\n  renderer: Three.WebGLRenderer;\n  scene: Three.Scene;\n  worldPixel: number;\n  boxes: Array<Box>;\n  group: Three.Object3D;\n  // @ts-ignore\n  outlineBoxes: Three.Object3D;\n  heightGrid: Array<number>;\n  selectedGrid: Array<number>;\n  keyInterupts: Array<string>;\n  hoverKeyInterrupts: Array<string>;\n  cols: number;\n  rows: number;\n  depth: number;\n  currentImageDims: [number, number];\n  pressed: Array<string>;\n  center: Three.Vector3;\n  pressedOne: string;\n  pointers: Array<SubPointer>;\n  PointerOne: PointerOne;\n  PointerTwo: PointerTwo;\n  PointerThree: PointerThree;\n  PointerMiddle: PointerMiddle;\n  lastPointerButtonPressed: number;\n  initialRotation: Three.Euler;\n  gridCache: Array<number>;\n  PointerHover: PointerHover;\n  heightGridCache: Array<number>;\n  viewScene: Three.Scene;\n  highlightScene: Three.Scene;\n  view: View;\n  printCanvas: HTMLCanvasElement;\n  printTarget: Three.WebGLRenderer;\n  backgroundColor: number;\n  viewColor: string;\n  backgroundAlpha: number;\n  highlightColor: number;\n  highlightAlpha: number;\n  fullscreenQuad: FullscreenQuad;\n  mode: \"normal\" | \"view\";\n  isTouch: boolean;\n  printMultiplier: number;\n\n  constructor(canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    this.camera = new Three.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      100\n    );\n    this.renderer = new Three.WebGLRenderer({\n      canvas,\n      logarithmicDepthBuffer: true,\n      antialias: false,\n    });\n    this.renderer.autoClear = false;\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.scene = new Three.Scene();\n    this.pointers = [];\n    this.boxes = [];\n    this.cols = 8;\n    this.rows = 8;\n    this.depth = 48;\n    this.selectedGrid = [];\n    this.gridCache = [];\n    this.heightGrid = [];\n    this.heightGridCache = [];\n    this.pressed = [];\n    this.center = new Three.Vector3();\n    this.initialCameraPosition = new Three.Vector3();\n    this.pressedOne = \"\";\n    this.PointerOne = new PointerOne(this);\n    this.PointerTwo = new PointerTwo(this);\n    this.PointerThree = new PointerThree(this);\n    this.PointerMiddle = new PointerMiddle(this);\n    this.PointerHover = new PointerHover(this);\n    this.lastPointerButtonPressed = 0;\n    this.keyInterupts = [\" \", \"d\", \"r\", \"control\"];\n    this.hoverKeyInterrupts = [\" \", \"d\", \"r\"];\n    this.initialRotation = new Three.Euler();\n    this.mode = \"normal\";\n    this.viewScene = new Three.Scene();\n    this.highlightScene = new Three.Scene();\n    this.printCanvas = document.createElement(\"canvas\");\n    this.printCanvas.width = window.innerWidth;\n    this.printCanvas.height = window.innerHeight;\n    this.printTarget = new Three.WebGLRenderer({\n      canvas: this.printCanvas,\n      alpha: true,\n    });\n    this.currentImageDims = [16, 16];\n    this.viewColor = \"#aaaaaa\";\n    this.view = new View(this, new Three.Vector2(), new Three.Vector2());\n    this.backgroundColor = 0x000000;\n    this.backgroundAlpha = 0;\n    this.highlightColor = 0x00ffff;\n    this.highlightAlpha = 0.3;\n    this.fullscreenQuad = new FullscreenQuad();\n    this.isTouch = window.matchMedia(\"(pointer: coarse)\").matches;\n    this.printMultiplier = 2;\n\n    // set world pixel\n    {\n      const visibleHeight = 2 * Math.tan((this.camera.fov * Math.PI) / 360) * 5;\n      this.worldPixel = visibleHeight / window.innerHeight;\n    }\n\n    this.group = new Three.Group();\n\n    // this.lkadImage(\"ellott2.jpg\");\n    this.loadImage(\"bowiealt.jpg\");\n\n    // additional settings\n    this.camera.position.z = 5;\n\n    this.animate();\n  }\n\n  loadImage(src: string) {\n    const loader = new Three.TextureLoader();\n    loader.setCrossOrigin(\"\");\n    loader.load(\n      src,\n      (texture) => {\n        this.scene.remove(this.group);\n        this.group = new Three.Group();\n\n        const limit = 1024;\n        const img = texture.image;\n        if (img.width > limit || img.height > limit) {\n          const aspect = img.width / img.height;\n          if (aspect > 1) {\n            img.width = limit;\n            img.height = img.width / aspect;\n          } else {\n            img.height = limit;\n            img.width = img.height * aspect;\n          }\n        }\n        const cellSize = this.worldPixel * 16;\n\n        this.currentImageDims = [img.width, img.height];\n        const cols = Math.round(img.width / 16);\n        const rows = Math.round(img.height / 16);\n        this.cols = cols;\n        this.rows = rows;\n\n        this.selectedGrid = Array(cols * rows).fill(0);\n        this.heightGrid = Array(cols * rows).fill(1);\n\n        const ray1 = new Three.Vector2(\n          window.innerWidth / 2 - (window.innerWidth / 2 - 32),\n          window.innerHeight / 2 - (window.innerHeight / 2 - 32)\n        );\n        const ray2 = new Three.Vector2(\n          window.innerWidth / 2 + (window.innerWidth / 2 - 32),\n          window.innerHeight / 2 + (window.innerHeight / 2 - 32)\n        );\n        this.view.mouse1.copy(ray1);\n        this.view.mouse2.copy(ray2);\n        this.view.update();\n        this.changeMode(\"normal\");\n\n        const outlineBoxes = new OutlineBox(this, cellSize, cols, rows);\n        const boxes = new Box(this, cellSize, cols, rows, this.depth, texture);\n        (boxes.material as MeshBasicMaterial).map = texture;\n        this.outlineBoxes = outlineBoxes;\n        this.group = boxes;\n      },\n      () => {},\n      (error) => {\n        // @ts-ignore\n        console.log(error.target);\n      }\n    );\n  }\n\n  animate() {\n    this.renderer.setClearColor(this.backgroundColor, 1);\n    this.renderer.clear();\n    this.renderer.render(this.scene, this.camera);\n\n    this.renderer.setRenderTarget(this.fullscreenQuad.renderTarget);\n    this.renderer.setClearColor(this.backgroundColor, 0);\n    this.renderer.clear();\n    this.renderer.render(this.highlightScene, this.camera);\n    this.renderer.setRenderTarget(null);\n\n    this.fullscreenQuad.material.opacity = this.highlightAlpha;\n    this.renderer.render(this.fullscreenQuad.scene, this.fullscreenQuad.camera);\n\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  changeMode(newMode: \"normal\" | \"view\") {\n    this.mode = newMode;\n    if (this.mode === \"view\" && this.view.kind === \"window\") {\n      this.view.showHandles();\n    } else {\n      this.view.hideHandles();\n    }\n  }\n}\n\nexport default State;\n","import { useEffect } from \"react\";\nimport {\n  discretePanCamera,\n  discreteZoom,\n  interruptPointerKeyDown,\n  interruptPointerKeyUp,\n} from \"./Actions\";\nimport State from \"./State\";\n\ntype KeyboardProps = {\n  state: State;\n};\n\nfunction Keyboard({ state }: KeyboardProps) {\n  useEffect(() => {\n    // const pressed = (key: string) => {};\n\n    const downHandler = (e: KeyboardEvent) => {\n      let press = e.key.toLowerCase();\n      if (press === \"-\") {\n        discreteZoom(state, 32);\n      } else if (press === \"+\" || press === \"=\") {\n        discreteZoom(state, -32);\n      }\n      if (!state.pressed.includes(press)) {\n        state.pressed.push(press);\n        interruptPointerKeyDown(state, press);\n      }\n      if (state.pressed.includes(\"arrowleft\")) {\n        discretePanCamera(state, [-1, 0]);\n      }\n      if (state.pressed.includes(\"arrowright\")) {\n        discretePanCamera(state, [1, 0]);\n      }\n      if (state.pressed.includes(\"arrowup\")) {\n        discretePanCamera(state, [0, -1]);\n      }\n      if (state.pressed.includes(\"arrowdown\")) {\n        discretePanCamera(state, [0, 1]);\n      }\n    };\n\n    const upHandler = (e: KeyboardEvent) => {\n      let press = e.key.toLowerCase();\n      if (press === \" \") {\n        if (state.PointerHover.spacePointer) {\n          state.PointerHover.spacePointer.remove();\n          state.PointerHover.spacePointer = null;\n        }\n      }\n      const index = state.pressed.indexOf(press);\n      if (index !== -1) {\n        state.pressed.splice(index, 1);\n      }\n      interruptPointerKeyUp(state, press);\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [state]);\n\n  return null;\n}\n\nexport default Keyboard;\n","import { useEffect, useRef, useState } from \"react\";\nimport State from \"./State\";\nimport * as THREE from \"three\";\nimport { print, domLoadImage } from \"./Actions\";\n\ninterface ButtonProps {\n  children: any;\n  clickHandler?: any;\n  active?: boolean;\n  textColor: string;\n}\n\nfunction Button({\n  children,\n  clickHandler = null,\n  active = false,\n  textColor,\n}: ButtonProps) {\n  const shade = textColor === \"black\" ? \"800\" : \"200\";\n  return (\n    <div\n      role=\"button\"\n      className={`h-16 flex items-center justify-center px-5 betterhover:hover:bg-gray-${shade} betterhover:hover:bg-opacity-10 ${\n        active ? \"bg-gray-\" + shade : \"\"\n      } bg-opacity-10 pointer-events-auto`}\n      style={{ minWidth: \"8ch\" }}\n      onClick={() => clickHandler && clickHandler()}\n    >\n      {children}\n    </div>\n  );\n}\n\ninterface ShortcutProps {\n  action: any;\n  shortcut: string;\n}\n\nfunction HandleShortcut({ action, shortcut }: ShortcutProps) {\n  useEffect(() => {\n    const downHandler = (e: KeyboardEvent) => {\n      let press = e.key.toLowerCase();\n      if (press === shortcut) action();\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n    };\n  }, [action, shortcut]);\n\n  return null;\n}\n\ninterface DialogProps {\n  title: string;\n  children: any;\n  display: boolean;\n  setDisplay: any;\n  shortcut: string;\n  clearModals: any;\n}\n\nfunction Dialog({\n  title,\n  children,\n  display,\n  setDisplay,\n  shortcut,\n  clearModals,\n}: DialogProps) {\n  const [offsetX, setOffSetX] = useState(0);\n  const [offsetY, setOffSetY] = useState(0);\n  const pointerDown = useRef(false);\n  const pointerOrigin = useRef([0, 0]);\n  const offsetOrigin = useRef([0, 0]);\n\n  useEffect(() => {\n    const downHandler = (e: KeyboardEvent) => {\n      let press = e.key.toLowerCase();\n      if (press === \"escape\") setDisplay(false);\n      if (press === shortcut) {\n        clearModals();\n        setDisplay(!display);\n      }\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n    };\n  }, [display, shortcut, clearModals, setDisplay]);\n\n  return (\n    <div\n      className=\"fixed inset-0 z-50 pointer-events-none\"\n      style={{ display: display ? \"block\" : \"none\" }}\n    >\n      <div\n        className=\"absolute left-1/2 bg-white text-black pointer-events-auto shadow-md\"\n        style={{\n          top: 64,\n          maxHeight: \"calc(100% - 128px)\",\n          width: 440,\n          maxWidth: \"calc(100% - 32px)\",\n          transform: `translate(calc(${offsetX}px - 50%), ${offsetY}px)`,\n          overflow: \"auto\",\n        }}\n      >\n        <div className=\"flex border-b border-gray-200\">\n          <div\n            className=\"px-4 py-3 select-none flex-grow\"\n            onPointerDown={(e) => {\n              pointerDown.current = true;\n              pointerOrigin.current = [e.clientX, e.clientY];\n              offsetOrigin.current = [offsetX, offsetY];\n            }}\n            onPointerMove={(e) => {\n              if (pointerDown.current) {\n                setOffSetX(\n                  offsetOrigin.current[0] + e.clientX - pointerOrigin.current[0]\n                );\n                setOffSetY(\n                  offsetOrigin.current[1] + e.clientY - pointerOrigin.current[1]\n                );\n              }\n            }}\n            onPointerUp={() => {\n              pointerDown.current = false;\n            }}\n          >\n            {title}\n          </div>\n          <div\n            role=\"button\"\n            className=\"px-5 py-3 hover:bg-gray-200 cursor-pointer select-none\"\n            onClick={() => setDisplay(false)}\n          >\n            X\n          </div>\n        </div>\n        <div className=\"px-4 py-3\">{children}</div>\n      </div>\n    </div>\n  );\n}\n\ninterface BarProps {\n  state: State;\n  setMode: any;\n}\n\nexport function Bars({ state, setMode }: BarProps) {\n  const [isFocus, setIsFocus] = useState(false);\n  const [textColor, setTextColor] = useState(\"black\");\n  const [showAbout, setShowAbout] = useState(false);\n  const [showColors, setShowColors] = useState(false);\n  const [color, setColor] = useState(\"#000000\");\n  const [isTransparent, setIsTransparent] = useState(true);\n  const [is2x, setIs2x] = useState(true);\n  const [highlightColor, setHighlightColor] = useState(\"#00ffff\");\n  const [highlightAlpha, setHighlightAlpha] = useState(state.highlightAlpha);\n  const [showView, setShowView] = useState(false);\n  const [showControls, setShowControls] = useState(false);\n  const [viewColor, setViewColor] = useState(state.viewColor);\n  const colorRef = useRef(new THREE.Color());\n  const [viewKind, setViewKind] = useState<\"fullscreen\" | \"window\">(\n    state.view.kind\n  );\n\n  useEffect(() => {\n    state.backgroundColor = parseInt(color.replace(/^#/, \"\"), 16);\n    const threeColor = colorRef.current.set(color);\n    if (\n      threeColor.r * 255 * 0.299 +\n        threeColor.g * 255 * 0.587 +\n        threeColor.b * 255 * 0.114 >\n      186\n    ) {\n      setTextColor(\"black\");\n    } else {\n      setTextColor(\"white\");\n    }\n  }, [color, state, setTextColor]);\n\n  useEffect(() => {\n    state.backgroundAlpha = isTransparent ? 0 : 1;\n  }, [isTransparent, state]);\n\n  useEffect(() => {\n    state.printMultiplier = is2x ? 2 : 1;\n    console.log(state.printMultiplier);\n  }, [is2x, state]);\n\n  useEffect(() => {\n    state.viewColor = viewColor;\n    state.view.updateColor();\n  }, [viewColor, state]);\n\n  useEffect(() => {\n    const threeColor = colorRef.current.set(highlightColor);\n    if (state.outlineBoxes) {\n      // @ts-ignore\n      state.outlineBoxes.material.uniforms.color.value.set(\n        threeColor.r,\n        threeColor.g,\n        threeColor.b\n      );\n      state.highlightColor = threeColor.getHex();\n    }\n  }, [highlightColor, state]);\n\n  useEffect(() => {\n    state.highlightAlpha = highlightAlpha;\n  }, [highlightAlpha, state]);\n\n  useEffect(() => {\n    setMode(showView ? \"view\" : \"normal\");\n  }, [showView, state, setMode]);\n\n  useEffect(() => {\n    state.view.kind = viewKind;\n    state.view.update();\n  }, [viewKind, state]);\n\n  const clearModals = () => {\n    setShowAbout(false);\n    setShowColors(false);\n    setShowView(false);\n    setShowControls(false);\n  };\n\n  return (\n    <>\n      <div\n        className={`fixed left-0 top-0 right-0 h-16 text-${textColor} flex justify-center z-10 select-none pointer-events-none `}\n      >\n        <div className=\"flex\">\n          {isFocus ? null : (\n            <>\n              <Button\n                textColor={textColor}\n                clickHandler={() => domLoadImage(state.loadImage.bind(state))}\n              >\n                <u>o</u>pen\n              </Button>\n              <HandleShortcut\n                action={() => domLoadImage(state.loadImage.bind(state))}\n                shortcut={\"o\"}\n              />\n              <Button\n                textColor={textColor}\n                clickHandler={() => {\n                  clearModals();\n                  setShowAbout(!showAbout);\n                }}\n                active={showAbout}\n              >\n                <u>a</u>bout\n              </Button>\n              <Button\n                textColor={textColor}\n                clickHandler={() => {\n                  clearModals();\n                  setShowColors(!showColors);\n                }}\n                active={showColors}\n              >\n                <u>s</u>ettings\n              </Button>\n            </>\n          )}\n          <Button\n            textColor={textColor}\n            clickHandler={() => {\n              clearModals();\n              setIsFocus(!isFocus);\n            }}\n            active={isFocus}\n          >\n            <u>f</u>ocus\n          </Button>\n          <HandleShortcut action={() => setIsFocus(!isFocus)} shortcut={\"f\"} />\n          <HandleShortcut\n            action={() => {\n              clearModals();\n              setIsFocus(false);\n            }}\n            shortcut={\"escape\"}\n          />\n        </div>\n      </div>\n      {/* bottom bar */}\n      <div className=\"fixed left-0 bottom-0 right-0 h-16 text-${textColor flex justify-center z-10 select-none\">\n        <div className=\"flex\">\n          {isFocus ? null : (\n            <>\n              <Button\n                textColor={textColor}\n                clickHandler={() => {\n                  clearModals();\n                  setShowView(!showView);\n                }}\n                active={showView}\n              >\n                <u>v</u>iew\n              </Button>\n              <Button\n                textColor={textColor}\n                clickHandler={() => {\n                  clearModals();\n                  setShowControls(!showControls);\n                }}\n                active={showControls}\n              >\n                <u>c</u>ontrols\n              </Button>\n            </>\n          )}\n          <Button textColor={textColor} clickHandler={() => print(state)}>\n            <u>p</u>rint\n          </Button>\n          <HandleShortcut action={() => print(state)} shortcut={\"p\"} />\n        </div>\n      </div>\n      {/* Dialogs */}\n      <Dialog\n        title=\"About\"\n        display={showAbout}\n        setDisplay={setShowAbout}\n        shortcut=\"a\"\n        clearModals={clearModals}\n      >\n        <div className=\"mb-4\">\n          Push and pull blocks to distort an image. Select a section of the\n          image then click and drag it to pull it towards you.\n        </div>\n        <div className=\"flex justify-between\">\n          <div>\n            from{\" \"}\n            <a\n              href=\"https://constraint.systems\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Constraint Systems\n            </a>\n          </div>\n          <div>\n            <a\n              href=\"https://github.com/constraint-systems/push\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              View source\n            </a>\n          </div>\n        </div>\n      </Dialog>\n      <Dialog\n        title=\"Settings\"\n        display={showColors}\n        setDisplay={setShowColors}\n        shortcut=\"s\"\n        clearModals={clearModals}\n      >\n        <div className=\"flex items-center justify-between mb-3 pb-3 border-b\">\n          <div>Save at 2x resolution</div>\n          <input\n            type=\"checkbox\"\n            checked={is2x}\n            onChange={(e) => {\n              setIs2x(e.target.checked);\n            }}\n          ></input>\n        </div>\n        <div className=\"flex items-center justify-between mb-3 pb-3 border-b\">\n          <div>Transparent background on save</div>\n          <input\n            type=\"checkbox\"\n            checked={isTransparent}\n            onChange={(e) => {\n              setIsTransparent(e.target.checked);\n            }}\n          ></input>\n        </div>\n        <div className=\"flex items-center justify-between mb-3 pb-3 border-b\">\n          <div>Background color</div>\n          <input\n            style={{ display: \"block\" }}\n            type=\"color\"\n            value={color}\n            onChange={(e) => {\n              setColor(e.target.value);\n            }}\n          ></input>\n        </div>\n        <div className=\"flex items-center justify-between mb-3 pb-3 border-b\">\n          <div>Selection color</div>\n          <input\n            type=\"color\"\n            value={highlightColor}\n            onChange={(e) => {\n              setHighlightColor(e.target.value);\n            }}\n          ></input>\n        </div>\n        <div className=\"flex items-center justify-between mb-3 pb-3 border-b\">\n          <div>Selection color opacity</div>\n          <div className=\"flex items-center\">\n            <input\n              className=\"mr-2\"\n              type=\"range\"\n              value={highlightAlpha}\n              min={0.1}\n              step={0.1}\n              max={1}\n              onChange={(e) => {\n                setHighlightAlpha(parseFloat(e.target.value));\n              }}\n            ></input>{\" \"}\n            {highlightAlpha.toFixed(1)}\n          </div>\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <div>View window color</div>\n          <input\n            style={{ display: \"block\" }}\n            type=\"color\"\n            value={viewColor}\n            onChange={(e) => {\n              setViewColor(e.target.value);\n            }}\n          ></input>\n        </div>\n      </Dialog>\n      <Dialog\n        title=\"View\"\n        display={showView}\n        setDisplay={setShowView}\n        shortcut=\"v\"\n        clearModals={clearModals}\n      >\n        <div className=\"flex items-center justify-between mb-2 text-sm\">\n          View determines what part of the image is saved when you print. Use\n          window mode to select only a section.\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <div>Mode</div>\n          <div className=\"flex items-center\">\n            <label\n              className=\"mr-5\"\n              onPointerDown={(e) => {\n                e.stopPropagation();\n              }}\n              onClick={() => {\n                setViewKind(\"fullscreen\");\n              }}\n            >\n              <input\n                type=\"radio\"\n                value=\"Male\"\n                className=\"mr-2\"\n                checked={viewKind === \"fullscreen\"}\n                onPointerDown={(e) => {\n                  e.stopPropagation();\n                }}\n                onChange={() => {\n                  setViewKind(\"fullscreen\");\n                }}\n              />\n              fullscreen\n            </label>\n            <label\n              onPointerDown={(e) => {\n                e.stopPropagation();\n              }}\n              onClick={() => {\n                setViewKind(\"window\");\n              }}\n            >\n              <input\n                type=\"radio\"\n                className=\"mr-2\"\n                value=\"Female\"\n                checked={viewKind === \"window\"}\n                onChange={() => {\n                  setViewKind(\"window\");\n                }}\n              />\n              window\n            </label>\n          </div>\n        </div>\n      </Dialog>\n      <Dialog\n        title=\"Controls\"\n        display={showControls}\n        setDisplay={setShowControls}\n        shortcut=\"c\"\n        clearModals={clearModals}\n      >\n        <div className=\"flex items-center justify-between mb-4\">\n          Click and drag to select an area. Click and drag a selected area to\n          push and pull it.\n        </div>\n        <div className=\"flex items-center justify-between mb-2\">\n          <strong>Touch</strong>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>One-finger</div>\n          <div>Select, push and pull</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>Two-finger</div>\n          <div>Rotate, zoom</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-5\">\n          <div>Three-finger</div>\n          <div>Pan</div>\n        </div>\n        <div className=\"flex items-center justify-between mb-2\">\n          <strong>Keyboard and mouse</strong>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>Click and drag</div>\n          <div>Select, push and pull</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>Scroll</div>\n          <div>Zoom</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>Control + click and drag</div>\n          <div>Paint select</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>Shift + click and drag</div>\n          <div>Add to selection</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>r + move</div>\n          <div>Rotate</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>d + move</div>\n          <div>Pan</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>Arrows</div>\n          <div>Pan</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>+ and -</div>\n          <div>Zoom</div>\n        </div>\n        <div className=\"flex items-center justify-between border-b pb-1 mb-1\">\n          <div>Space</div>\n          <div>Mouse click</div>\n        </div>\n      </Dialog>\n    </>\n  );\n}\n","import { useEffect, useRef, useState } from \"react\";\nimport State from \"./State\";\nimport PointerComponent from \"./PointerComponent\";\nimport KeyboardComponent from \"./Keyboard\";\nimport { Bars } from \"./Bars\";\n\nexport type Mode = \"normal\" | \"view\";\n\nfunction App() {\n  const canvasRef = useRef(null!);\n  const [state, setState] = useState<null | State>(null);\n  const [mode, setMode] = useState<Mode>(\"normal\");\n\n  useEffect(() => {\n    if (state !== null) {\n      state.changeMode(mode);\n    }\n  }, [mode, state]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current!;\n    const newState = new State(canvas);\n    setState(newState);\n\n    const handleResize = () => {\n      const xChange = window.innerWidth - newState.renderer.domElement.width;\n      const yChange = window.innerHeight - newState.renderer.domElement.height;\n\n      newState.view.mouse1.copy(newState.view.min);\n      newState.view.mouse2.copy(newState.view.max);\n\n      newState.view.mouse1.x += xChange / 2;\n      newState.view.mouse1.y += yChange / 2;\n      newState.view.mouse2.x += xChange / 2;\n      newState.view.mouse2.y += yChange / 2;\n\n      const percent =\n        window.innerHeight / 2 / (newState.renderer.domElement.height / 2);\n\n      const minToCenterX = newState.view.mouse1.x - window.innerWidth / 2;\n      newState.view.mouse1.x = minToCenterX * percent + window.innerWidth / 2;\n      const maxToCenterX = newState.view.mouse2.x - window.innerWidth / 2;\n      newState.view.mouse2.x = maxToCenterX * percent + window.innerWidth / 2;\n\n      const minToCenterY = newState.view.mouse1.y - window.innerHeight / 2;\n      newState.view.mouse1.y = minToCenterY * percent + window.innerHeight / 2;\n      const maxToCenterY = newState.view.mouse2.y - window.innerHeight / 2;\n      newState.view.mouse2.y = maxToCenterY * percent + window.innerHeight / 2;\n\n      newState.view.update();\n\n      newState.renderer.setSize(window.innerWidth, window.innerHeight);\n      newState.camera.aspect = window.innerWidth / window.innerHeight;\n      newState.camera.updateProjectionMatrix();\n    };\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (state) {\n      const onPaste = (e: any) => {\n        e.preventDefault();\n        e.stopPropagation();\n        for (const item of e.clipboardData.items) {\n          if (item.type.indexOf(\"image\") < 0) {\n            continue;\n          }\n          let file = item.getAsFile();\n          let src = URL.createObjectURL(file);\n          state.loadImage(src);\n        }\n      };\n\n      const onDrop = (e: any) => {\n        e.preventDefault();\n        e.stopPropagation();\n        let file = e.dataTransfer.files[0];\n        let src = URL.createObjectURL(file);\n        state.loadImage(src);\n      };\n\n      const onDrag = (e: any) => {\n        e.stopPropagation();\n        e.preventDefault();\n        e.dataTransfer.dropEffect = \"copy\";\n      };\n\n      window.addEventListener(\"paste\", onPaste);\n      window.addEventListener(\"dragover\", onDrag);\n      window.addEventListener(\"drop\", onDrop);\n      return () => {\n        window.removeEventListener(\"paste\", onPaste);\n        window.removeEventListener(\"dragover\", onDrag);\n        window.removeEventListener(\"drop\", onDrop);\n      };\n    }\n  }, [state]);\n\n  return (\n    <>\n      <input id=\"fileInput\" type=\"file\" style={{ display: \"none\" }}></input>\n      <canvas ref={canvasRef}></canvas>\n      {state ? (\n        <>\n          <PointerComponent state={state} />\n          <KeyboardComponent state={state} />\n          <Bars state={state} setMode={setMode} />\n        </>\n      ) : null}\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}